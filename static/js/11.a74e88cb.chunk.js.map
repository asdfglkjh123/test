{"version":3,"sources":["views/utilities/shareschart.js","views/utilities/SharesSTAXChart.js","views/utilities/TablerIcons.js"],"names":["chartData","type","height","options","chart","id","sparkline","enabled","dataLabels","stroke","curve","width","tooltip","fixed","x","show","y","title","marker","series","data","SharesSTAXChart","theme","useTheme","navType","useSelector","state","customization","orangeDark","palette","success","dark","useEffect","newSupportChart","colors","ApexCharts","exec","Card","sx","bgcolor","grey","style","position","top","left","transform","border","boxShadow","borderRadius","borderColor","p","PrettoSlider","styled","Slider","color","backgroundColor","display","lineHeight","fontSize","background","padding","transformOrigin","DEX","React","useState","value","setValue","busdBalance","setBusdBalance","setBusdDividends","BigNumber","require","sSTXPrice","setsSTXPrice","setsSTXPriceFull","balance","setBalance","bonusAPY","setBonusAPY","totalsharesSupply","setTotalSharesSupply","myAPYFormatted","test1String","toString","valueFormatted","Web3","utils","toWei","busdBalanceFormatted","decimalPlaces","toLocaleString","undefined","myShareRate","loading","setLoading","open3","setOpen3","handleClose3","fetchsSTXPrice","maximumFractionDigits","a","getSTXPrice","then","catch","err","console","log","fetchsSTXPriceFull","getSTXPriceFull","sSTXPriceFull","fetchBalance","ggetOwnBalance","fetchBusdBalance","ggetBUSDBalance","fetchTotalDividends","ggetTotalDividends","busdDividends","fetchTotalSupply","sharesTotalSupply","load2","open","onClose","item","justifyContent","variant","textAlign","mt","component","onClick","main","content","container","xs","lg","borderLeft","borderRight","borderBottom","light","spacing","md","sm","my","inputProps","label","valueLabelDisplay","onChange","event","newValue","defaultValue","max","mb","approve","result","purchaseSharess","minHeight","minWidth"],"mappings":"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","file":"static/js/11.a74e88cb.chunk.js","sourcesContent":["// ===========================|| DASHBOARD - BAJAJ AREA CHART ||=========================== //\n\nconst chartData = {\n    type: 'area',\n    height: 150,\n    options: {\n        chart: {\n            id: 'support-chart',\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 1\n        },\n        tooltip: {\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: 'Ticket '\n            },\n            marker: {\n                show: true\n            }\n        }\n    },\n    series: [\n        {\n            data: [20, 22, 24]\n        }\n    ]\n};\n\nexport default chartData;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card } from '@mui/material';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport chartData from './shareschart';\n\n// ===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||=========================== //\n\nconst SharesSTAXChart = () => {\n    const theme = useTheme();\n    const customization = useSelector((state) => state.customization);\n    const { navType } = customization;\n\n    const orangeDark = theme.palette.success.dark;\n\n    useEffect(() => {\n        const newSupportChart = {\n            ...chartData.options,\n            colors: [orangeDark],\n            tooltip: {\n                theme: 'light'\n            }\n        };\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\n    }, [navType, orangeDark]);\n\n    return (\n        <Card sx={{ bgcolor: theme.palette.grey[900] }}>\n            <Chart {...chartData} />\n        </Card>\n    );\n};\n\nexport default SharesSTAXChart;\n","// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Button, Box, Card, CardContent, TextField, Grid, Typography, Modal } from '@mui/material';\nimport Slider from '@mui/material/Slider';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Web3 from 'web3';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SharesSTAXChart from './SharesSTAXChart';\nimport React, { useState, useEffect } from 'react';\nimport {\n    ggetOwnBalance,\n    ggetBUSDBalance,\n    getSTXPrice,\n    sharesTotalSupply,\n    getSTXPriceFull,\n    approve,\n    ggetTotalDividends,\n    purchaseSharess\n} from 'components/wallet/sharesABI';\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst marks = [\n    {\n        value: 1,\n        label: '1'\n    },\n    {\n        value: 2,\n        label: '2'\n    },\n    {\n        value: 3,\n        label: '3'\n    },\n    {\n        value: 4,\n        label: '4'\n    },\n    {\n        value: 5,\n        label: '5'\n    },\n    {\n        value: 6,\n        label: '6'\n    },\n    {\n        value: 7,\n        label: '7'\n    },\n    {\n        value: 8,\n        label: '8'\n    },\n    {\n        value: 9,\n        label: '9'\n    },\n    {\n        value: 10,\n        label: '10'\n    }\n];\nfunction valuetext(value) {\n    return `${value}C`;\n}\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 300,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    borderRadius: 7,\n    borderColor: 'black',\n    p: 3\n};\nconst PrettoSlider = styled(Slider)({\n    color: '#52af77',\n    height: 8,\n    '& .MuiSlider-track': {\n        border: 'none'\n    },\n    '& .MuiSlider-thumb': {\n        height: 24,\n        width: 24,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\n            boxShadow: 'inherit'\n        },\n        '&:before': {\n            display: 'none'\n        }\n    },\n    '& .MuiSlider-valueLabel': {\n        lineHeight: 1.2,\n        fontSize: 12,\n        background: 'unset',\n        padding: 0,\n        width: 32,\n        height: 32,\n        borderRadius: '50% 50% 50% 0',\n        backgroundColor: '#52af77',\n        transformOrigin: 'bottom left',\n        transform: 'translate(50%, -100%) rotate(-45deg) scale(0)',\n        '&:before': { display: 'none' },\n        '&.MuiSlider-valueLabelOpen': {\n            transform: 'translate(50%, -100%) rotate(-45deg) scale(1)'\n        },\n        '& > *': {\n            transform: 'rotate(45deg)'\n        }\n    }\n});\n\nconst DEX = () => {\n    const [value, setValue] = React.useState(1);\n    const [busdBalance, setBusdBalance] = React.useState(0);\n    const [busdDividends, setBusdDividends] = React.useState(0);\n    const theme = useTheme();\n    // eslint-disable-next-line global-require\n    const BigNumber = require('bignumber.js');\n    const [sSTXPrice, setsSTXPrice] = useState(0);\n    const [sSTXPriceFull, setsSTXPriceFull] = useState(0);\n    const [balance, setBalance] = useState(0);\n    const [bonusAPY, setBonusAPY] = useState(0);\n    const [totalsharesSupply, setTotalSharesSupply] = useState(0);\n    const myAPYFormatted = bonusAPY * 4.5625;\n    const test1 = value * sSTXPrice;\n    const test1String = test1.toString();\n    const valueFormatted = Web3.utils.toWei(test1String, 'ether');\n    const busdBalanceToNumber = new BigNumber(busdBalance);\n    const busdBalanceFormat = busdBalanceToNumber.decimalPlaces(2);\n    const busdBalanceFormatted = busdBalanceFormat.toLocaleString(undefined);\n    const myShareRate = (balance / totalsharesSupply) * 100;\n    const updateValue = (event, newValue) => {\n        setValue(newValue);\n    };\n    const [open, setOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n    const [open3, setOpen3] = React.useState(false);\n    const handleClose3 = () => setOpen3(false);\n    const handleOpen3 = () => setOpen3(true);\n    const handleLoadingTrue = () => setLoading(true);\n    const handleLoadingFalse = () => setLoading(false);\n    const myShareRateFormatted = myShareRate.toLocaleString(undefined, { maximumFractionDigits: 1 });\n    const fetchsSTXPrice = async () => {\n        getSTXPrice()\n            .then((sSTXPrice) => {\n                setsSTXPrice(sSTXPrice);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchsSTXPriceFull = async () => {\n        getSTXPriceFull()\n            .then((sSTXPriceFull) => {\n                setsSTXPriceFull(sSTXPriceFull);\n                console.log(sSTXPriceFull);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchBalance = async () => {\n        ggetOwnBalance()\n            .then((balance) => {\n                setBalance(balance);\n                if (balance > 20) {\n                    setBonusAPY(20);\n                } else {\n                    setBonusAPY(balance);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchBusdBalance = async () => {\n        ggetBUSDBalance()\n            .then((busdBalance) => {\n                setBusdBalance(busdBalance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchTotalDividends = async () => {\n        ggetTotalDividends()\n            .then((busdDividends) => {\n                setBusdDividends(busdDividends);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchTotalSupply = async () => {\n        sharesTotalSupply()\n            .then((totalsharesSupply) => {\n                setTotalSharesSupply(totalsharesSupply);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    useEffect(() => {\n        async function load2() {\n            fetchBalance();\n            fetchsSTXPriceFull();\n            fetchTotalSupply();\n            fetchsSTXPrice();\n            fetchBusdBalance();\n            fetchTotalDividends();\n        }\n        load2();\n    }, []);\n    return (\n        <>\n            <Modal open={open3} onClose={handleClose3} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <DoneIcon color=\"success\" fontSize=\"large\" />\n                    </Grid>\n                    <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                        Transaction completed.\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button\n                            onClick={handleClose3}\n                            sx={{\n                                mt: 3,\n                                fontSize: 15,\n                                width: 80,\n                                height: 30,\n                                color: theme.palette.grey[900],\n                                backgroundColor: theme.palette.success.main\n                            }}\n                        >\n                            Close\n                        </Button>\n                    </Grid>\n                </Box>\n            </Modal>\n            <MainCard\n                sx={{\n                    width: '100%',\n                    height: '108%',\n                    borderRadius: 0,\n                    backgroundColor: theme.palette.grey[900],\n                    border: 0\n                }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid item container sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <Grid container sx={{ justifyContent: 'center', display: 'flex' }} mt={5}>\n                            <Typography textAlign=\"center\" variant=\"h6\" color={theme.palette.grey[50]}>\n                                DEX - Swap & Liquidity\n                            </Typography>\n                        </Grid>\n                        <Grid item container xs={12} sx={{ mt: 5, display: 'flex', justifyContent: 'center' }} lg={6}>\n                            <Card\n                                sx={{\n                                    borderLeft: 1,\n                                    borderRight: 1,\n                                    borderBottom: 3,\n                                    borderColor: theme.palette.success.light,\n                                    borderRadius: 5,\n                                    boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                }}\n                            >\n                                <Grid container lg={12} sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                    <Grid container spacing={1} sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                                        <Grid item xs=\"auto\" lg=\"auto\" md=\"auto\" sm=\"auto\">\n                                            <Typography variant=\"h2\" color={theme.palette.grey[50]}>\n                                                BUY/SELL\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\" lg=\"auto\" sm=\"auto\" md=\"auto\">\n                                            <Typography variant=\"h2\" color={theme.palette.success.main} textAlign=\"left\">\n                                                STAX\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item sx={{ backgroundColor: theme.palette.grey[900], my: 0 }} lg={8} xs={9.3}>\n                                        <SharesSTAXChart />\n                                    </Grid>\n                                    <Grid item lg={12}>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"center\">\n                                            STAX PRICE CHART\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item sx={{ backgroundColor: theme.palette.grey[900], mt: 1.6 }} lg={4.7} md={7} sm={7} xs=\"auto\">\n                                        <Typography sx={{ my: 2 }} variant=\"h3\" textAlign=\"left\">\n                                            BUY STAX\n                                        </Typography>\n                                        <Grid\n                                            item\n                                            sx={{\n                                                borderRadius: 2,\n                                                border: 3,\n                                                borderColor: theme.palette.success.main,\n                                                justifyContent: 'center',\n                                                display: 'flex',\n                                                width: 150\n                                            }}\n                                        >\n                                            <TextField\n                                                sx={{\n                                                    borderBottom: 2,\n                                                    justifyContent: 'center',\n                                                    display: 'flex',\n                                                    borderColor: theme.palette.success.main\n                                                }}\n                                                inputProps={{ style: { width: 140, textAlign: 'center', color: 'white' } }}\n                                                id=\"standard-basic\"\n                                                label=\"Enter amount:\"\n                                                variant=\"standard\"\n                                                color=\"success\"\n                                            />\n                                        </Grid>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                            Current Price:\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                            BUSD Balance:\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                            BONUS APY:\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                            sSTX Balance:\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        sx={{ backgroundColor: theme.palette.grey[900], mt: 1.6 }}\n                                        lg=\"auto\"\n                                        sm=\"auto\"\n                                        md=\"auto\"\n                                        xs=\"auto\"\n                                    >\n                                        <Typography sx={{ my: 2 }} variant=\"h3\" textAlign=\"right\">\n                                            SELL STAX\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"right\">\n                                            20 BUSD\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"right\">\n                                            {sSTXPrice} BUSD\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"right\">\n                                            {busdBalanceFormatted} BUSD\n                                        </Typography>\n                                        <Typography sx={{ my: 2, color: theme.palette.success.main }} variant=\"h5\" textAlign=\"right\">\n                                            {myAPYFormatted} %\n                                        </Typography>\n                                        <Typography sx={{ my: 2, color: theme.palette.success.main }} variant=\"h5\" textAlign=\"right\">\n                                            {balance} sSTX\n                                        </Typography>\n                                    </Grid>\n                                    <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                        <Grid item lg={5} xs={7.5}>\n                                            <PrettoSlider\n                                                valueLabelDisplay=\"auto\"\n                                                aria-label=\"pretto slider\"\n                                                onChange={updateValue}\n                                                defaultValue={1}\n                                                max={10}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item sx={{ mb: 3, display: 'flex', justifyContent: 'center' }}>\n                                        <LoadingButton\n                                            loading={loading}\n                                            onClick={() => {\n                                                getSTXPriceFull();\n                                                handleLoadingTrue();\n                                                approve('0xb08ce509cafb6660e4f7b951fbb8ae63930a6aee', valueFormatted).then((result) => {\n                                                    purchaseSharess(value).then(() => {\n                                                        handleLoadingFalse();\n                                                        handleOpen3();\n                                                        fetchBalance();\n                                                        fetchTotalSupply();\n                                                        fetchsSTXPrice();\n                                                        fetchBusdBalance();\n                                                        fetchTotalDividends();\n                                                    });\n                                                });\n                                            }}\n                                            sx={{\n                                                fontSize: 18,\n                                                minHeight: 45,\n                                                minWidth: 140,\n                                                bgcolor: theme.palette.success.main,\n                                                backgroundColor: theme.palette.success.main,\n                                                color: theme.palette.grey[900]\n                                            }}\n                                        >\n                                            SWAP\n                                        </LoadingButton>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default DEX;\n"],"sourceRoot":""}