{"version":3,"sources":["views/utilities/staxlogo.js","views/utilities/StakingCard.js","views/utilities/Typography.js"],"names":["StaxLogo","useTheme","Grid","justifyContent","alignContent","sx","height","width","src","Stax","alt","style","position","top","left","transform","bgcolor","border","boxShadow","borderRadius","borderColor","p","StakingCard","theme","useState","balance","setBalance","balanceFormatted","BigNumber","decimalPlaces","toLocaleString","undefined","preAmount","setPreAmount","stakeAmount","setStakeAmount","stakeAmountF","Web3","utils","toWei","toString","stakeAmountFormatted","toBN","stakeName","setStakeName","Number18Decimals","sharesBalance","setSharesBalance","boostedSharesBalance","setBoostedSharesBalance","stakesList","setStakesList","currentClaimable","setCurrentClaimable","currentStaked","setCurrentStaked","withdrawSum","setWithdrawSum","withdrawSumFormatted","withdrawAFormatted","stakedd","React","loading","setLoading","loading2","setLoading2","loading3","setLoading3","loading4","setLoading4","loading5","setLoading5","setLoading6","open","setOpen","open2","setOpen2","open4","setOpen4","open5","setOpen5","handleClose","handleOpen","handleClose2","handleOpen2","handleClose4","handleClose5","handleLoadingFalse","handleLoadingTrue","handleLoadingFalse2","handleLoadingTrue2","handleLoadingFalse3","handleLoadingTrue3","handleLoadingFalse4","handleLoadingTrue4","handleLoadingFalse5","handleLoadingTrue5","currentIndex","setCurrentIndex","myAPY","maximumFractionDigits","myAPY2","fetchStaxBalance","a","ggetStaxBalance","then","catch","err","console","log","fetchStakesBalance","stakeHas","balancee","fetchSharesBalance","ggetOwnBalance","useEffect","load","Modal","onBackdropClick","onClose","Box","variant","textAlign","component","item","container","mb","mt","display","ml","xs","palette","success","main","lg","TextField","onChange","e","target","value","inputProps","color","id","label","Button","onClick","size","LoadingButton","withdrawAmount","fontSize","grey","backgroundColor","stakeStax","minHeight","minWidth","my","spacing","md","sm","Card","maxWidth","borderLeft","borderRight","borderBottom","light","pt","Tooltip","title","mx","TableContainer","Table","TableHead","TableRow","TableCell","map","total","index","TableBody","stakename","sharesbonus","amount","claimable","dateSeparator","format","showTime","since","Typography","gridSpacing"],"mappings":"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","file":"static/js/14.d57121cf.chunk.js","sourcesContent":["// project imports\nimport Stax from '../../assets/StaxLogoOnly.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst StaxLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" alignContent=\"center\" sx={{ height: 100 }}>\n                <img height={80} width=\"height\" src={Stax} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default StaxLogo;\n","import React, { useState, useEffect } from 'react';\n\n// material-ui\nimport SimpleDateTime from 'react-simple-timestamp-to-date';\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Button,\n    Box,\n    Card,\n    Grid,\n    Table,\n    TableContainer,\n    TextField,\n    Paper,\n    Tooltip,\n    TableHead,\n    Typography,\n    TableBody,\n    TableRow,\n    TableCell,\n    Modal\n} from '@mui/material';\n// project imports\nimport StaxLogo from './staxlogo';\nimport DoneIcon from '@mui/icons-material/Done';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { ggetStaxBalance, withdrawAmount, ggetOwnBalance, stakeStax, stakeHas } from 'components/wallet/sharesABI';\nimport BigNumber from 'bignumber.js';\nimport Web3 from 'web3';\nimport { LoadingButton } from '@mui/lab';\nimport LayersIcon from '@mui/icons-material/Layers';\nimport XsStaxLogo from './xsStaxLogo';\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 300,\n    bgcolor: 'background.paper',\n    border: '2px solid #000000',\n    boxShadow: 24,\n    borderRadius: 7,\n    borderColor: 'black',\n    p: 3\n};\nconst StakingCard = () => {\n    const theme = useTheme();\n    const [balance, setBalance] = useState(0);\n    const balanceToNumber = new BigNumber(balance);\n    const balanceFormat = balanceToNumber.decimalPlaces(2);\n    const balanceFormatted = balanceFormat.toLocaleString(undefined);\n    const [preAmount, setPreAmount] = useState(0);\n    const [stakeAmount, setStakeAmount] = useState(0);\n    const stakeAmountF = Web3.utils.toWei(stakeAmount.toString(), 'ether');\n    const stakeAmountFormatted = Web3.utils.toBN(stakeAmountF);\n    const [stakeName, setStakeName] = useState(0);\n    const Number18Decimals = 1000000000000000000;\n    const [sharesBalance, setSharesBalance] = useState(0);\n    const [boostedSharesBalance, setBoostedSharesBalance] = useState(0);\n    const [stakesList, setStakesList] = useState([[], []]);\n    const [currentClaimable, setCurrentClaimable] = useState(0);\n    const [currentStaked, setCurrentStaked] = useState(0);\n    const [withdrawSum, setWithdrawSum] = useState(0);\n    const withdrawSumFormatted = Web3.utils.toWei(withdrawSum.toString(), 'ether');\n    const withdrawAFormatted = Web3.utils.toBN(withdrawSumFormatted);\n    const [staked, stakedd] = stakesList;\n    // POP - UPS\n    const [loading, setLoading] = React.useState(false);\n    const [loading2, setLoading2] = React.useState(false);\n    const [loading3, setLoading3] = React.useState(false);\n    const [loading4, setLoading4] = React.useState(false);\n    const [loading5, setLoading5] = React.useState(false);\n    const [loading6, setLoading6] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [open2, setOpen2] = React.useState(false);\n    const [open4, setOpen4] = React.useState(false);\n    const [open5, setOpen5] = React.useState(false);\n    const handleClose = () => setOpen(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose2 = () => setOpen2(false);\n    const handleOpen2 = () => setOpen2(true);\n    const handleClose4 = () => setOpen4(false);\n    const handleOpen4 = () => setOpen4(true);\n    const handleClose5 = () => setOpen5(false);\n    const handleOpen5 = () => setOpen5(true);\n    const handleLoadingFalse = () => setLoading(false);\n    const handleLoadingTrue = () => setLoading(true);\n    const handleLoadingFalse2 = () => setLoading2(false);\n    const handleLoadingTrue2 = () => setLoading2(true);\n    const handleLoadingFalse3 = () => setLoading3(false);\n    const handleLoadingTrue3 = () => setLoading3(true);\n    const handleLoadingFalse4 = () => setLoading4(false);\n    const handleLoadingTrue4 = () => setLoading4(true);\n    const handleLoadingFalse5 = () => setLoading5(false);\n    const handleLoadingTrue5 = () => setLoading5(true);\n    const handleLoadingFalse6 = () => setLoading6(false);\n    const handleLoadingTrue6 = () => setLoading6(true);\n    const updateStakeAmount = (event, newValue) => {\n        setStakeAmount(newValue);\n    };\n    //  WITHDRAWING INDEX\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const myAPY = (9.125 + sharesBalance * 4.5625).toLocaleString(undefined, { maximumFractionDigits: 2 });\n    const myAPY2 = (9.125 + boostedSharesBalance * 4.5625).toLocaleString(undefined, { maximumFractionDigits: 2 });\n    //  FETCHING BLOCKCHAIN DATA\n    const fetchStaxBalance = async () => {\n        ggetStaxBalance()\n            .then((balance) => {\n                setBalance(balance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStakesBalance = async () => {\n        stakeHas(true)\n            .then((balancee) => {\n                setStakesList(balancee);\n                console.log(balancee);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchSharesBalance = async () => {\n        ggetOwnBalance()\n            .then((balance) => {\n                if (balance > 30) {\n                    setBoostedSharesBalance(30);\n                    setSharesBalance(15);\n                } else if (balance > 15) {\n                    setSharesBalance(15);\n                    setBoostedSharesBalance(balance);\n                } else {\n                    setSharesBalance(balance);\n                    setBoostedSharesBalance(balance);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    useEffect(() => {\n        async function load() {\n            fetchStaxBalance();\n            stakeHas();\n            fetchSharesBalance();\n            fetchStakesBalance();\n        }\n        load();\n    }, []);\n    return (\n        <>\n            <Modal\n                open={open}\n                onBackdropClick={() => {\n                    handleClose();\n                    handleLoadingFalse3();\n                }}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: 90% penalty is applied to the `withdraw amount` to all pre-mature stakes.\n                    </Typography>\n                    <Grid item container sx={{ mb: 1, mt: 2, display: 'flex', justifyContent: 'center' }}>\n                        <Grid item container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                                Rewards:{' '}\n                                {(currentClaimable / Number18Decimals).toLocaleString(undefined, {\n                                    maximumFractionDigits: 2\n                                })}\n                            </Typography>\n                            <XsStaxLogo />\n                        </Grid>\n                        <Grid item container sx={{ mt: 1, display: 'flex', justifyContent: 'center' }}>\n                            <Typography variant=\"h5\" textAlign=\"center\" sx={{ ml: 2 }} component=\"h2\">\n                                Staked:{' '}\n                                {(currentStaked / Number18Decimals).toLocaleString(undefined, {\n                                    maximumFractionDigits: 2\n                                })}\n                            </Typography>\n                            <XsStaxLogo />\n                        </Grid>\n                    </Grid>\n                    <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                        <Grid\n                            item\n                            container\n                            xs=\"auto\"\n                            sx={{ border: 2, borderColor: theme.palette.success.main, borderRadius: 2 }}\n                            lg=\"auto\"\n                        >\n                            <TextField\n                                onChange={(e) => setWithdrawSum(e.target.value)}\n                                inputProps={{ style: { width: 100, textAlign: 'center', color: 'white' } }}\n                                id=\"standard-basic\"\n                                value={withdrawSum}\n                                variant=\"standard\"\n                                color=\"success\"\n                                label=\"Enter amount:\"\n                            />\n                            <Button\n                                variant=\"text\"\n                                onClick={() => setWithdrawSum(currentStaked / 1000000000000000000)}\n                                size=\"small\"\n                                sx={{ color: theme.palette.success.main, borderColor: theme.palette.success.main }}\n                            >\n                                Max\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid item sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <LoadingButton\n                            loading={loading5}\n                            onClick={() => {\n                                handleLoadingTrue5();\n                                withdrawAmount(withdrawAFormatted, currentIndex).then(() => {\n                                    handleLoadingFalse5();\n                                    setOpen(false);\n                                    handleLoadingFalse3();\n                                    fetchStakesBalance();\n                                });\n                            }}\n                            sx={{\n                                mt: 2.5,\n                                fontSize: 15,\n                                width: 80,\n                                height: 30,\n                                color: theme.palette.grey[900],\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main\n                            }}\n                        >\n                            Withdraw\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open4}\n                onClose={handleClose4}\n                onBackdropClick={() => {\n                    handleClose4();\n                    handleLoadingFalse2();\n                    handleLoadingFalse();\n                }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: Your stake will be in `pre-mature` phase for the first 45 days and will face heavy penatlies in case of\n                        any withdraws / claims (90% fee on the staked, 5% on the rewards and minus 1 SHARESBONUS per Transaction).\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <LoadingButton\n                            loading={loading2}\n                            onClick={() => {\n                                handleLoadingTrue2();\n                                stakeStax(stakeAmountFormatted, stakeName).then(() => {\n                                    handleClose4();\n                                    handleLoadingFalse2();\n                                    handleLoadingFalse();\n                                    fetchStakesBalance();\n                                    fetchStaxBalance();\n                                });\n                            }}\n                            sx={{\n                                fontSize: 18,\n                                minHeight: 45,\n                                minWidth: 140,\n                                mt: 3,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Stake\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open5}\n                onClose={handleClose5}\n                onBackdropClick={() => {\n                    handleClose5();\n                    handleLoadingFalse6();\n                    handleLoadingFalse2();\n                    handleLoadingFalse();\n                }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: Your stake will be in `pre-mature` phase for the first 1 year. You will NOT be able to withdraw any\n                        amount 365 days after creating the stake. However, claiming rewards is possible and 5% fee is applied on each claim\n                        only during the pre-mature phase. That amount is burnt forever. Each claim/withdraw transaction decreases the\n                        stake`s SHARESBONUS by 1.\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <LoadingButton\n                            loading={loading2}\n                            onClick={() => {\n                                handleLoadingTrue2();\n                                stakeStax(stakeAmountFormatted, stakeName).then(() => {\n                                    handleClose5();\n                                    handleLoadingFalse2();\n                                    handleLoadingFalse();\n                                    fetchStakesBalance();\n                                    fetchStaxBalance();\n                                });\n                            }}\n                            sx={{\n                                fontSize: 18,\n                                minHeight: 45,\n                                minWidth: 140,\n                                mt: 3,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Boost\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open2}\n                onClose={handleClose2}\n                onBackdropClick={() => {\n                    handleClose2();\n                    handleLoadingFalse5();\n                    handleLoadingFalse4();\n                }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: Each claim reduces the SHARESBONUS by 1. Therefore, the stake APR will be reduced by ~4,56% on each\n                        claim/withdraw.\n                    </Typography>\n                    <Grid item container sx={{ display: 'flex', my: 2, justifyContent: 'center' }}>\n                        <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\" key={currentIndex}>\n                            Amount to be claimed:{' '}\n                            {(currentClaimable / Number18Decimals).toLocaleString(undefined, {\n                                maximumFractionDigits: 2\n                            })}\n                        </Typography>\n                        <XsStaxLogo />\n                    </Grid>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <LoadingButton\n                            loading={loading5}\n                            onClick={() => {\n                                handleLoadingTrue5();\n                                withdrawAmount(0, currentIndex)\n                                    .then(() => {\n                                        handleLoadingFalse5();\n                                        setOpen2(false);\n                                        handleLoadingFalse4();\n                                        fetchStakesBalance();\n                                    })\n                                    .catch(() => {\n                                        handleLoadingFalse5();\n                                    });\n                            }}\n                            sx={{\n                                mt: 1,\n                                fontSize: 16,\n                                minHeight: 30,\n                                minWidth: 80,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Claim\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Grid item container spacing={2} xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 7 }}>\n                    <Typography textAlign=\"center\" variant=\"h1\" color={theme.palette.grey[50]}>\n                        Stake\n                    </Typography>\n                    <LayersIcon color=\"success\" fontSize=\"large\" sx={{ mt: 2, ml: 1 }} />\n                </Grid>\n                <Grid item container lg={3.85} md={7} xs={11} sm={6.5} sx={{ display: 'flex', justifyContent: 'center', mt: 6 }}>\n                    <Card\n                        sx={{\n                            maxWidth: 1900,\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                        }}\n                    >\n                        <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                            <Grid item sx={{ backgroundColor: theme.palette.grey[900], mt: 2 }} lg={3.6} xs=\"auto\">\n                                <StaxLogo />\n                            </Grid>\n                            <Grid item lg=\"auto\" xs=\"auto\" sx={{ ml: 0.8, mt: 5 }}>\n                                <Typography variant=\"h2\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Stake\n                                </Typography>\n                            </Grid>\n                            <Grid item lg=\"auto\" xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 0.7, mt: 5 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    STAX\n                                </Typography>\n                            </Grid>\n                            <Grid item lg={1} xs=\"auto\" sx={{ mt: 5, pt: 0.2 }}>\n                                <Tooltip\n                                    sx={{ color: theme.palette.success.main }}\n                                    title={\n                                        <Typography\n                                            sx={{\n                                                color: theme.palette.success.main\n                                            }}\n                                        >\n                                            Stakes have name, staked amount and SHARESBONUS. Users choose the name and tokens to be staked.\n                                            When creating a stake, the smart contract will get the user`s current sSTX balance and save it\n                                            as SHARESBONUS in the stake`s properties.\n                                        </Typography>\n                                    }\n                                >\n                                    <InfoIcon />\n                                </Tooltip>\n                            </Grid>\n                            <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    container\n                                    xs=\"auto\"\n                                    sx={{ border: 2, borderColor: theme.palette.success.main, borderRadius: 2 }}\n                                    lg=\"auto\"\n                                >\n                                    <TextField\n                                        onChange={(e) => setStakeName(e.target.value)}\n                                        inputProps={{ style: { width: 100, textAlign: 'center', color: 'white' } }}\n                                        id=\"standard-basic\"\n                                        value={stakeName}\n                                        variant=\"standard\"\n                                        color=\"success\"\n                                        label=\"Enter stake name:\"\n                                    />\n                                    <Button\n                                        variant=\"text\"\n                                        onClick={() => setStakeName('Default')}\n                                        size=\"small\"\n                                        sx={{ color: theme.palette.success.main, borderColor: theme.palette.success.main }}\n                                    >\n                                        Default\n                                    </Button>\n                                </Grid>\n                                <Grid item container xs={12} sx={{ display: 'flex', mt: 0.7, justifyContent: 'center' }}>\n                                    <Typography variant=\"h5\" textAlign=\"center\">\n                                        Enter stake name\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    container\n                                    xs=\"auto\"\n                                    sx={{ border: 2, borderColor: theme.palette.success.main, borderRadius: 2 }}\n                                    lg=\"auto\"\n                                >\n                                    <TextField\n                                        onChange={(e) => setPreAmount(e.target.value)}\n                                        inputProps={{ style: { width: 100, textAlign: 'center', color: 'white' } }}\n                                        id=\"standard-basic\"\n                                        value={preAmount}\n                                        variant=\"standard\"\n                                        color=\"success\"\n                                        label=\"Enter amount:\"\n                                    />\n                                    <Button\n                                        variant=\"text\"\n                                        onClick={() => setPreAmount(balanceFormatted)}\n                                        size=\"small\"\n                                        sx={{ color: theme.palette.success.main, borderColor: theme.palette.success.main }}\n                                    >\n                                        Max\n                                    </Button>\n                                </Grid>\n                                <Grid item container xs={12} sx={{ mt: 0.7, display: 'flex', justifyContent: 'center' }}>\n                                    <Typography variant=\"h5\" textAlign=\"left\">\n                                        Balance: {balanceFormatted}\n                                    </Typography>\n                                    <XsStaxLogo />\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 5, display: 'flex', justifyContent: 'center' }}>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                        SHARESBONUS:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                        {sharesBalance} / {boostedSharesBalance}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\" sx={{ ml: 0.7, mt: -0.3 }}>\n                                    <Tooltip\n                                        sx={{ color: theme.palette.success.main }}\n                                        title={\n                                            <Typography\n                                                sx={{\n                                                    color: theme.palette.success.main\n                                                }}\n                                            >\n                                                SHARESBONUS - shows your current sSTX balance. Each sSTX in your wallet, increases your APY\n                                                by 5%. An user may hold unlimited amount of sSTX but the SHARESBONUS is limited to 15 when\n                                                opening a regular stake or 30 when opening a Boosted Stake. Regular Stake maximum APR:\n                                                77.56%. Boosted Stake maximum APR: 146%.\n                                            </Typography>\n                                        }\n                                    >\n                                        <InfoIcon />\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    sx={{\n                                        backgroundColor: theme.palette.grey[900],\n                                        mt: 5,\n                                        mb: 3\n                                    }}\n                                    lg=\"auto\"\n                                >\n                                    <LoadingButton\n                                        loading={loading}\n                                        onClick={() => {\n                                            setStakeAmount(preAmount);\n                                            handleLoadingTrue();\n                                            handleOpen4();\n                                        }}\n                                        sx={{\n                                            fontSize: 18,\n                                            minHeight: 30,\n                                            minWidth: 100,\n                                            bgcolor: theme.palette.success.main,\n                                            backgroundColor: theme.palette.success.main,\n                                            color: theme.palette.grey[900]\n                                        }}\n                                    >\n                                        Stake\n                                    </LoadingButton>\n                                    <LoadingButton\n                                        loading={loading}\n                                        onClick={() => {\n                                            setStakeAmount(preAmount);\n                                            handleLoadingTrue();\n                                            handleOpen5();\n                                        }}\n                                        sx={{\n                                            fontSize: 18,\n                                            minHeight: 30,\n                                            minWidth: 100,\n                                            ml: 2,\n                                            bgcolor: theme.palette.success.main,\n                                            backgroundColor: theme.palette.success.main,\n                                            color: theme.palette.grey[900]\n                                        }}\n                                    >\n                                        Boost\n                                    </LoadingButton>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n                <Grid item container lg={3.85} xs={11} md={7} sm={6.5} sx={{ display: 'flex', justifyContent: 'center', mt: 6 }}>\n                    <Card\n                        sx={{\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)',\n                            mb: 1\n                        }}\n                    >\n                        <Grid\n                            container\n                            sx={{\n                                backgroundColor: theme.palette.grey[900],\n                                mt: 3,\n                                display: 'flex',\n                                justifyContent: 'center'\n                            }}\n                        >\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    APY /\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    REWARDS RATE\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs={10}>\n                                <Typography variant=\"h5\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    When creating a stake, the contract will save the staker`s` sSTX balance as SHARESBONUS. 1 SHARESBONUS +\n                                    ~4.56% APY.\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Initial APY:\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    9.125%\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Current APR:\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ my: 4, ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    {myAPY}% / {myAPY2}%\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\" sx={{ my: 4 }}>\n                                <Tooltip\n                                    sx={{ color: theme.palette.success.main }}\n                                    title={\n                                        <Typography\n                                            sx={{\n                                                color: theme.palette.success.main\n                                            }}\n                                        >\n                                            The current APR is calculed by following the following formula: 9.125% + SHARESBONUS * 4.5625%\n                                            where SHARESBONUS is limited to 15 (when choosing `Regular Stake`) or 30 when opening a `Boosted\n                                            Stake`. Therefore, the maximum APR of a `Regular Stake` is 77.56% and the maximum APR of a\n                                            `Boosted Stake` is 146%.\n                                        </Typography>\n                                    }\n                                >\n                                    <InfoIcon />\n                                </Tooltip>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <Card\n                        sx={{\n                            width: '100%',\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)',\n                            mb: 1\n                        }}\n                    >\n                        <Grid item container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item lg=\"auto\">\n                                <Typography variant=\"h2\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Regular vs\n                                </Typography>\n                            </Grid>\n                            <Grid item lg=\"auto\">\n                                <Typography variant=\"h2\" sx={{ my: 4, ml: 0.6 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    Boosted Stake\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs={4} lg={5} sm={4}>\n                                <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Maximum APR: 77.56%\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={4} lg={5} sm={4}>\n                                <Typography variant=\"h4\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    Maximum APR: 146%\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs={4} lg={5.5} sm={4}>\n                                <Typography variant=\"h4\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Pre-mature phase: 45 days\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={4} lg={5.5} sm={4}>\n                                <Typography variant=\"h4\" sx={{ my: 4, ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    Pre-mature phase: 1 year\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n            </Grid>\n            <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 5, mb: 20 }}>\n                <Grid\n                    item\n                    container\n                    lg={3.95}\n                    md={7}\n                    xs={12}\n                    sm={8}\n                    sx={{\n                        mt: 5,\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <Grid item container lg={12} sx={{ display: 'flex', mb: 2, justifyContent: 'center' }}>\n                        <Grid item lg={6}>\n                            <Typography textAlign=\"center\" variant=\"h2\">\n                                Regular Stakes\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        lg={11.5}\n                        md={12}\n                        xs={11}\n                        sm={10}\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            mx: 1,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                        }}\n                    >\n                        <TableContainer sx={{ width: 350, borderRadius: 5 }}>\n                            <Table sx={{ width: 'max-width' }} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                NAME\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                SHARESBONUS\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                STAKED\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                REWARDS\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Grid container>\n                                                <Grid item xs={6} sx={{ mt: 0.9 }}>\n                                                    <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                        TUM\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Tooltip\n                                                        sx={{ mt: 0.6, color: theme.palette.success.main }}\n                                                        title={\n                                                            <Typography\n                                                                sx={{\n                                                                    color: theme.palette.success.main\n                                                                }}\n                                                            >\n                                                                TUM stands for Time Until Mature. Each stake will face heavy penalty (90% on\n                                                                the staked balane) if the stake is ended before the 45th day.\n                                                            </Typography>\n                                                        }\n                                                    >\n                                                        <InfoIcon />\n                                                    </Tooltip>\n                                                </Grid>\n                                            </Grid>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                ACTIVITIES\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                {stakedd.map((total, index) => (\n                                    <TableBody key={index}>\n                                        <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {total.stakename}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {total.sharesbonus} / {total.sharesbonus * 4.56 + 9.12}%\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.amount / Number18Decimals).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.claimable / Number18Decimals).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    <SimpleDateTime dateSeparator=\"/\" format=\"MYD\" showTime=\"0\">\n                                                        {total.since}\n                                                    </SimpleDateTime>\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Grid item container xs={12} sx={{ width: 170 }}>\n                                                    <LoadingButton\n                                                        loading={loading3}\n                                                        onClick={() => {\n                                                            setCurrentClaimable(total.claimable);\n                                                            setCurrentStaked(total.amount);\n                                                            handleLoadingTrue3();\n                                                            handleOpen();\n                                                            setCurrentIndex(index);\n                                                        }}\n                                                        sx={{\n                                                            fontSize: 15,\n                                                            width: 80,\n                                                            height: 23,\n                                                            color: theme.palette.grey[900],\n                                                            bgcolor: theme.palette.success.main,\n                                                            backgroundColor: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Withdraw\n                                                    </LoadingButton>\n                                                    <LoadingButton\n                                                        loading={loading4}\n                                                        onClick={() => {\n                                                            setCurrentClaimable(total.claimable);\n                                                            handleLoadingTrue4();\n                                                            handleOpen2();\n                                                            setCurrentIndex(index);\n                                                        }}\n                                                        sx={{\n                                                            ml: 1,\n                                                            fontSize: 15,\n                                                            width: 80,\n                                                            height: 23,\n                                                            color: theme.palette.grey[900],\n                                                            bgcolor: theme.palette.success.main,\n                                                            backgroundColor: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Claim\n                                                    </LoadingButton>\n                                                </Grid>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                ))}\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n                <Grid\n                    item\n                    container\n                    lg={3.95}\n                    xs={12}\n                    md={7}\n                    sm={7.4}\n                    sx={{\n                        mt: 5,\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <Grid item container lg={12} sx={{ display: 'flex', justifyContent: 'center', mb: 2 }}>\n                        <Grid item lg={6}>\n                            <Typography textAlign=\"center\" variant=\"h2\" sx={{ color: theme.palette.success.main }}>\n                                Boosted Stakes\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        lg={11.5}\n                        xs={11}\n                        md={12}\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                        }}\n                    >\n                        <TableContainer sx={{ width: 350, borderRadius: 5 }}>\n                            <Table sx={{ width: 'max-width' }} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                NAME\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                SHARESBONUS\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                STAKED\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                REWARDS\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Grid container>\n                                                <Grid item xs={6} sx={{ mt: 0.9 }}>\n                                                    <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                        TUM\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Tooltip\n                                                        sx={{ mt: 0.6, color: theme.palette.success.main }}\n                                                        title={\n                                                            <Typography\n                                                                sx={{\n                                                                    color: theme.palette.success.main\n                                                                }}\n                                                            >\n                                                                TUM stands for Time Until Mature. Each stake will face heavy penalty (90% on\n                                                                the staked balane) if the stake is ended before the 45th day.\n                                                            </Typography>\n                                                        }\n                                                    >\n                                                        <InfoIcon />\n                                                    </Tooltip>\n                                                </Grid>\n                                            </Grid>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                ACTIVITIES\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                {stakedd.map((total, index) => (\n                                    <TableBody key={index}>\n                                        <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {total.stakename}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {total.sharesbonus} / {total.sharesbonus * 4.56 + 9.12}%\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.amount / Number18Decimals).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.claimable / Number18Decimals).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    <SimpleDateTime dateSeparator=\"/\" format=\"MYD\" showTime=\"0\">\n                                                        {total.since}\n                                                    </SimpleDateTime>\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Grid item container xs={12} sx={{ width: 170 }}>\n                                                    <LoadingButton\n                                                        loading={loading3}\n                                                        onClick={() => {\n                                                            setCurrentClaimable(total.claimable);\n                                                            setCurrentStaked(total.amount);\n                                                            handleLoadingTrue3();\n                                                            handleOpen();\n                                                            setCurrentIndex(index);\n                                                        }}\n                                                        sx={{\n                                                            fontSize: 15,\n                                                            width: 80,\n                                                            height: 23,\n                                                            color: theme.palette.grey[900],\n                                                            bgcolor: theme.palette.success.main,\n                                                            backgroundColor: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Withdraw\n                                                    </LoadingButton>\n                                                    <LoadingButton\n                                                        loading={loading4}\n                                                        onClick={() => {\n                                                            setCurrentClaimable(total.claimable);\n                                                            handleLoadingTrue4();\n                                                            handleOpen2();\n                                                            setCurrentIndex(index);\n                                                        }}\n                                                        sx={{\n                                                            ml: 1,\n                                                            fontSize: 15,\n                                                            width: 80,\n                                                            height: 23,\n                                                            color: theme.palette.grey[900],\n                                                            bgcolor: theme.palette.success.main,\n                                                            backgroundColor: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Claim\n                                                    </LoadingButton>\n                                                </Grid>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                ))}\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default StakingCard;\n","import { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport StakingCard from './StakingCard';\n// ==============================|| TYPOGRAPHY ||============================== //\n\nconst Typography = () => {\n    useTheme();\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item lg={12}>\n                <StakingCard />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Typography;\n"],"sourceRoot":""}