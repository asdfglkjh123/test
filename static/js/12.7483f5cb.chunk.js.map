{"version":3,"sources":["assets/StaxLogoOnly.png","views/utilities/staxlogo.js","views/utilities/StakingCard.js","views/utilities/Typography.js"],"names":["StaxLogo","useTheme","Grid","justifyContent","alignContent","sx","height","width","src","Stax","alt","style","position","top","left","transform","bgcolor","border","boxShadow","borderRadius","borderColor","p","StakingCard","theme","useState","balance","setBalance","balanceFormatted","BigNumber","decimalPlaces","toLocaleString","undefined","stakeAmount","setStakeAmount","stakeName","setStakeName","Number18Decimals","stakeAmountFormatted","Web3","utils","toWei","toString","stakeAFormatted","toBN","sharesBalance","setSharesBalance","stakesList","setStakesList","withdrawSum","setWithdrawSum","withdrawSumFormatted","withdrawAFormatted","stakedd","React","loading","setLoading","loading2","setLoading2","loading3","setLoading3","loading4","setLoading4","loading5","setLoading5","submitted","setSubmitted","open","setOpen","open2","setOpen2","open3","setOpen3","open4","setOpen4","handleClose3","handleClose4","handleLoadingTrue5","handleSubmitTrue","handleSubmitFalse","currentIndex","setCurrentIndex","myAPY","fetchStaxBalance","a","ggetStaxBalance","then","catch","err","console","log","fetchStakesBalance","stakeHas","balancee","fetchSharesBalance","ggetOwnBalance","useEffect","load","Modal","onClose","Box","variant","textAlign","component","LoadingButton","onClick","withdrawAmount","mt","fontSize","color","palette","grey","success","main","backgroundColor","TextField","required","borderBottom","ml","onChange","e","target","value","inputProps","id","item","display","stakeStax","minHeight","minWidth","Button","container","spacing","xs","lg","md","sm","Divider","Card","maxWidth","borderLeft","borderRight","light","pt","Tooltip","title","my","type","mb","cotainer","Paper","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","map","total","index","stakename","sharesbonus","amount","maximumFractionDigits","claimable","dateSeparator","format","showTime","since","Typography","gridSpacing"],"mappings":"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","file":"static/js/12.7483f5cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/StaxLogoOnly.17f6a5b9.png\";","// project imports\nimport Stax from '../../assets/StaxLogoOnly.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst StaxLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" alignContent=\"center\" sx={{ height: 100 }}>\n                <img height={80} width=\"height\" src={Stax} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default StaxLogo;\n","import React, { useState, useEffect } from 'react';\n\n// material-ui\nimport SimpleDateTime from 'react-simple-timestamp-to-date';\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Button,\n    Box,\n    Card,\n    Divider,\n    Grid,\n    Table,\n    Paper,\n    TableContainer,\n    TextField,\n    Tooltip,\n    TableHead,\n    Typography,\n    TableBody,\n    TableRow,\n    TableCell,\n    Modal\n} from '@mui/material';\n// project imports\nimport StaxLogo from './staxlogo';\nimport DoneIcon from '@mui/icons-material/Done';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { ggetStaxBalance, withdrawAmount, ggetOwnBalance, stakeStax, stakeHas } from 'components/wallet/sharesABI';\nimport BigNumber from 'bignumber.js';\nimport Web3 from 'web3';\nimport { LoadingButton } from '@mui/lab';\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 300,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    borderRadius: 7,\n    borderColor: 'black',\n    p: 3\n};\nconst StakingCard = () => {\n    const theme = useTheme();\n    const [balance, setBalance] = useState(0);\n    const balanceToNumber = new BigNumber(balance);\n    const balanceFormat = balanceToNumber.decimalPlaces(2);\n    const balanceFormatted = balanceFormat.toLocaleString(undefined);\n    const [stakeAmount, setStakeAmount] = useState(0);\n    const [stakeName, setStakeName] = useState(0);\n    const Number18Decimals = 1000000000000000000;\n    const stakeAmountFormatted = Web3.utils.toWei(stakeAmount.toString(), 'ether');\n    const stakeAFormatted = Web3.utils.toBN(stakeAmountFormatted);\n    const [sharesBalance, setSharesBalance] = useState(0);\n    const [stakesList, setStakesList] = useState([[], []]);\n    const [withdrawSum, setWithdrawSum] = useState(0);\n    const withdrawSumFormatted = Web3.utils.toWei(withdrawSum.toString(), 'ether');\n    const withdrawAFormatted = Web3.utils.toBN(withdrawSumFormatted);\n    const [staked, stakedd] = stakesList;\n    // POP - UPS\n    const [loading, setLoading] = React.useState(false);\n    const [loading2, setLoading2] = React.useState(false);\n    const [loading3, setLoading3] = React.useState(false);\n    const [loading4, setLoading4] = React.useState(false);\n    const [loading5, setLoading5] = React.useState(false);\n    const [submitted, setSubmitted] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [open2, setOpen2] = React.useState(false);\n    const [open3, setOpen3] = React.useState(false);\n    const [open4, setOpen4] = React.useState(false);\n    const handleClose = () => setOpen(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose2 = () => setOpen3(false);\n    const handleOpen2 = () => setOpen2(true);\n    const handleClose3 = () => setOpen3(false);\n    const handleOpen3 = () => setOpen3(true);\n    const handleClose4 = () => setOpen4(false);\n    const handleOpen4 = () => setOpen4(true);\n    const handleLoadingFalse = () => setLoading(false);\n    const handleLoadingTrue = () => setLoading(true);\n    const handleLoadingFalse2 = () => setLoading2(false);\n    const handleLoadingTrue2 = () => setLoading2(true);\n    const handleLoadingFalse3 = () => setLoading3(false);\n    const handleLoadingTrue3 = () => setLoading3(true);\n    const handleLoadingFalse4 = () => setLoading4(false);\n    const handleLoadingTrue4 = () => setLoading4(true);\n    const handleLoadingFalse5 = () => setLoading5(false);\n    const handleLoadingTrue5 = () => setLoading5(true);\n    const handleSubmitTrue = () => setSubmitted(true);\n    const handleSubmitFalse = () => setSubmitted(false);\n    //  WITHDRAWING INDEX\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const myAPY = 9.125 + sharesBalance * 4.5625;\n    //  FETCHING BLOCKCHAIN DATA\n    const fetchStaxBalance = async () => {\n        ggetStaxBalance()\n            .then((balance) => {\n                setBalance(balance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStakesBalance = async () => {\n        stakeHas(true)\n            .then((balancee) => {\n                setStakesList(balancee);\n                console.log(balancee);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchSharesBalance = async () => {\n        ggetOwnBalance()\n            .then((balance) => {\n                if (balance > 20) {\n                    setSharesBalance(20);\n                } else {\n                    setSharesBalance(balance);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    useEffect(() => {\n        async function load() {\n            fetchStaxBalance();\n            stakeHas();\n            fetchSharesBalance();\n            fetchStakesBalance();\n        }\n        load();\n    }, []);\n    return (\n        <>\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: 90% penalty is applied to the `withdraw amount` to all pre-mature stakes.\n                    </Typography>\n                    <LoadingButton\n                        loading={loading5}\n                        onClick={() => {\n                            handleLoadingTrue5();\n                            withdrawAmount(withdrawAFormatted, currentIndex).then(() => {\n                                handleSubmitTrue().then(() => {\n                                    handleLoadingFalse5();\n                                    setOpen(false);\n                                    setOpen3(true);\n                                    handleLoadingFalse3();\n                                    fetchStakesBalance();\n                                });\n                            });\n                        }}\n                        sx={{\n                            mt: 2.5,\n                            fontSize: 15,\n                            width: 80,\n                            height: 30,\n                            color: theme.palette.grey[900],\n                            bgcolor: theme.palette.success.main,\n                            backgroundColor: theme.palette.success.main\n                        }}\n                    >\n                        Withdraw\n                    </LoadingButton>\n                    <TextField\n                        required\n                        sx={{ borderBottom: 2, mt: 2.1, ml: 5, borderColor: theme.palette.success.main }}\n                        onChange={(e) => setWithdrawSum(e.target.value)}\n                        inputProps={{ style: { width: 110, textAlign: 'center', color: 'white' } }}\n                        id=\"standard-basic\"\n                        variant=\"standard\"\n                        color=\"success\"\n                    />\n                </Box>\n            </Modal>\n            <Modal open={open4} onClose={handleClose4} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: Your stake will be in `pre-mature` phase for the first 45 days and will face heavy penatlies in case of\n                        any withdraws / claims (90% fee on the staked, 5% on the rewards and minus 1 SHARESBONUS per Transaction).\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <LoadingButton\n                            loading={loading2}\n                            onClick={() => {\n                                handleLoadingTrue2();\n                                stakeStax(stakeAFormatted, stakeName).then(() => {\n                                    handleSubmitTrue().then(() => {\n                                        handleClose4();\n                                        handleOpen3();\n                                        handleLoadingFalse2();\n                                        fetchStakesBalance();\n                                        fetchStaxBalance();\n                                    });\n                                });\n                            }}\n                            sx={{\n                                fontSize: 18,\n                                minHeight: 45,\n                                minWidth: 140,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Stake\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal open={open2} onClose={handleClose2} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: Each claim reduces the SHARESBONUS by 1. Therefore, the stake APR will be reduced by ~4,56% on each\n                        claim/withdraw.\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <LoadingButton\n                            loading={loading5}\n                            onClick={() => {\n                                handleLoadingTrue5();\n                                withdrawAmount(0, currentIndex).then(() => {\n                                    handleSubmitTrue().then(() => {\n                                        setOpen2(false);\n                                        setOpen3(true);\n                                        handleLoadingFalse4();\n                                        fetchStakesBalance();\n                                    });\n                                });\n                            }}\n                            sx={{\n                                fontSize: 18,\n                                minHeight: 45,\n                                minWidth: 140,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Claim\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal open={open3} onClose={handleClose3} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <DoneIcon color=\"success\" fontSize=\"large\" />\n                    </Grid>\n                    <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                        Transaction completed.\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button\n                            onClick={handleClose3}\n                            sx={{\n                                fontSize: 18,\n                                minHeight: 45,\n                                minWidth: 140,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Close\n                        </Button>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={submitted}\n                onClose={handleSubmitFalse}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <DoneIcon color=\"success\" fontSize=\"large\" />\n                    </Grid>\n                    <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                        Transaction submitted.\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button\n                            onClick={handleSubmitFalse}\n                            sx={{\n                                fontSize: 18,\n                                minHeight: 45,\n                                minWidth: 140,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Close\n                        </Button>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Grid item container spacing={2} xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid item lg={12} xs={12} md={12} sm={12}>\n                    <Typography textAlign=\"center\" variant=\"h1\" color={theme.palette.grey[50]}>\n                        Staking\n                    </Typography>\n                    <Divider />\n                </Grid>\n                <Grid item container lg={4} xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 6 }}>\n                    <Card\n                        sx={{\n                            maxWidth: 1900,\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                        }}\n                    >\n                        <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                            <Grid item sx={{ backgroundColor: theme.palette.grey[900], mt: 2 }} lg={3.6} xs=\"auto\">\n                                <StaxLogo />\n                            </Grid>\n                            <Grid item lg=\"auto\" xs=\"auto\" sx={{ ml: 0.8, mt: 5 }}>\n                                <Typography variant=\"h2\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Stake\n                                </Typography>\n                            </Grid>\n                            <Grid item lg=\"auto\" xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 0.7, mt: 5 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    STAX\n                                </Typography>\n                            </Grid>\n                            <Grid item lg={1} xs=\"auto\" sx={{ mt: 5, pt: 0.2 }}>\n                                <Tooltip\n                                    sx={{ color: theme.palette.success.main }}\n                                    title={\n                                        <Typography\n                                            sx={{\n                                                color: theme.palette.success.main\n                                            }}\n                                        >\n                                            Stakes have name, staked amount and SHARESBONUS. Users choose the name and tokens to be staked.\n                                            When creating a stake, the smart contract will get the user`s current sSTX balance and save it\n                                            as SHARESBONUS in the stake`s properties.\n                                        </Typography>\n                                    }\n                                >\n                                    <InfoIcon />\n                                </Tooltip>\n                            </Grid>\n                            <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    sx={{ justifyContent: 'center', backgroundColor: theme.palette.grey[900], my: 1 }}\n                                    lg=\"auto\"\n                                    md=\"auto\"\n                                    xs=\"auto\"\n                                >\n                                    <Typography variant=\"h4\" textAlign=\"center\">\n                                        NAME:\n                                    </Typography>\n                                </Grid>\n                                <Grid item sx={{ backgroundColor: theme.palette.grey[900] }} lg=\"auto\">\n                                    <TextField\n                                        required\n                                        sx={{ borderBottom: 2, borderColor: theme.palette.success.main }}\n                                        onChange={(e) => setStakeName(e.target.value)}\n                                        inputProps={{ style: { width: 110, textAlign: 'center', color: 'white' } }}\n                                        id=\"standard-basic\"\n                                        variant=\"standard\"\n                                        color=\"success\"\n                                    />\n                                    <Typography variant=\"h5\" textAlign=\"left\">\n                                        Enter stake name\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    sx={{ justifyContent: 'center', backgroundColor: theme.palette.grey[900], my: 1 }}\n                                    lg=\"auto\"\n                                    md=\"auto\"\n                                    xs=\"auto\"\n                                >\n                                    <Typography variant=\"h4\" textAlign=\"center\">\n                                        AMOUNT:\n                                    </Typography>\n                                </Grid>\n                                <Grid item sx={{ backgroundColor: theme.palette.grey[900] }} lg=\"auto\">\n                                    <TextField\n                                        required\n                                        sx={{ borderBottom: 2, borderColor: theme.palette.success.main }}\n                                        onChange={(e) => setStakeAmount(e.target.value)}\n                                        inputProps={{ style: { width: 110, textAlign: 'center', color: 'white' } }}\n                                        type=\"number\"\n                                        id=\"standard-basic\"\n                                        variant=\"standard\"\n                                        color=\"success\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <Typography variant=\"h5\" textAlign=\"left\">\n                                        Balance: {balanceFormatted} STAX\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                        SHARESBONUS:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                        {sharesBalance}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\" sx={{ ml: 0.7, mt: -0.3 }}>\n                                    <Tooltip\n                                        sx={{ color: theme.palette.success.main }}\n                                        title={\n                                            <Typography\n                                                sx={{\n                                                    color: theme.palette.success.main\n                                                }}\n                                            >\n                                                SHARESBONUS - shows your current sSTX balance. Each sSTX in your wallet, increases your APY\n                                                by 5%. An user may hold unlimited amount of sSTX but the SHARESBONUS is limited to 20.\n                                                Therefore, we can say the maximum APY is 108% (20 * 5% + 8%).\n                                            </Typography>\n                                        }\n                                    >\n                                        <InfoIcon />\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" sx={{ mt: 1 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                        INITIAL APY:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" sx={{ mt: 1, ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                        9.13%\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\" sx={{ ml: 0.7, my: 0.9 }}>\n                                    <Tooltip\n                                        sx={{ color: theme.palette.success.main }}\n                                        title={\n                                            <Typography\n                                                sx={{\n                                                    color: theme.palette.success.main\n                                                }}\n                                            >\n                                                Initial APY - That is the minimum APY that a stake can get if there are no sSTX in the\n                                                wallet of the staker at that given moment.\n                                            </Typography>\n                                        }\n                                    >\n                                        <InfoIcon />\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                        CURRENT APY:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                        {myAPY}%\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\" sx={{ ml: 0.7, mt: -0.3 }}>\n                                    <Tooltip\n                                        sx={{ color: theme.palette.success.main }}\n                                        title={\n                                            <Typography\n                                                sx={{\n                                                    color: theme.palette.success.main\n                                                }}\n                                            >\n                                                Current APY - shows your APY at the moment if you open a stake. It is calculated by the\n                                                following formula: SHARESBONUS * 5 + 8%. The APY is limited to 108% (20 SHARESBONUS).\n                                            </Typography>\n                                        }\n                                    >\n                                        <InfoIcon />\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    sx={{\n                                        backgroundColor: theme.palette.grey[900],\n                                        mt: 2,\n                                        mb: 3\n                                    }}\n                                    lg=\"auto\"\n                                >\n                                    <LoadingButton\n                                        loading={loading}\n                                        onClick={() => {\n                                            handleLoadingTrue();\n                                            handleOpen4();\n                                        }}\n                                        sx={{\n                                            fontSize: 18,\n                                            minHeight: 45,\n                                            minWidth: 140,\n                                            bgcolor: theme.palette.success.main,\n                                            backgroundColor: theme.palette.success.main,\n                                            color: theme.palette.grey[900]\n                                        }}\n                                    >\n                                        Stake\n                                    </LoadingButton>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n                <Grid item container lg={4} xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 6 }}>\n                    <Card\n                        sx={{\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)',\n                            mb: 1\n                        }}\n                    >\n                        <Grid\n                            container\n                            sx={{\n                                backgroundColor: theme.palette.grey[900],\n                                mt: 3,\n                                display: 'flex',\n                                justifyContent: 'center'\n                            }}\n                        >\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    APY /\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    REWARDS RATE\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs={10}>\n                                <Typography variant=\"h5\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    When creating a stake, the contract will save the staker`s` sSTX balance as SHARESBONUS. 1 SHARESBONUS +\n                                    ~4.56% APY.\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Initial APY:\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    9.125%\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Current APY:\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ my: 4, ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    {myAPY}%\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n            </Grid>\n            <Grid\n                cotainer\n                sx={{\n                    display: 'flex',\n                    borderColor: theme.palette.success.light,\n                    borderRadius: 5,\n                    boxShadow: '0px 0px 20px rgb(0, 230, 117)',\n                    justifyContent: 'center',\n                    mb: 15\n                }}\n            >\n                <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n                    <TableContainer sx={{ borderRadius: 5, maxHeight: 350, width: 350 }}>\n                        <Table stickyHeader aria-label=\"sticky table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                            NAME\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                            SHARESBONUS\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                            STAKED\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                            REWARDS\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Grid container>\n                                            <Grid item xs={6} sx={{ mt: 0.9 }}>\n                                                <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                    TUM\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={3}>\n                                                <Tooltip\n                                                    sx={{ mt: 0.6, color: theme.palette.success.main }}\n                                                    title={\n                                                        <Typography\n                                                            sx={{\n                                                                color: theme.palette.success.main\n                                                            }}\n                                                        >\n                                                            TUM stands for Time Until Mature. Each stake will face heavy penalty (90% on the\n                                                            staked balane) if the stake is ended before the 45th day.\n                                                        </Typography>\n                                                    }\n                                                >\n                                                    <InfoIcon />\n                                                </Tooltip>\n                                            </Grid>\n                                        </Grid>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                            ACTIVITIES\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {stakedd.map((total, index) => (\n                                    <TableRow>\n                                        <TableCell>\n                                            <Typography key={index} textAlign=\"center\">\n                                                {total.stakename}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography key={index} textAlign=\"center\">\n                                                {total.sharesbonus} / {total.sharesbonus * 4.56 + 9.12}%\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography key={index} textAlign=\"center\">\n                                                {(total.amount / Number18Decimals).toLocaleString(undefined, {\n                                                    maximumFractionDigits: 2\n                                                })}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography key={index} textAlign=\"center\">\n                                                {(total.claimable / Number18Decimals).toLocaleString(undefined, {\n                                                    maximumFractionDigits: 2\n                                                })}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography key={index} textAlign=\"center\">\n                                                <SimpleDateTime dateSeparator=\"/\" format=\"MYD\" showTime=\"0\">\n                                                    {total.since}\n                                                </SimpleDateTime>\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Grid item container xs={12} sx={{ width: 170 }}>\n                                                <LoadingButton\n                                                    loading={loading3}\n                                                    onClick={() => {\n                                                        handleLoadingTrue3();\n                                                        handleOpen();\n                                                        setCurrentIndex(index);\n                                                    }}\n                                                    sx={{\n                                                        fontSize: 15,\n                                                        width: 80,\n                                                        height: 23,\n                                                        color: theme.palette.grey[900],\n                                                        bgcolor: theme.palette.success.main,\n                                                        backgroundColor: theme.palette.success.main\n                                                    }}\n                                                    key={index}\n                                                >\n                                                    Withdraw\n                                                </LoadingButton>\n                                                <LoadingButton\n                                                    loading={loading4}\n                                                    onClick={() => {\n                                                        handleLoadingTrue4();\n                                                        handleOpen2();\n                                                        setCurrentIndex(index);\n                                                    }}\n                                                    sx={{\n                                                        ml: 1,\n                                                        fontSize: 15,\n                                                        width: 80,\n                                                        height: 23,\n                                                        color: theme.palette.grey[900],\n                                                        bgcolor: theme.palette.success.main,\n                                                        backgroundColor: theme.palette.success.main\n                                                    }}\n                                                    key={index}\n                                                >\n                                                    Claim\n                                                </LoadingButton>\n                                            </Grid>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Paper>\n            </Grid>\n        </>\n    );\n};\n\nexport default StakingCard;\n","import { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport StakingCard from './StakingCard';\n// ==============================|| TYPOGRAPHY ||============================== //\n\nconst Typography = () => {\n    useTheme();\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item lg={12}>\n                <StakingCard />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Typography;\n"],"sourceRoot":""}