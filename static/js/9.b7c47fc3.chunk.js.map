{"version":3,"sources":["assets/images/busdlogo.png","views/utilities/busdSmallLogo.js","views/utilities/XsBusdLogo.js","../node_modules/@mui/icons-material/Settings.js","../node_modules/@mui/material/IconButton/iconButtonClasses.js","../node_modules/@mui/material/IconButton/IconButton.js","views/utilities/smallStaxLogo.js","views/utilities/TablerIcons.js"],"names":["BusdSmallLogo","useTheme","justifyContent","width","src","BUSD","alt","XsBusdLogo","sx","ml","mt","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getIconButtonUtilityClass","slot","generateUtilityClass","iconButtonClasses","generateUtilityClasses","_excluded","IconButtonRoot","styled","ButtonBase","name","overridesResolver","props","styles","ownerState","root","color","capitalize","edge","size","theme","_extends","textAlign","flex","fontSize","typography","pxToRem","padding","borderRadius","overflow","palette","action","active","transition","transitions","create","duration","shortest","disableRipple","backgroundColor","alpha","hoverOpacity","marginLeft","marginRight","main","disabled","IconButton","React","inProps","ref","useThemeProps","children","className","disableFocusRipple","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","centerRipple","focusRipple","SmallStaxLogo","Grid","alignContent","Stax","style","position","top","left","transform","bgcolor","border","boxShadow","borderColor","p","DEX","useState","setValue","setTotalStaxSupply","valueF","Web3","utils","toWei","toString","toBN","busdValue","setBusdValue","busdValueF","busdValueFormatted","BigNumber","busdBalance","setBusdBalance","decimalPlaces","toLocaleString","undefined","staxBalance","setStaxBalance","setStaxPrice","loading","setLoading","open3","setOpen3","handleClose3","staxLogoFirst","setStaxLogoFirst","token1","setToken1","token2","setToken2","token1address","setToken1address","token2address","setToken2address","pathToPurchase","slippage","handleSwap","fetchBusdBalance","a","ggetBUSDBalance","then","catch","err","console","log","fetchStaxBalance","ggetStaxBalance","fetchStaxTotalSupply","ggetTotalSTAXSupply","result","fetchStaxPrice","getStaxPrice","useEffect","load2","Modal","open","onClose","Box","item","display","Typography","variant","component","Button","onClick","height","grey","success","TextField","fullWidth","inputProps","onChange","e","target","id","label","MainCard","mb","content","CardContent","container","xs","lg","Card","borderLeft","borderRight","borderBottom","light","spacing","md","sm","mr","LoadingButton","swapStaxAndBusd","minHeight","minWidth"],"mappings":"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","file":"static/js/9.b7c47fc3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/busdlogo.78457406.png\";","// project imports\nimport BUSD from '../../assets/images/busdlogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst BusdSmallLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\">\n                <img width={23} src={BUSD} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default BusdSmallLogo;\n","// project imports\nimport BUSD from '../../assets/images/busdlogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst XsBusdLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" sx={{ ml: 0.4, mt: 0.1 }}>\n                <img width={16} src={BUSD} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default XsBusdLogo;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"\n}), 'Settings');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\n\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: theme.palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  })\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, ownerState.color !== 'inherit' && ownerState.color !== 'default' && _extends({\n  color: theme.palette[ownerState.color].main\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}), ownerState.size === 'small' && {\n  padding: 5,\n  fontSize: theme.typography.pxToRem(18)\n}, ownerState.size === 'large' && {\n  padding: 12,\n  fontSize: theme.typography.pxToRem(28)\n}, {\n  [`&.${iconButtonClasses.disabled}`]: {\n    backgroundColor: 'transparent',\n    color: theme.palette.action.disabled\n  }\n}));\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n\n  const {\n    edge = false,\n    children,\n    className,\n    color = 'default',\n    disabled = false,\n    disableFocusRipple = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;","// project imports\nimport Stax from '../../assets/StaxLogoOnly.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst SmallStaxLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" alignContent=\"center\">\n                <img width={23} src={Stax} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default SmallStaxLogo;\n","// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Box, Card, CardContent, TextField, Grid, Typography, Modal, IconButton } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Web3 from 'web3';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport React, { useState, useEffect } from 'react';\nimport SwapVerticalCircleIcon from '@mui/icons-material/SwapVerticalCircle';\nimport { ggetBUSDBalance, ggetStaxBalance, getStaxPrice, ggetTotalSTAXSupply, swapStaxAndBusd } from 'components/wallet/sharesABI';\nimport BusdSmallLogo from './busdSmallLogo';\nimport SmallStaxLogo from './smallStaxLogo';\nimport XsStaxLogo from './xsStaxLogo';\nimport XsBusdLogo from './XsBusdLogo';\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 300,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    borderRadius: 7,\n    borderColor: 'black',\n    p: 3\n};\n\nconst DEX = () => {\n    const [value, setValue] = React.useState(0);\n    const [totalStaxSuply, setTotalStaxSupply] = React.useState(0);\n    const valueF = Web3.utils.toWei(value.toString(), 'ether');\n    const valueFormatted = Web3.utils.toBN(valueF);\n    const [busdValue, setBusdValue] = React.useState(0);\n    const busdValueF = Web3.utils.toWei(busdValue.toString(), 'ether');\n    const busdValueFormatted = Web3.utils.toBN(busdValueF);\n    // eslint-disable-next-line global-require\n    const BigNumber = require('bignumber.js');\n    const [busdBalance, setBusdBalance] = React.useState();\n    const busdBalanceNumber = new BigNumber(busdBalance);\n    const busdBalanceFormat = busdBalanceNumber.decimalPlaces(2);\n    const busdBalanceFinal = busdBalanceFormat.toLocaleString(undefined);\n    const [staxBalance, setStaxBalance] = React.useState();\n    const staxBalanceNumber = new BigNumber(staxBalance);\n    const staxBalanceFormat = staxBalanceNumber.decimalPlaces(2);\n    const staxBalanceFinal = staxBalanceFormat.toLocaleString(undefined);\n    const theme = useTheme();\n    const [staxPrice, setStaxPrice] = useState([], [], []);\n    const [loading, setLoading] = React.useState(false);\n    const [open3, setOpen3] = React.useState(false);\n    const handleClose3 = () => setOpen3(false);\n    const handleOpen3 = () => setOpen3(true);\n    const [staxLogoFirst, setStaxLogoFirst] = React.useState(true);\n    const handleStaxLogoFirst = () => setStaxLogoFirst(true);\n    const handleStaxLogoFirstN = () => setStaxLogoFirst(false);\n    const handleLoadingTrue = () => setLoading(true);\n    const handleLoadingFalse = () => setLoading(false);\n    const [token1, setToken1] = useState();\n    const [token2, setToken2] = useState();\n    const [token1address, setToken1address] = useState();\n    const [token2address, setToken2address] = useState();\n    const pathToPurchase = [token1address, token2address];\n    const [slippage, setSlippage] = useState(0);\n    const handleSwap = () => {\n        if (token1 === staxBalance) {\n            setToken1(busdBalance);\n            setToken2(staxBalance);\n            handleStaxLogoFirstN();\n        } else {\n            setToken1(staxBalance);\n            setToken2(busdBalance);\n            handleStaxLogoFirst();\n        }\n    };\n    const fetchBusdBalance = async () => {\n        ggetBUSDBalance()\n            .then((busdBalance) => {\n                setBusdBalance(busdBalance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStaxBalance = async () => {\n        ggetStaxBalance()\n            .then((staxBalance) => {\n                setStaxBalance(staxBalance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStaxTotalSupply = async () => {\n        ggetTotalSTAXSupply()\n            .then((result) => {\n                setTotalStaxSupply(result);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStaxPrice = async () => {\n        getStaxPrice()\n            .then((result) => {\n                setStaxPrice(result);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    useEffect(() => {\n        async function load2() {\n            fetchBusdBalance();\n            fetchStaxBalance();\n            fetchStaxPrice();\n            fetchStaxTotalSupply();\n            setToken1(staxBalance);\n            setToken1address('0x1155605B148DEB0f649F9b815Fc18d956af7a93d');\n            setToken2(busdBalance);\n            setToken2address('0xd389253265dd6b85C47c410EC5fF0c6A383CE949');\n        }\n        load2();\n    }, [busdBalance, staxBalance]);\n    return (\n        <>\n            <Modal open={open3} onClose={handleClose3} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <DoneIcon color=\"success\" fontSize=\"large\" />\n                    </Grid>\n                    <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                        Transaction completed.\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button\n                            onClick={handleClose3}\n                            sx={{\n                                mt: 3,\n                                fontSize: 15,\n                                width: 80,\n                                height: 30,\n                                color: theme.palette.grey[900],\n                                backgroundColor: theme.palette.success.main\n                            }}\n                        >\n                            Close\n                        </Button>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                        Slippage:\n                    </Typography>\n                    <TextField\n                        fullWidth\n                        sx={{\n                            display: 'flex',\n                            borderColor: theme.palette.success.main\n                        }}\n                        inputProps={{ style: { textAlign: 'center', color: 'white' } }}\n                        onChange={(e) => setBusdValue(e.target.value)}\n                        id=\"standard-basic\"\n                        label=\"Enter BUSD amount:\"\n                        variant=\"standard\"\n                        color=\"success\"\n                    />\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button\n                            onClick={handleClose3}\n                            sx={{\n                                mt: 3,\n                                fontSize: 15,\n                                width: 80,\n                                height: 30,\n                                color: theme.palette.grey[900],\n                                backgroundColor: theme.palette.success.main\n                            }}\n                        >\n                            Close\n                        </Button>\n                    </Grid>\n                </Box>\n            </Modal>\n            <MainCard\n                sx={{\n                    width: '100%',\n                    height: '108%',\n                    borderRadius: 0,\n                    backgroundColor: theme.palette.grey[900],\n                    border: 0,\n                    mb: 5\n                }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid item container sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <Grid container sx={{ justifyContent: 'center', display: 'flex' }}>\n                            <Typography textAlign=\"center\" variant=\"h6\" color={theme.palette.grey[50]}>\n                                Swap\n                            </Typography>\n                            <SwapVerticalCircleIcon color=\"success\" fontSize=\"large\" sx={{ mt: 2.5, ml: 1 }} />\n                        </Grid>\n                        <Grid item container xs={12} sx={{ mt: 5, display: 'flex', justifyContent: 'center' }} lg={4}>\n                            <Card\n                                sx={{\n                                    borderLeft: 1,\n                                    borderRight: 1,\n                                    borderBottom: 3,\n                                    borderColor: theme.palette.success.light,\n                                    borderRadius: 5,\n                                    boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                }}\n                            >\n                                <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                    <Grid container spacing={1} sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                                        <Grid item xs=\"auto\" lg=\"auto\" md=\"auto\" sm=\"auto\">\n                                            <Typography variant=\"h3\" color={theme.palette.grey[50]}>\n                                                SWAP\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\" lg=\"auto\" sm=\"auto\" md=\"auto\">\n                                            <Typography variant=\"h3\" color={theme.palette.success.main} textAlign=\"left\">\n                                                STAX\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\" lg=\"auto\" sm=\"auto\" md=\"auto\">\n                                            <SettingsIcon fontSize=\"medium\" color=\"success\" />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sx={{\n                                            backgroundColor: theme.palette.grey[900],\n                                            justifyContent: 'center',\n                                            display: 'flex',\n                                            mt: 4\n                                        }}\n                                        lg={12}\n                                        md={7}\n                                        xs={12}\n                                        sm={7}\n                                    >\n                                        <Grid\n                                            item\n                                            xs={7}\n                                            sx={{\n                                                borderRadius: 2,\n                                                border: 2,\n                                                borderColor: theme.palette.success.main,\n                                                justifyContent: 'right',\n                                                display: 'flex'\n                                            }}\n                                        >\n                                            <Grid item sx={{ display: 'flex', justifyContent: 'center', mt: 1.5, mr: 1, ml: 1 }}>\n                                                {staxLogoFirst ? <SmallStaxLogo /> : <BusdSmallLogo />}\n                                            </Grid>\n                                            <TextField\n                                                fullWidth\n                                                sx={{\n                                                    display: 'flex',\n                                                    borderColor: theme.palette.success.main\n                                                }}\n                                                inputProps={{ style: { textAlign: 'left', color: 'white' } }}\n                                                onChange={(e) => setBusdValue(e.target.value)}\n                                                id=\"standard-basic\"\n                                                label=\"Enter BUSD amount:\"\n                                                variant=\"standard\"\n                                                color=\"success\"\n                                            />\n                                        </Grid>\n                                        <Grid item container xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 0.5 }}>\n                                            <Typography textAlign=\"center\">Balance:{token1}</Typography>\n                                            {staxLogoFirst ? <XsStaxLogo /> : <XsBusdLogo />}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\n                                        <IconButton\n                                            onClick={() => {\n                                                handleSwap();\n                                            }}\n                                        >\n                                            <SwapVerticalCircleIcon color=\"success\" fontSize=\"large\" />\n                                        </IconButton>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sx={{\n                                            backgroundColor: theme.palette.grey[900],\n                                            justifyContent: 'center',\n                                            display: 'flex',\n                                            mt: 1.6\n                                        }}\n                                        lg={12}\n                                        md={7}\n                                        xs={12}\n                                        sm={7}\n                                    >\n                                        <Grid\n                                            item\n                                            xs={7}\n                                            sx={{\n                                                borderRadius: 2,\n                                                mt: 1,\n                                                border: 2,\n                                                borderColor: theme.palette.success.main,\n                                                justifyContent: 'center',\n                                                display: 'flex'\n                                            }}\n                                        >\n                                            <Grid item sx={{ display: 'flex', justifyContent: 'center', mt: 1.5, mr: 1, ml: 1 }}>\n                                                {staxLogoFirst ? <BusdSmallLogo /> : <SmallStaxLogo />}\n                                            </Grid>\n                                            <TextField\n                                                fullWidth\n                                                sx={{\n                                                    display: 'flex',\n                                                    borderColor: theme.palette.success.main\n                                                }}\n                                                inputProps={{ style: { textAlign: 'left', color: 'white' } }}\n                                                onChange={(e) => setValue(e.target.value)}\n                                                id=\"standard-basic\"\n                                                label=\"Enter STAX amount:\"\n                                                variant=\"standard\"\n                                                color=\"success\"\n                                            />\n                                        </Grid>\n                                        <Grid item container xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 0.5 }}>\n                                            <Typography textAlign=\"center\">Balance:{token2}</Typography>\n                                            {staxLogoFirst ? <XsBusdLogo /> : <XsStaxLogo />}\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <Grid item sx={{ mb: 3, mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                                <LoadingButton\n                                                    loading={loading}\n                                                    onClick={() => {\n                                                        handleLoadingTrue();\n                                                        getStaxPrice();\n                                                        swapStaxAndBusd(busdValueFormatted, slippage, pathToPurchase).then(() => {\n                                                            handleLoadingFalse();\n                                                            handleOpen3();\n                                                            fetchBusdBalance();\n                                                            fetchStaxBalance();\n                                                            fetchStaxPrice();\n                                                        });\n                                                    }}\n                                                    sx={{\n                                                        fontSize: 18,\n                                                        minHeight: 45,\n                                                        minWidth: 110,\n                                                        bgcolor: theme.palette.success.main,\n                                                        backgroundColor: theme.palette.success.main,\n                                                        color: theme.palette.grey[900]\n                                                    }}\n                                                >\n                                                    SWAP\n                                                </LoadingButton>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default DEX;\n"],"sourceRoot":""}