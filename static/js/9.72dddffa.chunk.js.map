{"version":3,"sources":["assets/images/busdlogo.png","views/utilities/XsBusdLogo.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js","views/utilities/shareschart.js","views/utilities/SharesSTAXChart.js","views/utilities/busdlogo.js","views/utilities/BigSharesLogo.js","views/utilities/SharesCard.js","views/utilities/Shares.js"],"names":["XsBusdLogo","useTheme","justifyContent","sx","ml","mt","width","src","BUSD","alt","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","theme","_extends","display","transition","transitions","create","palette","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","CircularProgress","React","inProps","ref","useThemeProps","className","size","style","thickness","value","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","getLoadingButtonUtilityClass","loadingButtonClasses","LoadingButtonRoot","Button","shouldForwardProp","prop","rootShouldForwardProp","startIconLoadingStart","endIconLoadingEnd","duration","short","opacity","loadingPosition","loading","fullWidth","marginRight","marginLeft","LoadingButtonLoadingIndicator","loadingIndicator","position","visibility","left","action","disabled","right","LoadingButton","idProp","id","loadingIndicatorProp","useId","startIcon","endIcon","composedClasses","_jsxs","chartData","type","options","chart","sparkline","enabled","dataLabels","curve","tooltip","fixed","x","show","y","title","marker","series","data","SharesSTAXChart","navType","useSelector","state","customization","orangeDark","success","dark","useEffect","newSupportChart","colors","ApexCharts","exec","Card","bgcolor","grey","BusdLogo","Grid","item","alignContent","lg","mx","BigSharesLogo","mr","SHARES","PrettoSlider","Slider","border","backgroundColor","boxShadow","lineHeight","fontSize","background","padding","borderRadius","transformOrigin","SharesCard","BigNumber","require","useState","preValue","setPreValue","busdBalance","setBusdBalance","busdDividends","setBusdDividends","busdDividendsFormatted","decimalPlaces","toLocaleString","undefined","sSTXPrice","setsSTXPrice","setsSTXPriceFull","balance","setBalance","bonusAPY","setBonusAPY","totalsharesSupply","setTotalSharesSupply","progress","setProgress","progress2","myAPYFormatted","test1String","toString","busdBalanceFormatted","Web3","utils","toWei","myShareRate","setLoading","myShareRateFormatted","maximumFractionDigits","fetchsSTXPrice","a","getsSTXPrice","then","catch","err","console","log","fetchsSTXPriceFull","getSTXPriceFull","sSTXPriceFull","fetchBalance","ggetOwnBalance","fetchBusdBalance","ggetBUSDBalance","fetchTotalDividends","ggetTotalDividends","fetchTotalSupply","sharesTotalSupply","load2","MainCard","content","CardContent","container","Typography","textAlign","xs","borderLeft","borderRight","borderBottom","borderColor","light","spacing","md","sm","pl","Tooltip","my","mb","XsSharesLogo","valueLabelDisplay","onChange","e","target","defaultValue","min","max","onClick","purchaseSharess","minHeight","minWidth","textAllign","LinearProgress","Box","alignItems","component","claimDiv","Shares"],"mappings":"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","file":"static/js/9.72dddffa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/busdlogo.78457406.png\";","// project imports\nimport BUSD from '../../assets/images/busdlogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst XsBusdLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" sx={{ ml: 0.4, mt: 0.2 }}>\n                <img width={16} src={BUSD} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default XsBusdLogo;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: theme.palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n}; // TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\n\n\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\n\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: theme.palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n\n  const {\n    children,\n    disabled = false,\n    id: idProp,\n    loading = false,\n    loadingIndicator: loadingIndicatorProp,\n    loadingPosition = 'center',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: ownerState.loadingPosition === 'end' ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [children, loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      })]\n    }) : /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      }), children]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default LoadingButton;","// ===========================|| DASHBOARD - BAJAJ AREA CHART ||=========================== //\n\nconst chartData = {\n    type: 'area',\n    height: 150,\n    options: {\n        chart: {\n            id: 'support-chart',\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 1\n        },\n        tooltip: {\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: 'Ticket '\n            },\n            marker: {\n                show: true\n            }\n        }\n    },\n    series: [\n        {\n            data: [20, 22, 24]\n        }\n    ]\n};\n\nexport default chartData;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card } from '@mui/material';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport chartData from './shareschart';\n\n// ===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||=========================== //\n\nconst SharesSTAXChart = () => {\n    const theme = useTheme();\n    const customization = useSelector((state) => state.customization);\n    const { navType } = customization;\n\n    const orangeDark = theme.palette.success.dark;\n\n    useEffect(() => {\n        const newSupportChart = {\n            ...chartData.options,\n            colors: [orangeDark],\n            tooltip: {\n                theme: 'light'\n            }\n        };\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\n    }, [navType, orangeDark]);\n\n    return (\n        <Card sx={{ bgcolor: theme.palette.grey[900] }}>\n            <Chart {...chartData} />\n        </Card>\n    );\n};\n\nexport default SharesSTAXChart;\n","// project imports\nimport BUSD from '../../assets/images/busdlogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst BusdLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid item justifyContent=\"center\" alignContent=\"center\">\n                <Grid item lg={11} sx={{ mx: 1.5 }}>\n                    <img width={60} src={BUSD} alt=\"shares banner\" />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default BusdLogo;\n","// project imports\nimport SHARES from '../../assets/sSTXLogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst BigSharesLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" sx={{ mr: 1, mt: 1 }}>\n                <img width={50} src={SHARES} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default BigSharesLogo;\n","// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Button, Box, Card, CardContent, Tooltip, Grid, Typography, Modal, LinearProgress, CircularProgress } from '@mui/material';\nimport Slider from '@mui/material/Slider';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Web3 from 'web3';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SharesSTAXChart from './SharesSTAXChart';\nimport BusdLogo from './busdlogo';\nimport React, { useState, useEffect } from 'react';\nimport InfoIcon from '@mui/icons-material/Info';\nimport {\n    ggetOwnBalance,\n    ggetBUSDBalance,\n    sharesTotalSupply,\n    getSTXPriceFull,\n    approve,\n    ggetTotalDividends,\n    purchaseSharess,\n    getsSTXPrice,\n    claimDiv,\n    distributeFirstDiv\n} from 'components/wallet/sharesABI';\nimport XsBusdLogo from './XsBusdLogo';\nimport XsSharesLogo from './XsSharesLogo';\nimport BigSharesLogo from './BigSharesLogo';\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst PrettoSlider = styled(Slider)({\n    color: '#52af77',\n    height: 8,\n    '& .MuiSlider-track': {\n        border: 'none'\n    },\n    '& .MuiSlider-thumb': {\n        height: 24,\n        width: 24,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\n            boxShadow: 'inherit'\n        },\n        '&:before': {\n            display: 'none'\n        }\n    },\n    '& .MuiSlider-valueLabel': {\n        lineHeight: 1.2,\n        fontSize: 12,\n        background: 'unset',\n        padding: 0,\n        width: 32,\n        height: 32,\n        borderRadius: '50% 50% 50% 0',\n        backgroundColor: '#52af77',\n        transformOrigin: 'bottom left',\n        transform: 'translate(50%, -100%) rotate(-45deg) scale(0)',\n        '&:before': { display: 'none' },\n        '&.MuiSlider-valueLabelOpen': {\n            transform: 'translate(50%, -100%) rotate(-45deg) scale(1)'\n        },\n        '& > *': {\n            transform: 'rotate(45deg)'\n        }\n    }\n});\n\nconst SharesCard = () => {\n    // eslint-disable-next-line global-require\n    const BigNumber = require('bignumber.js');\n    const [value, setValue] = React.useState(1);\n    const [preValue, setPreValue] = React.useState(1);\n    const [busdBalance, setBusdBalance] = React.useState(0);\n    const [busdDividends, setBusdDividends] = React.useState(0);\n    const busdDividendsNumber = new BigNumber(busdDividends);\n    const busdDividendsFormat = busdDividendsNumber.decimalPlaces(2);\n    const busdDividendsFormatted = busdDividendsFormat.toLocaleString(undefined);\n    const theme = useTheme();\n    const [sSTXPrice, setsSTXPrice] = useState(0);\n    const [sSTXPriceFull, setsSTXPriceFull] = useState(0);\n    const [balance, setBalance] = useState(0);\n    const [bonusAPY, setBonusAPY] = useState(0);\n    const [totalsharesSupply, setTotalSharesSupply] = useState(0);\n    const [progress, setProgress] = useState(0);\n    const [progress2, setProgress2] = useState(55);\n    const myAPYFormatted = bonusAPY * 4.5625;\n    const test1 = value * sSTXPrice;\n    const test1String = test1.toString();\n    const valueFormatted = Web3.utils.toWei(test1String, 'ether');\n    const busdBalanceToNumber = new BigNumber(busdBalance);\n    const busdBalanceFormat = busdBalanceToNumber.decimalPlaces(2);\n    const busdBalanceFormatted = busdBalanceFormat.toLocaleString(undefined);\n    const myShareRate = (balance / totalsharesSupply) * 100;\n    const updateValue = (event, newValue) => {\n        setPreValue(newValue);\n    };\n    const [open, setOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n    const handleLoadingTrue = () => setLoading(true);\n    const handleLoadingFalse = () => setLoading(false);\n    const myShareRateFormatted = myShareRate.toLocaleString(undefined, { maximumFractionDigits: 1 });\n    const fetchsSTXPrice = async () => {\n        getsSTXPrice()\n            .then((sSTXPrice) => {\n                setsSTXPrice(sSTXPrice);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchsSTXPriceFull = async () => {\n        getSTXPriceFull()\n            .then((sSTXPriceFull) => {\n                setsSTXPriceFull(sSTXPriceFull);\n                console.log(sSTXPriceFull);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchBalance = async () => {\n        ggetOwnBalance()\n            .then((balance) => {\n                setBalance(balance);\n                if (balance > 20) {\n                    setBonusAPY(20);\n                } else {\n                    setBonusAPY(balance);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchBusdBalance = async () => {\n        ggetBUSDBalance()\n            .then((busdBalance) => {\n                setBusdBalance(busdBalance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchTotalDividends = async () => {\n        ggetTotalDividends()\n            .then((busdDividends) => {\n                setBusdDividends(busdDividends);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchTotalSupply = async () => {\n        sharesTotalSupply()\n            .then((totalsharesSupply) => {\n                setTotalSharesSupply(totalsharesSupply);\n                setProgress((totalsharesSupply / 1000) * 100);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    useEffect(() => {\n        async function load2() {\n            fetchBalance();\n            fetchsSTXPriceFull();\n            fetchTotalSupply();\n            fetchsSTXPrice();\n            fetchBusdBalance();\n            fetchTotalDividends();\n        }\n        load2();\n    }, [preValue]);\n    return (\n        <>\n            <MainCard\n                sx={{ width: 'full%', height: '108%', borderRadius: 0, backgroundColor: theme.palette.grey[900], border: 0 }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid container sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <Grid item container sx={{ justifyContent: 'center', display: 'flex', mt: 5 }}>\n                            <BigSharesLogo />\n                            <Typography textAlign=\"center\" variant=\"h6\" color={theme.palette.grey[50]}>\n                                Shares\n                            </Typography>\n                        </Grid>\n                        <Grid item container xs={12} sx={{ mt: 5, display: 'flex', justifyContent: 'center' }} lg={4.5}>\n                            <Card\n                                sx={{\n                                    borderLeft: 1,\n                                    borderRight: 1,\n                                    borderBottom: 3,\n                                    borderColor: theme.palette.success.light,\n                                    borderRadius: 5,\n                                    boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                }}\n                            >\n                                <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                    <Grid container spacing={1} sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                                        <Grid item xs=\"auto\" lg=\"auto\" md=\"auto\" sm=\"auto\">\n                                            <Typography variant=\"h2\" color={theme.palette.success.main} textAlign=\"left\">\n                                                STAX\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\" lg=\"auto\" sm=\"auto\" md=\"auto\">\n                                            <Typography variant=\"h2\" color={theme.palette.grey[50]}>\n                                                SHARES\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item lg=\"auto\" sx={{ pl: 0.5, mt: 0.24 }}>\n                                            <Tooltip\n                                                sx={{ color: theme.palette.success.main }}\n                                                title={\n                                                    <Typography\n                                                        sx={{\n                                                            color: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        The initial (starting) price of sSTX is 20 BUSD and it increases by 0.01 BUSD every\n                                                        sSTX sold. The current sSTX price can be checked below. 70% of the BUSD amount used\n                                                        for sSTX purchases is distributed to sSTX holders every 24 hours.\n                                                    </Typography>\n                                                }\n                                            >\n                                                <InfoIcon />\n                                            </Tooltip>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sx={{ backgroundColor: theme.palette.grey[900], my: 0, justifyContent: 'center', display: 'flex' }}\n                                        lg={10}\n                                        sm={12}\n                                        md={12}\n                                        xs={9.3}\n                                    >\n                                        <Grid item md={7.5} sm={8} lg={10.5}>\n                                            <SharesSTAXChart />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sx={{\n                                            backgroundColor: theme.palette.grey[900],\n                                            mt: 1.6,\n                                            display: 'flex',\n                                            justifyContent: 'left'\n                                        }}\n                                        lg={3}\n                                        md={1.5}\n                                        sm={2.11}\n                                        xs={5}\n                                    >\n                                        <Grid item container sx={{ mt: 1, justifyContent: 'left' }}>\n                                            <Typography xs={12} variant=\"h5\" textAlign=\"left\">\n                                                Total Sold:\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item container sx={{ mt: 2, justifyContent: 'left' }}>\n                                            <Typography variant=\"h5\" textAlign=\"left\">\n                                                Initial Price:\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item container sx={{ mt: 2, justifyContent: 'left' }}>\n                                            <Typography variant=\"h5\" textAlign=\"left\">\n                                                Current Price:\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item container sx={{ mt: 2, justifyContent: 'left' }}>\n                                            <Typography variant=\"h5\" textAlign=\"left\">\n                                                BUSD Balance:\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item container sx={{ mt: 2, justifyContent: 'left' }}>\n                                            <Typography variant=\"h5\" textAlign=\"left\">\n                                                BONUS APY:\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item container sx={{ mt: 2, mb: 1, justifyContent: 'left' }}>\n                                            <Typography variant=\"h5\" textAlign=\"left\">\n                                                sSTX Balance:\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sx={{\n                                            backgroundColor: theme.palette.grey[900],\n                                            mt: 1.6,\n                                            display: 'flex',\n                                            justifyContent: 'right'\n                                        }}\n                                        lg={6}\n                                        sm={6}\n                                        md={6}\n                                        xs={5}\n                                    >\n                                        <Grid item container sx={{ mt: 1, display: 'flex', justifyContent: 'right' }}>\n                                            <Typography variant=\"h5\" textAlign=\"right\">\n                                                {totalsharesSupply}/1,000\n                                            </Typography>\n                                            <XsSharesLogo />\n                                        </Grid>\n                                        <Grid item container sx={{ mt: 1, display: 'flex', justifyContent: 'right' }}>\n                                            <Typography variant=\"h5\" textAlign=\"right\">\n                                                20\n                                            </Typography>\n                                            <XsBusdLogo />\n                                        </Grid>\n                                        <Grid item container sx={{ mt: 1, display: 'flex', justifyContent: 'right' }}>\n                                            <Typography variant=\"h5\" textAlign=\"right\">\n                                                {sSTXPrice}\n                                            </Typography>\n                                            <XsBusdLogo />\n                                        </Grid>\n                                        <Grid item container sx={{ mt: 1, display: 'flex', justifyContent: 'right' }}>\n                                            <Typography variant=\"h5\" textAlign=\"right\">\n                                                {busdBalanceFormatted}\n                                            </Typography>\n                                            <XsBusdLogo />\n                                        </Grid>\n                                        <Typography sx={{ mt: 1, color: theme.palette.success.main }} variant=\"h5\" textAlign=\"right\">\n                                            {myAPYFormatted} %\n                                        </Typography>\n                                        <Grid item container sx={{ mt: 1, display: 'flex', justifyContent: 'right' }}>\n                                            <Typography sx={{ color: theme.palette.success.main }} variant=\"h5\" textAlign=\"right\">\n                                                {balance}\n                                            </Typography>\n                                            <XsSharesLogo />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                        <Grid item lg={5} xs={7.5}>\n                                            <PrettoSlider\n                                                valueLabelDisplay=\"auto\"\n                                                aria-label=\"pretto slider\"\n                                                onChange={(e) => setPreValue(e.target.value)}\n                                                defaultValue={1}\n                                                min={1}\n                                                max={10}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item sx={{ mb: 3, display: 'flex', justifyContent: 'center' }}>\n                                        <LoadingButton\n                                            loading={loading}\n                                            onClick={() => {\n                                                getSTXPriceFull();\n                                                handleLoadingTrue();\n                                                purchaseSharess(preValue).then(() => {\n                                                    handleLoadingFalse();\n                                                    fetchBalance();\n                                                    fetchTotalSupply();\n                                                    fetchsSTXPrice();\n                                                    fetchBusdBalance();\n                                                    fetchTotalDividends();\n                                                });\n                                            }}\n                                            sx={{\n                                                fontSize: 18,\n                                                minHeight: 45,\n                                                minWidth: 140,\n                                                bgcolor: theme.palette.success.main,\n                                                backgroundColor: theme.palette.success.main,\n                                                color: theme.palette.grey[900]\n                                            }}\n                                        >\n                                            BUY {preValue} sSTX\n                                        </LoadingButton>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                        <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 3 }} lg={4.5}>\n                            <Grid item lg={11.5} xs={12} md={12} sm={12} mt={2}>\n                                <Card\n                                    sx={{\n                                        borderLeft: 1,\n                                        borderRight: 1,\n                                        borderBottom: 3,\n                                        height: 'auto',\n                                        width: '100%',\n                                        borderColor: theme.palette.success.light,\n                                        borderRadius: 5,\n                                        boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                    }}\n                                >\n                                    <Grid container sx={{ height: 'auto', mt: 2 }}>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Grid item lg=\"auto\" xs=\"auto\" sm=\"auto\">\n                                                <Typography variant=\"h2\" color={theme.palette.success.main} textAlign=\"right\">\n                                                    STAX\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item lg=\"auto\" xs=\"auto\" sm=\"auto\">\n                                                <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.grey[50]} textAlign=\"left\">\n                                                    Shares stats\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Grid item container lg={12} xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    My sSTX Balance: {balance}\n                                                </Typography>\n                                                <XsSharesLogo />\n                                            </Grid>\n                                            <Grid item container lg={12} xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    Circulating sSTX: {totalsharesSupply}\n                                                </Typography>\n                                                <XsSharesLogo />\n                                            </Grid>\n                                            <Grid item lg=\"auto\" xs=\"auto\" sm=\"auto\" sx={{ my: 2 }}>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    My Share Rate: {myShareRateFormatted} %\n                                                </Typography>\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                lg={0.5}\n                                                sm={0.5}\n                                                sx={{ pl: 0.5, mt: 1.1, justifyContent: 'center', display: 'flex' }}\n                                            >\n                                                <Tooltip\n                                                    sx={{ height: 20, color: theme.palette.success.main, mt: 0.8 }}\n                                                    title={\n                                                        <Typography\n                                                            sx={{\n                                                                color: theme.palette.success.main\n                                                            }}\n                                                        >\n                                                            `Share rate shows how many tokens you own from all minted tokens at the current\n                                                            moment. If user owns 1 sSTX out of 100sSTX, then that address has a share rate\n                                                            of 1% and earn 1% of all BUSD rewards at that moment.`\n                                                        </Typography>\n                                                    }\n                                                >\n                                                    <InfoIcon />\n                                                </Tooltip>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Card>\n                            </Grid>\n                            <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 3 }} lg={11.5}>\n                                <Grid item lg={12} xs={12} md={12} sm={12}>\n                                    <Card\n                                        sx={{\n                                            borderLeft: 1,\n                                            borderRight: 1,\n                                            borderBottom: 3,\n                                            height: '100%',\n                                            width: '100%',\n                                            borderColor: theme.palette.success.light,\n                                            borderRadius: 5,\n                                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                        }}\n                                    >\n                                        <Grid container sx={{ my: 3.3, display: 'flex', justifyContent: 'center' }}>\n                                            <Grid item lg=\"auto\" xs=\"auto\" sm=\"auto\" md=\"auto\" sx={{ mt: 1.3 }}>\n                                                <BusdLogo />\n                                            </Grid>\n                                            <Grid item lg=\"auto\" xs=\"auto\" md=\"auto\" sm=\"auto\" sx={{ ml: 0.5, mt: 3.3 }}>\n                                                <Typography variant=\"h2\" color={theme.palette.success.main}>\n                                                    Dividends\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12} sx={{ ml: 0.5, mt: 3.3, display: 'flex', justifyContent: 'center' }}>\n                                                <Typography variant=\"h5\" textAllign=\"center\" color={theme.palette.grey[50]}>\n                                                    sSTX Purchases Dividends\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item md={10} lg={10} xs={10} sx={{ display: 'flex', mt: 0.3, justifyContent: 'center' }}>\n                                                <LinearProgress\n                                                    variant=\"determinate\"\n                                                    color=\"success\"\n                                                    value={progress}\n                                                    sx={{\n                                                        backgroundColor: theme.palette.grey[500],\n                                                        width: 300,\n                                                        height: 15,\n                                                        borderRadius: 3\n                                                    }}\n                                                />\n                                                <Box\n                                                    sx={{\n                                                        position: 'absolute',\n                                                        display: 'flex',\n                                                        alignItems: 'center',\n                                                        justifyContent: 'center',\n                                                        mt: -0.2\n                                                    }}\n                                                >\n                                                    <Typography variant=\"h5\" component=\"div\" sx={{ color: theme.palette.grey[900] }}>\n                                                        {totalsharesSupply} / 1,000 sSTX sold\n                                                    </Typography>\n                                                </Box>\n                                            </Grid>\n                                            <Grid item xs={12} sx={{ ml: 0.5, mt: 3.3, display: 'flex', justifyContent: 'center' }}>\n                                                <Typography variant=\"h5\" textAllign=\"center\" color={theme.palette.grey[50]}>\n                                                    Volume Dividends\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item md={10} lg={10} xs={10} sx={{ display: 'flex', mt: 0.2, justifyContent: 'center' }}>\n                                                <LinearProgress\n                                                    variant=\"determinate\"\n                                                    color=\"success\"\n                                                    value={progress2}\n                                                    sx={{\n                                                        backgroundColor: theme.palette.grey[500],\n                                                        width: 300,\n                                                        height: 15,\n                                                        borderRadius: 3\n                                                    }}\n                                                />\n                                                <Box\n                                                    sx={{\n                                                        position: 'absolute',\n                                                        display: 'flex',\n                                                        alignItems: 'center',\n                                                        justifyContent: 'center',\n                                                        mt: -0.2\n                                                    }}\n                                                >\n                                                    <Typography variant=\"h5\" component=\"div\" sx={{ color: theme.palette.grey[900] }}>\n                                                        12:33:56\n                                                    </Typography>\n                                                </Box>\n                                            </Grid>\n                                            <Grid item lg={12} md={12} xs={10} sx={{ mt: 2, justifyContent: 'center', display: 'flex' }}>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    Current Total Dividends\n                                                </Typography>\n                                                <Tooltip\n                                                    sx={{ height: 18, color: theme.palette.success.main }}\n                                                    title={\n                                                        <Typography\n                                                            sx={{\n                                                                color: theme.palette.success.main\n                                                            }}\n                                                        >\n                                                            80% of the BUSD used for sSTX purchases is collected in the smart contract. When\n                                                            all sSTX are sold, those BUSD dividends are distributed to all sSTX holders in a\n                                                            direct propotion. Afterwards, all BUSD dividends will be distributed every 24\n                                                            hours.\n                                                        </Typography>\n                                                    }\n                                                >\n                                                    <InfoIcon />\n                                                </Tooltip>\n                                                <Typography variant=\"h5\" sx={{ mr: 1 }} color={theme.palette.grey[50]} textAlign=\"right\">\n                                                    :\n                                                </Typography>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"right\">\n                                                    {busdDividendsFormatted}\n                                                </Typography>\n                                                <XsBusdLogo />\n                                            </Grid>\n                                            <Grid item lg={12} md={12} xs={10} sx={{ mt: 2, justifyContent: 'center', display: 'flex' }}>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    All Time Dividends:\n                                                </Typography>\n                                                <Typography variant=\"h5\" sx={{ ml: 1 }} color={theme.palette.grey[50]} textAlign=\"right\">\n                                                    233,760\n                                                </Typography>\n                                                <XsBusdLogo />\n                                            </Grid>\n                                            <Grid item lg={12} md={12} xs={10} sx={{ mt: 2, justifyContent: 'center', display: 'flex' }}>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    My Dividends\n                                                </Typography>\n                                                <Tooltip\n                                                    sx={{ height: 18, color: theme.palette.success.main }}\n                                                    title={\n                                                        <Typography\n                                                            sx={{\n                                                                color: theme.palette.success.main\n                                                            }}\n                                                        >\n                                                            There is 1% fee on every STAX BUY / SELL transaction and those fees are\n                                                            distributed as BUSD Dividends in a direct proportion to sSTX holders.\n                                                        </Typography>\n                                                    }\n                                                >\n                                                    <InfoIcon />\n                                                </Tooltip>\n                                                <Typography variant=\"h5\" sx={{ mr: 1 }} color={theme.palette.grey[50]} textAlign=\"right\">\n                                                    :\n                                                </Typography>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"right\">\n                                                    {((busdDividendsFormatted * myShareRateFormatted) / 100).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                </Typography>\n                                                <XsBusdLogo />\n                                                <Button\n                                                    onClick={() => {\n                                                        claimDiv();\n                                                    }}\n                                                    sx={{\n                                                        ml: 1,\n                                                        fontSize: 15,\n                                                        height: 20,\n                                                        minWidth: 65,\n                                                        bgcolor: theme.palette.success.main,\n                                                        backgroundColor: theme.palette.success.main,\n                                                        color: theme.palette.grey[900]\n                                                    }}\n                                                >\n                                                    Claim\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Card>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default SharesCard;\n","import { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport SharesCard from './SharesCard';\n// project imports\n// ==============================|| TYPOGRAPHY ||============================== //\n\nconst Shares = () => {\n    useTheme();\n    return (\n        <Grid container sx={{ justifyContent: 'center', display: 'flex' }}>\n            <Grid item lg={12}>\n                <SharesCard />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Shares;\n"],"sourceRoot":""}