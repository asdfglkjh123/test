{"version":3,"sources":["views/utilities/Shadow.js"],"names":["UtilitiesShadow","theme","useTheme","React","useState","totalStaxSuply","setTotalStaxSupply","TotalSupply","BigNumber","decimalPlaces","toLocaleString","undefined","staxPrice","setStaxPrice","fetchStaxTotalSupply","a","ggetTotalSTAXSupply","then","result","catch","err","console","log","fetchStaxPrice","getStaxPrice","useEffect","load2","option","tooltip","legend","orient","left","data","textStyle","color","palette","success","main","series","name","type","radius","center","label","normal","grey","value","container","spacing","sx","display","justifyContent","item","xs","textAlign","variant","mt","ml","fontSize","size","lg","borderLeft","borderBottom","borderRadius","borderColor","mb","style","height","width","borderRight","light","boxShadow","maximumFractionDigits"],"mappings":"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","file":"static/js/13.c62ad724.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\n// material-ui\nimport { Box, Card, Grid, Typography, Button } from '@mui/material';\nimport React, { useState, useEffect } from 'react';\nimport EChartsReact from 'echarts-for-react';\n// project imports\nimport QueryStatsIcon from '@mui/icons-material/QueryStats';\nimport LayersIcon from '@mui/icons-material/Layers';\nimport CandlestickChartIcon from '@mui/icons-material/CandlestickChart';\nimport PriceChangeIcon from '@mui/icons-material/PriceChange';\nimport SwitchAccountIcon from '@mui/icons-material/SwitchAccount';\nimport { ggetTotalSTAXSupply, getStaxPrice } from 'components/wallet/sharesABI';\nimport BigNumber from 'bignumber.js';\nimport XsStaxLogo from './xsStaxLogo';\n\nconst ShadowBox = ({ shadow }) => (\n    <Card sx={{ mb: 3, boxShadow: shadow }}>\n        <Box\n            sx={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                py: 4.5,\n                bgcolor: 'primary.light',\n                color: 'grey.800'\n            }}\n        >\n            <Box sx={{ color: 'inherit' }}>boxShadow: {shadow}</Box>\n        </Box>\n    </Card>\n);\n\nShadowBox.propTypes = {\n    shadow: PropTypes.string.isRequired\n};\n\nconst UtilitiesShadow = () => {\n    const theme = useTheme();\n    const [totalStaxSuply, setTotalStaxSupply] = React.useState(0);\n    const supplyNumber = new BigNumber(totalStaxSuply);\n    const TotalSupplyFormatted = supplyNumber.decimalPlaces(2);\n    const TotalSupply = TotalSupplyFormatted.toLocaleString(undefined);\n    const [staxPrice, setStaxPrice] = useState([], [], []);\n    const fetchStaxTotalSupply = async () => {\n        ggetTotalSTAXSupply()\n            .then((result) => {\n                setTotalStaxSupply(result);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStaxPrice = async () => {\n        getStaxPrice()\n            .then((result) => {\n                setStaxPrice(result);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    useEffect(() => {\n        async function load2() {\n            fetchStaxTotalSupply();\n            fetchStaxPrice();\n        }\n        load2();\n    }, []);\n    const option = {\n        tooltip: {},\n        legend: {\n            orient: 'horizontal',\n            left: 'center',\n            data: ['Circ. Supply (excl. PCS)', 'PCS', 'Locked', 'Total Staked'],\n            textStyle: {\n                color: theme.palette.success.main\n            }\n        },\n        series: [\n            {\n                name: 'Supply Stats',\n                type: 'pie',\n                radius: '55%',\n                center: ['50%', '60%'],\n                label: {\n                    normal: {\n                        textStyle: {\n                            color: theme.palette.grey[50]\n                        }\n                    }\n                },\n                data: [\n                    { value: 9293943, name: 'Circ. Supply (excl. PCS)' },\n                    { value: 9020992, name: 'PCS' },\n                    { value: 3755902, name: 'Locked' },\n                    { value: 10000000, name: 'Total Staked' }\n                ]\n            }\n        ]\n    };\n    return (\n        <Grid container spacing={3} sx={{ display: 'flex', justifyContent: 'center' }}>\n            <Grid item container xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                <Typography textAlign=\"center\" variant=\"h6\" sx={{ mt: 10 }}>\n                    Stats\n                </Typography>\n                <QueryStatsIcon sx={{ ml: 1, mt: 12 }} fontSize=\"large\" color=\"success\" />\n            </Grid>\n            <Grid item container xs={12} sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                <Button size=\"large\" color=\"success\" variant=\"outlined\">\n                    <LayersIcon color=\"success\" />\n                </Button>\n                <Button size=\"large\" color=\"success\" sx={{ ml: 2 }} variant=\"outlined\">\n                    <CandlestickChartIcon color=\"success\" />\n                </Button>\n                <Button size=\"large\" color=\"success\" sx={{ ml: 2 }} variant=\"outlined\">\n                    <PriceChangeIcon color=\"success\" />\n                </Button>\n                <Button size=\"large\" color=\"success\" sx={{ ml: 2 }} variant=\"outlined\">\n                    <SwitchAccountIcon color=\"success\" />\n                </Button>\n            </Grid>\n            <Grid\n                item\n                container\n                lg={9.1}\n                xs={10.5}\n                sx={{\n                    borderLeft: 3,\n                    borderBottom: 3,\n                    borderRadius: 5,\n                    borderColor: theme.palette.success.main,\n                    mt: 5,\n                    mb: 10,\n                    display: 'flex',\n                    justifyContent: 'center'\n                }}\n            >\n                <Grid item xs={12} lg={12} sx={{ mb: 10, mt: 5 }}>\n                    <EChartsReact option={option} style={{ height: 400 }} />\n                </Grid>\n            </Grid>\n            <Grid item container lg={3.5} xs={10} sx={{ mb: 15 }}>\n                <Card\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        borderLeft: 1,\n                        borderRight: 1,\n                        borderBottom: 3,\n                        borderColor: theme.palette.success.light,\n                        borderRadius: 5,\n                        boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                    }}\n                >\n                    <Typography textAlign=\"center\" variant=\"h3\" sx={{ mt: 7 }}>\n                        {' '}\n                        Total staked\n                    </Typography>\n                    <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 5, mb: 7 }}>\n                        <Typography textAlign=\"center\" variant=\"h4\" sx={{ color: theme.palette.success.main }}>\n                            {' '}\n                            10,000,000\n                        </Typography>\n                        <XsStaxLogo />\n                    </Grid>\n                </Card>\n            </Grid>\n            <Grid item container lg={3.5} xs={10} sx={{ mb: 15 }}>\n                <Card\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        borderLeft: 1,\n                        borderRight: 1,\n                        borderBottom: 3,\n                        borderColor: theme.palette.success.light,\n                        borderRadius: 5,\n                        boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                    }}\n                >\n                    <Typography textAlign=\"center\" variant=\"h3\" sx={{ mt: 7 }}>\n                        {' '}\n                        Circulating Supply (excl. PancakeSwap Pool)\n                    </Typography>\n                    <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 5, mb: 7 }}>\n                        <Typography textAlign=\"center\" variant=\"h4\" sx={{ color: theme.palette.success.main }}>\n                            {' '}\n                            {TotalSupply}\n                        </Typography>\n                        <XsStaxLogo />\n                    </Grid>\n                </Card>\n            </Grid>\n            <Grid item container lg={3.5} xs={10} sx={{ mb: 15 }}>\n                <Card\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        borderLeft: 1,\n                        borderRight: 1,\n                        borderBottom: 3,\n                        borderColor: theme.palette.success.light,\n                        borderRadius: 5,\n                        boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                    }}\n                >\n                    <Typography textAlign=\"center\" variant=\"h3\" sx={{ mt: 7 }}>\n                        {' '}\n                        Locked (rewards to sSTX holders)\n                    </Typography>\n                    <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 5, mb: 7 }}>\n                        <Typography textAlign=\"center\" variant=\"h4\" sx={{ color: theme.palette.success.main }}>\n                            {' '}\n                            10,000,000 STAX\n                        </Typography>\n                        <XsStaxLogo />\n                    </Grid>\n                </Card>\n            </Grid>\n            <Grid item container lg={3.5} xs={10} sx={{ mb: 15 }}>\n                <Card\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        borderLeft: 1,\n                        borderRight: 1,\n                        borderBottom: 3,\n                        borderColor: theme.palette.success.light,\n                        borderRadius: 5,\n                        boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                    }}\n                >\n                    <Typography textAlign=\"center\" variant=\"h3\" sx={{ mt: 7 }}>\n                        {' '}\n                        PancakeSwap Pool\n                    </Typography>\n                    <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 5, mb: 7 }}>\n                        <Typography textAlign=\"center\" variant=\"h4\" sx={{ color: theme.palette.success.main }}>\n                            {(staxPrice[0] / 1000000000000000000).toLocaleString(undefined, {\n                                maximumFractionDigits: 2\n                            })}{' '}\n                            STAX\n                        </Typography>\n                        <XsStaxLogo />\n                    </Grid>\n                </Card>\n            </Grid>\n            <Grid item container lg={3.5} xs={10} sx={{ mb: 15 }}>\n                <Card\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        borderLeft: 1,\n                        borderRight: 1,\n                        borderBottom: 3,\n                        borderColor: theme.palette.success.light,\n                        borderRadius: 5,\n                        boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                    }}\n                >\n                    <Typography textAlign=\"center\" variant=\"h3\" sx={{ mt: 7 }}>\n                        {' '}\n                        Total Supply\n                    </Typography>\n                    <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 5, mb: 7 }}>\n                        <Typography textAlign=\"center\" variant=\"h4\" sx={{ color: theme.palette.success.main }}>\n                            {TotalSupply}\n                        </Typography>\n                        <XsStaxLogo />\n                    </Grid>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default UtilitiesShadow;\n"],"sourceRoot":""}