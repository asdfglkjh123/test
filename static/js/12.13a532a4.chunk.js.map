{"version":3,"sources":["assets/StaxLogoOnly.png","views/utilities/staxlogo.js","views/utilities/StakingCard.js","views/utilities/Typography.js"],"names":["StaxLogo","useTheme","Grid","justifyContent","alignContent","sx","height","width","src","Stax","alt","StakingCard","theme","useState","balance","setBalance","balanceFormatted","BigNumber","decimalPlaces","toLocaleString","undefined","stakeAmount","setStakeAmount","stakeName","setStakeName","Number18Decimals","stakeAmountFormatted","Web3","utils","toWei","toString","stakeAFormatted","toBN","sharesBalance","setSharesBalance","stakesList","setStakesList","stakedd","myAPY","fetchStaxBalance","a","ggetStaxBalance","then","catch","err","console","log","fetchStakesBalance","stakeHas","balancee","fetchSharesBalance","ggetOwnBalance","useEffect","load","container","spacing","xs","display","item","lg","md","sm","textAlign","variant","color","palette","grey","Divider","mt","Card","maxWidth","borderLeft","borderRight","borderBottom","borderColor","success","light","borderRadius","boxShadow","backgroundColor","ml","main","pt","Tooltip","title","my","TextField","value","onChange","e","target","inputProps","style","id","defaultValue","type","mb","Button","onClick","stakeStax","fontSize","cotainer","minHeight","maxHeight","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","allign","TableBody","map","total","index","stakename","sharesbonus","textAllign","amount","maximumFractionDigits","claimable","since","Typography","gridSpacing"],"mappings":"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","file":"static/js/12.13a532a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/StaxLogoOnly.17f6a5b9.png\";","// project imports\nimport Stax from '../../assets/StaxLogoOnly.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst StaxLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" alignContent=\"center\" sx={{ height: 100 }}>\n                <img height={80} width=\"height\" src={Stax} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default StaxLogo;\n","import { useState, useEffect } from 'react';\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Button,\n    Card,\n    CardContent,\n    Divider,\n    Grid,\n    Table,\n    Paper,\n    TableContainer,\n    TextField,\n    Tooltip,\n    TableHead,\n    Typography,\n    TableBody,\n    TableRow,\n    TableCell\n} from '@mui/material';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport StaxLogo from './staxlogo';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { ggetStaxBalance, ggetOwnBalance, stakeStax, stakeHas } from 'components/wallet/sharesABI';\nimport BigNumber from 'bignumber.js';\nimport Web3 from 'web3';\nimport { Box } from '@mui/system';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst StakingCard = () => {\n    const theme = useTheme();\n    const [balance, setBalance] = useState(0);\n    const balanceToNumber = new BigNumber(balance);\n    const balanceFormat = balanceToNumber.decimalPlaces(2);\n    const balanceFormatted = balanceFormat.toLocaleString(undefined);\n    const [stakeAmount, setStakeAmount] = useState(0);\n    const [stakeName, setStakeName] = useState(0);\n    const Number18Decimals = 1000000000000000000;\n    const stakeAmountFormatted = Web3.utils.toWei(stakeAmount.toString(), 'ether');\n    const stakeAFormatted = Web3.utils.toBN(stakeAmountFormatted);\n    const [sharesBalance, setSharesBalance] = useState(0);\n    const [stakesList, setStakesList] = useState([[], []]);\n    const [staked, stakedd] = stakesList;\n    const myAPY = 9.125 + sharesBalance * 4.5625;\n    const fetchStaxBalance = async () => {\n        ggetStaxBalance()\n            .then((balance) => {\n                setBalance(balance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStakesBalance = async () => {\n        stakeHas(true)\n            .then((balancee) => {\n                setStakesList(balancee);\n                console.log(balancee);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchSharesBalance = async () => {\n        ggetOwnBalance()\n            .then((balance) => {\n                if (balance > 20) {\n                    setSharesBalance(20);\n                } else {\n                    setSharesBalance(balance);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    useEffect(() => {\n        async function load() {\n            fetchStaxBalance();\n            stakeHas();\n            fetchSharesBalance();\n            fetchStakesBalance();\n        }\n        load();\n    }, []);\n    return (\n        <>\n            <Grid container spacing={2} xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid item lg={12} xs={12} md={12} sm={12}>\n                    <Typography textAlign=\"center\" variant=\"h1\" color={theme.palette.grey[50]}>\n                        Staking\n                    </Typography>\n                    <Divider />\n                </Grid>\n                <Grid item container lg={4} xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 6 }}>\n                    <Card\n                        sx={{\n                            width: 320,\n                            maxWidth: 1900,\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                        }}\n                    >\n                        <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                            <Grid item sx={{ backgroundColor: theme.palette.grey[900], mt: 2 }} lg={3.6} xs=\"auto\">\n                                <StaxLogo />\n                            </Grid>\n                            <Grid item lg=\"auto\" xs=\"auto\" sx={{ ml: 0.8, mt: 5 }}>\n                                <Typography variant=\"h2\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Stake\n                                </Typography>\n                            </Grid>\n                            <Grid item lg=\"auto\" xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 0.7, mt: 5 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    STAX\n                                </Typography>\n                            </Grid>\n                            <Grid item lg={1} xs=\"auto\" sx={{ mt: 5, pt: 0.2 }}>\n                                <Tooltip\n                                    sx={{ color: theme.palette.success.main }}\n                                    title={\n                                        <Typography\n                                            sx={{\n                                                color: theme.palette.success.main\n                                            }}\n                                        >\n                                            Stakes have name, staked amount and SHARESBONUS. Users choose the name and tokens to be staked.\n                                            When creating a stake, the smart contract will get the user`s current sSTX balance and save it\n                                            as SHARESBONUS in the stake`s properties.\n                                        </Typography>\n                                    }\n                                >\n                                    <InfoIcon />\n                                </Tooltip>\n                            </Grid>\n                            <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    sx={{ justifyContent: 'center', backgroundColor: theme.palette.grey[900], my: 1 }}\n                                    lg=\"auto\"\n                                    md=\"auto\"\n                                    xs=\"auto\"\n                                >\n                                    <Typography variant=\"h4\" textAlign=\"center\">\n                                        NAME:\n                                    </Typography>\n                                </Grid>\n                                <Grid item sx={{ backgroundColor: theme.palette.grey[900] }} lg=\"auto\">\n                                    <TextField\n                                        value={stakeName}\n                                        sx={{ borderBottom: 2, borderColor: theme.palette.success.main }}\n                                        onChange={(e) => setStakeName(e.target.value)}\n                                        inputProps={{ style: { width: 110, color: 'white' } }}\n                                        id=\"standard-basic\"\n                                        variant=\"standard\"\n                                        color=\"success\"\n                                    />\n                                    <Typography variant=\"h5\" textAlign=\"left\">\n                                        Enter stake name\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    sx={{ justifyContent: 'center', backgroundColor: theme.palette.grey[900], my: 1 }}\n                                    lg=\"auto\"\n                                    md=\"auto\"\n                                    xs=\"auto\"\n                                >\n                                    <Typography variant=\"h4\" textAlign=\"center\">\n                                        AMOUNT:\n                                    </Typography>\n                                </Grid>\n                                <Grid item sx={{ backgroundColor: theme.palette.grey[900] }} lg=\"auto\">\n                                    <TextField\n                                        value={stakeAmount}\n                                        defaultValue={0}\n                                        sx={{ borderBottom: 2, borderColor: theme.palette.success.main }}\n                                        onChange={(e) => setStakeAmount(e.target.value)}\n                                        inputProps={{ style: { width: 110, color: 'white' } }}\n                                        type=\"number\"\n                                        id=\"standard-basic\"\n                                        variant=\"standard\"\n                                        color=\"success\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <Typography variant=\"h5\" textAlign=\"left\">\n                                        Balance: {balanceFormatted} STAX\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                        SHARESBONUS:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                        {sharesBalance}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\" sx={{ ml: 0.7, mt: -0.3 }}>\n                                    <Tooltip\n                                        sx={{ color: theme.palette.success.main }}\n                                        title={\n                                            <Typography\n                                                sx={{\n                                                    color: theme.palette.success.main\n                                                }}\n                                            >\n                                                SHARESBONUS - shows your current sSTX balance. Each sSTX in your wallet, increases your APY\n                                                by 5%. An user may hold unlimited amount of sSTX but the SHARESBONUS is limited to 20.\n                                                Therefore, we can say the maximum APY is 108% (20 * 5% + 8%).\n                                            </Typography>\n                                        }\n                                    >\n                                        <InfoIcon />\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" sx={{ mt: 1 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                        INITIAL APY:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" sx={{ mt: 1, ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                        9.13%\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\" sx={{ ml: 0.7, my: 0.9 }}>\n                                    <Tooltip\n                                        sx={{ color: theme.palette.success.main }}\n                                        title={\n                                            <Typography\n                                                sx={{\n                                                    color: theme.palette.success.main\n                                                }}\n                                            >\n                                                Initial APY - That is the minimum APY that a stake can get if there are no sSTX in the\n                                                wallet of the staker at that given moment.\n                                            </Typography>\n                                        }\n                                    >\n                                        <InfoIcon />\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                        CURRENT APY:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                        {myAPY}%\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\" sx={{ ml: 0.7, mt: -0.3 }}>\n                                    <Tooltip\n                                        sx={{ color: theme.palette.success.main }}\n                                        title={\n                                            <Typography\n                                                sx={{\n                                                    color: theme.palette.success.main\n                                                }}\n                                            >\n                                                Current APY - shows your APY at the moment if you open a stake. It is calculated by the\n                                                following formula: SHARESBONUS * 5 + 8%. The APY is limited to 108% (20 SHARESBONUS).\n                                            </Typography>\n                                        }\n                                    >\n                                        <InfoIcon />\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    sx={{\n                                        backgroundColor: theme.palette.grey[900],\n                                        mt: 2,\n                                        mb: 3\n                                    }}\n                                    lg=\"auto\"\n                                >\n                                    <Button\n                                        onClick={() => {\n                                            stakeStax(stakeAFormatted, stakeName).then(() => {\n                                                fetchStaxBalance();\n                                                fetchSharesBalance();\n                                                fetchStakesBalance();\n                                            });\n                                        }}\n                                        sx={{\n                                            fontSize: 20,\n                                            width: 130,\n                                            color: theme.palette.grey[900],\n                                            backgroundColor: theme.palette.success.main\n                                        }}\n                                    >\n                                        Stake\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n                <Grid item container lg={4} xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 6 }}>\n                    <Card\n                        sx={{\n                            width: 320,\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)',\n                            mb: 1\n                        }}\n                    >\n                        <Grid\n                            container\n                            sx={{\n                                backgroundColor: theme.palette.grey[900],\n                                mt: 3,\n                                display: 'flex',\n                                justifyContent: 'center'\n                            }}\n                        >\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    APY /\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    REWARDS RATE\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs={10}>\n                                <Typography variant=\"h5\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    When creating a stake, the contract will save the staker`s` sSTX balance as SHARESBONUS. 1 SHARESBONUS +\n                                    ~4.56% APY.\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Initial APY:\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    9.125%\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Current APY:\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ my: 4, ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    {myAPY}%\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n                <Grid item lg={10} xs=\"auto\" sx={{ mt: 5 }}>\n                    <Grid item xs=\"auto\">\n                        <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                            Active Stakes\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item cotainer sx={{ display: 'flex', justifyContent: 'center', width: 330, minHeight: 320, maxHeight: 500 }}>\n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell allign=\"center\">\n                                    <Typography textAlign=\"center\">NAME</Typography>\n                                </TableCell>\n                                <TableCell allign=\"center\">\n                                    <Typography textAlign=\"center\">SHARESBONUS</Typography>\n                                </TableCell>\n                                <TableCell allign=\"center\">\n                                    <Typography textAlign=\"center\">STAKED</Typography>\n                                </TableCell>\n                                <TableCell allign=\"center\">\n                                    <Typography textAlign=\"center\">REWARDS</Typography>\n                                </TableCell>\n                                <TableCell allign=\"center\">\n                                    <Typography textAlign=\"center\">TUM</Typography>\n                                </TableCell>\n                                <TableCell allign=\"center\">\n                                    <Typography textAlign=\"center\">ACTIVITIES</Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {stakedd.map((total, index) => (\n                                <TableRow>\n                                    <TableCell key={index} allign=\"right\">\n                                        <Typography textAlign=\"center\">{total.stakename}</Typography>\n                                    </TableCell>\n                                    <TableCell key={index} allign=\"right\">\n                                        <Typography textAlign=\"center\">{total.sharesbonus}</Typography>\n                                    </TableCell>\n                                    <TableCell key={index} allign=\"right\">\n                                        <Typography textAllign=\"center\">\n                                            {(total.amount / Number18Decimals).toLocaleString(undefined, {\n                                                maximumFractionDigits: 2\n                                            })}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell key={index} allign=\"center\">\n                                        <Typography textAllign=\"center\">\n                                            {(total.claimable / Number18Decimals).toLocaleString(undefined, {\n                                                maximumFractionDigits: 2\n                                            })}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell key={index} allign=\"center\">\n                                        <Typography textAlign=\"center\">{total.since}</Typography>\n                                    </TableCell>\n                                    <TableCell key={index} allign=\"center\">\n                                        <Button\n                                            sx={{\n                                                fontSize: 15,\n                                                width: 30,\n                                                height: 23,\n                                                color: theme.palette.grey[900],\n                                                backgroundColor: theme.palette.success.main\n                                            }}\n                                            key={index}\n                                        >\n                                            Close\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n        </>\n    );\n};\n\nexport default StakingCard;\n","import { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport StakingCard from './StakingCard';\n// ==============================|| TYPOGRAPHY ||============================== //\n\nconst Typography = () => {\n    useTheme();\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item lg={12}>\n                <StakingCard />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Typography;\n"],"sourceRoot":""}