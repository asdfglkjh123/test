{"version":3,"sources":["assets/images/busdlogo.png","views/utilities/XsBusdLogo.js","views/utilities/busdSmallLogo.js","../node_modules/@mui/icons-material/Settings.js","../node_modules/@mui/material/IconButton/iconButtonClasses.js","../node_modules/@mui/material/IconButton/IconButton.js","views/utilities/smallStaxLogo.js","views/utilities/TablerIcons.js"],"names":["XsBusdLogo","useTheme","justifyContent","sx","ml","mt","width","src","BUSD","alt","BusdSmallLogo","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getIconButtonUtilityClass","slot","generateUtilityClass","iconButtonClasses","generateUtilityClasses","_excluded","IconButtonRoot","styled","ButtonBase","name","overridesResolver","props","styles","ownerState","root","color","capitalize","edge","size","theme","_extends","textAlign","flex","fontSize","typography","pxToRem","padding","borderRadius","overflow","palette","action","active","transition","transitions","create","duration","shortest","disableRipple","backgroundColor","alpha","hoverOpacity","marginLeft","marginRight","main","disabled","IconButton","React","inProps","ref","useThemeProps","children","className","disableFocusRipple","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","centerRipple","focusRipple","SmallStaxLogo","Grid","alignContent","Stax","style","position","top","left","transform","bgcolor","border","boxShadow","borderColor","p","DEX","useState","setTotalStaxSupply","preBusdValue","setPreBusdValue","setPreBusdValue2","busdValue","setBusdValue","busdValueF","Web3","utils","toWei","toString","busdValueFormatted","toBN","BigNumber","busdBalance","setBusdBalance","busdBalanceFinal","decimalPlaces","toLocaleString","undefined","staxBalance","setStaxBalance","staxBalanceFinal","swappingToken","setSwappingToken","staxPrice","setStaxPrice","priceImpact1","priceImpact2","loading","setLoading","open4","setOpen4","handleClose4","open5","setOpen5","handleClose5","staxLogoFirst","setStaxLogoFirst","handleLoadingFalse","token1address","setToken1address","token2address","setToken2address","pathToPurchase","slippage","setSlippage","slippageF","setSlippageF","handleSwap","fetchBusdBalance","a","ggetBUSDBalance","then","catch","err","console","log","fetchStaxBalance","ggetStaxBalance","fetchStaxTotalSupply","ggetTotalSTAXSupply","result","fetchStaxPrice","getStaxPrice","updateBalances","useEffect","load2","Modal","open","onBackdropClick","Box","item","container","display","Typography","variant","component","TextField","success","inputProps","height","grey","onChange","e","target","id","Button","onClick","swapStaxAndBusd","MainCard","mb","content","CardContent","xs","lg","Card","borderLeft","borderRight","borderBottom","light","spacing","md","sm","mr","fullWidth","defaultValue","label","maximumFractionDigits","LoadingButton","minHeight","minWidth","approveBusd","approveStax"],"mappings":"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","file":"static/js/9.7ae314a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/busdlogo.78457406.png\";","// project imports\nimport BUSD from '../../assets/images/busdlogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst XsBusdLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" sx={{ ml: 0.4, mt: 0.1 }}>\n                <img width={16} src={BUSD} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default XsBusdLogo;\n","// project imports\nimport BUSD from '../../assets/images/busdlogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst BusdSmallLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\">\n                <img width={23} src={BUSD} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default BusdSmallLogo;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"\n}), 'Settings');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\n\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: theme.palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  })\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, ownerState.color !== 'inherit' && ownerState.color !== 'default' && _extends({\n  color: theme.palette[ownerState.color].main\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}), ownerState.size === 'small' && {\n  padding: 5,\n  fontSize: theme.typography.pxToRem(18)\n}, ownerState.size === 'large' && {\n  padding: 12,\n  fontSize: theme.typography.pxToRem(28)\n}, {\n  [`&.${iconButtonClasses.disabled}`]: {\n    backgroundColor: 'transparent',\n    color: theme.palette.action.disabled\n  }\n}));\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n\n  const {\n    edge = false,\n    children,\n    className,\n    color = 'default',\n    disabled = false,\n    disableFocusRipple = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;","// project imports\nimport Stax from '../../assets/StaxLogoOnly.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst SmallStaxLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" alignContent=\"center\">\n                <img width={23} src={Stax} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default SmallStaxLogo;\n","// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Box, Card, CardContent, TextField, Grid, Typography, Modal, IconButton } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Web3 from 'web3';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport React, { useState, useEffect } from 'react';\nimport SwapVerticalCircleIcon from '@mui/icons-material/SwapVerticalCircle';\nimport {\n    ggetBUSDBalance,\n    ggetStaxBalance,\n    getStaxPrice,\n    ggetTotalSTAXSupply,\n    swapStaxAndBusd,\n    approveStax,\n    approveBusd\n} from 'components/wallet/sharesABI';\nimport BusdSmallLogo from './busdSmallLogo';\nimport SmallStaxLogo from './smallStaxLogo';\nimport XsStaxLogo from './xsStaxLogo';\nimport XsBusdLogo from './XsBusdLogo';\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 300,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    borderRadius: 7,\n    borderColor: 'black',\n    p: 3\n};\n\nconst DEX = () => {\n    const [totalStaxSuply, setTotalStaxSupply] = React.useState(0);\n    const [preBusdValue, setPreBusdValue] = useState();\n    const [preBusdValue2, setPreBusdValue2] = useState();\n    const [busdValue, setBusdValue] = useState(0);\n    const busdValueF = Web3.utils.toWei(busdValue.toString(), 'ether');\n    const busdValueFormatted = Web3.utils.toBN(busdValueF);\n    // eslint-disable-next-line global-require\n    const BigNumber = require('bignumber.js');\n    const [busdBalance, setBusdBalance] = React.useState();\n    const busdBalanceNumber = new BigNumber(busdBalance);\n    const busdBalanceFormat = busdBalanceNumber.decimalPlaces(2);\n    const busdBalanceFinal = busdBalanceFormat.toLocaleString(undefined);\n    const [staxBalance, setStaxBalance] = React.useState();\n    const staxBalanceNumber = new BigNumber(staxBalance);\n    const staxBalanceFormat = staxBalanceNumber.decimalPlaces(2);\n    const staxBalanceFinal = staxBalanceFormat.toLocaleString(undefined);\n    const theme = useTheme();\n    const [swappingToken, setSwappingToken] = useState('STAX');\n    const [staxPrice, setStaxPrice] = useState([], [], []);\n    const priceImpact1 = (preBusdValue / staxPrice[1]) * 100000000000000000000;\n    const priceImpact2 = (preBusdValue / staxPrice[0]) * 100000000000000000000;\n    const [loading, setLoading] = React.useState(false);\n    const [open4, setOpen4] = React.useState(false);\n    const handleClose4 = () => setOpen4(false);\n    const handleOpen4 = () => setOpen4(true);\n    const [open5, setOpen5] = React.useState(false);\n    const handleClose5 = () => setOpen5(false);\n    const handleOpen5 = () => setOpen5(true);\n    const [staxLogoFirst, setStaxLogoFirst] = React.useState(true);\n    const handleStaxLogoFirst = () => setStaxLogoFirst(true);\n    const handleStaxLogoFirstN = () => setStaxLogoFirst(false);\n    const handleLoadingTrue = () => setLoading(true);\n    const handleLoadingFalse = () => setLoading(false);\n    const [token1address, setToken1address] = useState();\n    const [token2address, setToken2address] = useState();\n    const pathToPurchase = [token1address, token2address];\n    const [slippage, setSlippage] = useState(6);\n    const [slippageF, setSlippageF] = useState();\n    const handleSwap = () => {\n        if (staxLogoFirst === true) {\n            handleStaxLogoFirstN();\n            setToken1address('0xd389253265dd6b85C47c410EC5fF0c6A383CE949');\n            setToken2address('0x09712607134d4119a678dE94242505Be98C6Ae42');\n            setSwappingToken('BUSD');\n        } else if (staxLogoFirst === false) {\n            handleStaxLogoFirst();\n            setToken1address('0x09712607134d4119a678dE94242505Be98C6Ae42');\n            setToken2address('0xd389253265dd6b85C47c410EC5fF0c6A383CE949');\n            setSwappingToken('STAX');\n        }\n    };\n    const fetchBusdBalance = async () => {\n        ggetBUSDBalance()\n            .then((busdBalance) => {\n                setBusdBalance(busdBalance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStaxBalance = async () => {\n        ggetStaxBalance()\n            .then((staxBalance) => {\n                setStaxBalance(staxBalance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStaxTotalSupply = async () => {\n        ggetTotalSTAXSupply()\n            .then((result) => {\n                setTotalStaxSupply(result);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStaxPrice = async () => {\n        getStaxPrice()\n            .then((result) => {\n                setStaxPrice(result);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const updateBalances = async () => {\n        ggetStaxBalance().then((staxBalance) => {\n            setStaxBalance(staxBalance);\n            if (staxLogoFirst === true) {\n                setToken1address('0x09712607134d4119a678dE94242505Be98C6Ae42');\n                setToken2address('0xd389253265dd6b85C47c410EC5fF0c6A383CE949');\n            }\n        });\n        ggetBUSDBalance().then((busdBalance) => {\n            setBusdBalance(busdBalance);\n        });\n    };\n    useEffect(() => {\n        async function load2() {\n            fetchBusdBalance();\n            fetchStaxBalance();\n            fetchStaxPrice();\n            fetchStaxTotalSupply();\n            setSlippageF(5.5);\n            updateBalances();\n        }\n        load2();\n    }, [busdBalance, busdBalanceFinal, staxBalance, staxBalanceFinal]);\n    return (\n        <>\n            <Modal\n                open={open4}\n                onBackdropClick={handleClose4}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Grid item container sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Grid item>\n                            <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                                Slippage should be at least 5.5% as the STAX Token applies 5% fee on every Buy / Sell transaction.\n                            </Typography>\n                        </Grid>\n                        <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                            Enter slippage:\n                        </Typography>\n                        <TextField\n                            sx={{\n                                display: 'flex',\n                                mt: 2.3,\n                                ml: 1,\n                                border: 1,\n                                borderRadius: 3,\n                                borderColor: theme.palette.success.main\n                            }}\n                            inputProps={{\n                                style: {\n                                    textAlign: 'center',\n                                    height: 1,\n                                    width: 27,\n                                    backgroundColor: theme.palette.grey[900],\n                                    color: 'white'\n                                }\n                            }}\n                            onChange={(e) => setSlippage(e.target.value)}\n                            id=\"standard-basic\"\n                            variant=\"outlined\"\n                            color=\"success\"\n                        />\n                        <Typography variant=\"h4\" sx={{ mt: 3, ml: 0.3 }}>\n                            %\n                        </Typography>\n                    </Grid>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button\n                            onClick={() => {\n                                handleClose4();\n                                setSlippageF(slippage);\n                            }}\n                            sx={{\n                                mt: 3,\n                                fontSize: 15,\n                                width: 80,\n                                height: 30,\n                                color: theme.palette.grey[900],\n                                backgroundColor: theme.palette.success.main\n                            }}\n                        >\n                            Done\n                        </Button>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open5}\n                onBackdropClick={() => {\n                    handleClose5();\n                    handleLoadingFalse();\n                }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Grid item container sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Grid item>\n                            <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                                You are going to swap {preBusdValue} {swappingToken}. Please confirm the transaction by clicking below\n                                button.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button\n                            onClick={() => {\n                                swapStaxAndBusd(busdValueFormatted, 0, pathToPurchase).then(() => {\n                                    handleLoadingFalse();\n                                    updateBalances();\n                                    setPreBusdValue(0);\n                                    getStaxPrice();\n                                    handleClose5();\n                                });\n                            }}\n                            sx={{\n                                mt: 3,\n                                fontSize: 15,\n                                width: 80,\n                                height: 30,\n                                color: theme.palette.grey[900],\n                                backgroundColor: theme.palette.success.main\n                            }}\n                        >\n                            Confirm\n                        </Button>\n                    </Grid>\n                </Box>\n            </Modal>\n            <MainCard\n                sx={{\n                    width: '100%',\n                    height: '108%',\n                    borderRadius: 0,\n                    backgroundColor: theme.palette.grey[900],\n                    border: 0,\n                    mb: 5\n                }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid item container sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <Grid container sx={{ justifyContent: 'center', display: 'flex' }}>\n                            <Typography textAlign=\"center\" variant=\"h6\" color={theme.palette.grey[50]}>\n                                Swap\n                            </Typography>\n                            <SwapVerticalCircleIcon color=\"success\" fontSize=\"large\" sx={{ mt: 2.5, ml: 1 }} />\n                        </Grid>\n                        <Grid item container xs={12} sx={{ mt: 5, display: 'flex', justifyContent: 'center' }} lg={4}>\n                            <Card\n                                sx={{\n                                    borderLeft: 1,\n                                    borderRight: 1,\n                                    borderBottom: 3,\n                                    borderColor: theme.palette.success.light,\n                                    borderRadius: 5,\n                                    boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                }}\n                            >\n                                <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                    <Grid container spacing={1} sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                                        <Grid item xs=\"auto\" lg=\"auto\" md=\"auto\" sm=\"auto\" sx={{ mt: 1.2 }}>\n                                            <Typography variant=\"h2\" color={theme.palette.grey[50]}>\n                                                SWAP\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\" lg=\"auto\" sm=\"auto\" md=\"auto\" sx={{ mt: 1.2 }}>\n                                            <Typography variant=\"h2\" color={theme.palette.success.main} textAlign=\"left\">\n                                                STAX\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\" lg=\"auto\" sm=\"auto\" md=\"auto\" sx={{ mt: 0.3 }}>\n                                            <IconButton onClick={() => handleOpen4()}>\n                                                <SettingsIcon fontSize=\"medium\" color=\"success\" />\n                                            </IconButton>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sx={{\n                                            backgroundColor: theme.palette.grey[900],\n                                            justifyContent: 'center',\n                                            display: 'flex',\n                                            mt: 4\n                                        }}\n                                        lg={12}\n                                        md={7}\n                                        xs={12}\n                                        sm={7}\n                                    >\n                                        <Grid\n                                            item\n                                            xs={8.5}\n                                            sx={{\n                                                borderRadius: 2,\n                                                border: 2,\n                                                borderColor: theme.palette.success.main,\n                                                justifyContent: 'right',\n                                                display: 'flex'\n                                            }}\n                                        >\n                                            <Grid item sx={{ display: 'flex', justifyContent: 'center', mt: 1.5, mr: 1, ml: 1 }}>\n                                                {staxLogoFirst ? <SmallStaxLogo /> : <BusdSmallLogo />}\n                                            </Grid>\n                                            {staxLogoFirst ? (\n                                                <TextField\n                                                    fullWidth\n                                                    sx={{\n                                                        display: 'flex',\n                                                        borderColor: theme.palette.success.main\n                                                    }}\n                                                    inputProps={{ style: { textAlign: 'left', color: 'white' } }}\n                                                    onChange={(e) => {\n                                                        setPreBusdValue(e.target.value);\n                                                        setPreBusdValue2(\n                                                            e.target.value * (staxPrice[1] / staxPrice[0]) - priceImpact2 * e.target.value\n                                                        );\n                                                    }}\n                                                    value={preBusdValue}\n                                                    defaultValue={0}\n                                                    id=\"standard-basic\"\n                                                    label=\"Enter STAX amount:\"\n                                                    variant=\"standard\"\n                                                    color=\"success\"\n                                                />\n                                            ) : (\n                                                <TextField\n                                                    fullWidth\n                                                    sx={{\n                                                        display: 'flex',\n                                                        borderColor: theme.palette.success.main\n                                                    }}\n                                                    inputProps={{ style: { textAlign: 'left', color: 'white' } }}\n                                                    onChange={(e) => {\n                                                        setPreBusdValue(e.target.value);\n                                                        setPreBusdValue2(\n                                                            preBusdValue * (staxPrice[0] / staxPrice[1]) - priceImpact2 * e.target.value\n                                                        );\n                                                    }}\n                                                    value={preBusdValue}\n                                                    id=\"standard-basic\"\n                                                    label=\"Enter BUSD amount:\"\n                                                    defaultValue={0}\n                                                    variant=\"standard\"\n                                                    color=\"success\"\n                                                />\n                                            )}\n                                            {staxLogoFirst ? (\n                                                <Button\n                                                    variant=\"text\"\n                                                    onClick={() => setPreBusdValue(staxBalance)}\n                                                    size=\"small\"\n                                                    sx={{ color: theme.palette.success.main, borderColor: theme.palette.success.main }}\n                                                >\n                                                    Max\n                                                </Button>\n                                            ) : (\n                                                <Button\n                                                    variant=\"text\"\n                                                    onClick={() => setPreBusdValue(busdBalance)}\n                                                    size=\"small\"\n                                                    sx={{ color: theme.palette.success.main, borderColor: theme.palette.success.main }}\n                                                >\n                                                    Max\n                                                </Button>\n                                            )}\n                                        </Grid>\n                                        {staxLogoFirst ? (\n                                            <Grid item container xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 0.5 }}>\n                                                <Typography textAlign=\"center\">Balance: {staxBalanceFinal}</Typography>\n                                                <XsStaxLogo />\n                                            </Grid>\n                                        ) : (\n                                            <Grid item container xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 0.5 }}>\n                                                <Typography textAlign=\"center\">Balance: {busdBalanceFinal}</Typography>\n                                                <XsBusdLogo />\n                                            </Grid>\n                                        )}\n                                    </Grid>\n                                    <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                        <IconButton\n                                            onClick={() => {\n                                                handleSwap();\n                                            }}\n                                        >\n                                            <SwapVerticalCircleIcon color=\"success\" fontSize=\"large\" />\n                                        </IconButton>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sx={{\n                                            backgroundColor: theme.palette.grey[900],\n                                            justifyContent: 'center',\n                                            display: 'flex'\n                                        }}\n                                        lg={12}\n                                        md={7}\n                                        xs={12}\n                                        sm={7}\n                                    >\n                                        <Grid\n                                            item\n                                            xs={8.5}\n                                            sx={{\n                                                borderRadius: 2,\n                                                mt: 1,\n                                                border: 2,\n                                                borderColor: theme.palette.success.main,\n                                                justifyContent: 'center',\n                                                display: 'flex'\n                                            }}\n                                        >\n                                            <Grid item sx={{ display: 'flex', justifyContent: 'center', mt: 1.5, mr: 1, ml: 1 }}>\n                                                {staxLogoFirst ? <BusdSmallLogo /> : <SmallStaxLogo />}\n                                            </Grid>\n                                            <TextField\n                                                fullWidth\n                                                sx={{\n                                                    display: 'flex',\n                                                    borderColor: theme.palette.success.main\n                                                }}\n                                                inputProps={{ style: { textAlign: 'left', color: 'white' } }}\n                                                defaultValue={0}\n                                                id=\"standard-basic\"\n                                                label=\"Enter amount:\"\n                                                variant=\"standard\"\n                                                color=\"success\"\n                                            />\n                                        </Grid>\n                                        {staxLogoFirst ? (\n                                            <Grid item container xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 0.5 }}>\n                                                <Typography textAlign=\"center\">Balance:{busdBalanceFinal}</Typography>\n                                                <XsBusdLogo />\n                                            </Grid>\n                                        ) : (\n                                            <Grid item container xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 0.5 }}>\n                                                <Typography textAlign=\"center\">Balance:{staxBalanceFinal}</Typography>\n                                                <XsStaxLogo />\n                                            </Grid>\n                                        )}\n                                        <Grid item xs={12} sx={{ mt: 1 }}>\n                                            {staxLogoFirst ? (\n                                                <Typography textAlign=\"center\" sx={{ mb: 1, mt: 2, color: theme.palette.success.light }}>\n                                                    Price impact: {priceImpact2.toLocaleString(undefined, { maximumFractionDigits: 2 })} %\n                                                </Typography>\n                                            ) : (\n                                                <Typography textAlign=\"center\" sx={{ mb: 1, mt: 2, color: theme.palette.success.light }}>\n                                                    Price impact: {priceImpact1.toLocaleString(undefined, { maximumFractionDigits: 2 })} %\n                                                </Typography>\n                                            )}\n                                            <Typography textAlign=\"center\" sx={{ mb: 1, color: theme.palette.success.light }}>\n                                                Slippage: {slippageF}%\n                                            </Typography>\n                                            <Grid item sx={{ mb: 3, mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                                <LoadingButton\n                                                    loading={loading}\n                                                    onClick={() => {\n                                                        setBusdValue(preBusdValue);\n                                                        handleLoadingTrue();\n                                                        updateBalances();\n                                                        handleOpen5();\n                                                    }}\n                                                    sx={{\n                                                        fontSize: 18,\n                                                        minHeight: 45,\n                                                        minWidth: 110,\n                                                        bgcolor: theme.palette.success.main,\n                                                        backgroundColor: theme.palette.success.main,\n                                                        color: theme.palette.grey[900]\n                                                    }}\n                                                >\n                                                    SWAP\n                                                </LoadingButton>\n                                            </Grid>\n                                            <Grid item sx={{ mb: 3, mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                                <Button\n                                                    onClick={() => {\n                                                        approveBusd().then(() => {\n                                                            approveStax();\n                                                        });\n                                                    }}\n                                                    sx={{\n                                                        fontSize: 18,\n                                                        minHeight: 45,\n                                                        minWidth: 110,\n                                                        bgcolor: theme.palette.success.main,\n                                                        backgroundColor: theme.palette.success.main,\n                                                        color: theme.palette.grey[900]\n                                                    }}\n                                                >\n                                                    APPROVE\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default DEX;\n"],"sourceRoot":""}