{"version":3,"sources":["assets/StaxLogoOnly.png","views/utilities/staxlogo.js","views/utilities/StakingCard.js","views/utilities/Typography.js"],"names":["StaxLogo","useTheme","Grid","justifyContent","alignContent","sx","height","width","src","Stax","alt","StakingCard","theme","useState","balance","setBalance","balanceFormatted","BigNumber","decimalPlaces","toLocaleString","undefined","stakeAmount","setStakeAmount","stakeName","setStakeName","Number18Decimals","stakeAmountFormatted","Web3","utils","toWei","toString","stakeAFormatted","toBN","sharesBalance","setSharesBalance","stakesList","setStakesList","stakedd","myAPY","fetchStaxBalance","a","ggetStaxBalance","then","catch","err","console","log","fetchStakesBalance","stakeHas","balancee","fetchSharesBalance","ggetOwnBalance","useEffect","load","MainCard","borderRadius","backgroundColor","palette","grey","border","content","CardContent","container","spacing","display","mt","item","textAlign","variant","color","Divider","lg","xs","Card","borderLeft","borderRight","borderBottom","borderColor","success","light","boxShadow","ml","main","pt","Tooltip","title","my","md","TextField","value","onChange","e","target","inputProps","style","id","defaultValue","type","mb","Button","onClick","stakeStax","fontSize","pl","map","total","index","stakename","sharesbonus","sm","amount","maximumFractionDigits","claimable","since","Typography","gridSpacing"],"mappings":"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","file":"static/js/12.9f525c29.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/StaxLogoOnly.17f6a5b9.png\";","// project imports\nimport Stax from '../../assets/StaxLogoOnly.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst StaxLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" alignContent=\"center\" sx={{ height: 100 }}>\n                <img height={80} width=\"height\" src={Stax} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default StaxLogo;\n","import { useState, useEffect } from 'react';\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Card, CardContent, Divider, Grid, TextField, Tooltip, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport StaxLogo from './staxlogo';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { ggetStaxBalance, ggetOwnBalance, stakeStax, stakeHas } from 'components/wallet/sharesABI';\nimport BigNumber from 'bignumber.js';\nimport Web3 from 'web3';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst StakingCard = () => {\n    const theme = useTheme();\n    const [balance, setBalance] = useState(0);\n    const balanceToNumber = new BigNumber(balance);\n    const balanceFormat = balanceToNumber.decimalPlaces(2);\n    const balanceFormatted = balanceFormat.toLocaleString(undefined);\n    const [stakeAmount, setStakeAmount] = useState(0);\n    const [stakeName, setStakeName] = useState(0);\n    const Number18Decimals = 1000000000000000000;\n    const stakeAmountFormatted = Web3.utils.toWei(stakeAmount.toString(), 'ether');\n    const stakeAFormatted = Web3.utils.toBN(stakeAmountFormatted);\n    const [sharesBalance, setSharesBalance] = useState(0);\n    const [stakesList, setStakesList] = useState([[], []]);\n    const [staked, stakedd] = stakesList;\n    const myAPY = 9.125 + sharesBalance * 4.5625;\n    const fetchStaxBalance = async () => {\n        ggetStaxBalance()\n            .then((balance) => {\n                setBalance(balance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStakesBalance = async () => {\n        stakeHas(true)\n            .then((balancee) => {\n                setStakesList(balancee);\n                console.log(balancee);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchSharesBalance = async () => {\n        ggetOwnBalance()\n            .then((balance) => {\n                if (balance > 20) {\n                    setSharesBalance(20);\n                } else {\n                    setSharesBalance(balance);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    useEffect(() => {\n        async function load() {\n            fetchStaxBalance();\n            stakeHas();\n            fetchSharesBalance();\n            fetchStakesBalance();\n        }\n        load();\n    }, []);\n    return (\n        <>\n            <MainCard sx={{ borderRadius: 0, backgroundColor: theme.palette.grey[900], border: 0 }} content={false}>\n                <CardContent>\n                    <Grid container spacing={2} sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <Grid container mt={5} sx={{ justifyContent: 'center', display: 'flex' }}>\n                            <Grid item>\n                                <Typography textAlign=\"center\" variant=\"h1\" color={theme.palette.grey[50]}>\n                                    Staking\n                                </Typography>\n                                <Divider />\n                            </Grid>\n                        </Grid>\n                        <Grid item lg={4.5} xs={12} sx={{ mt: 6 }} justifyContent=\"center\">\n                            <Card\n                                sx={{\n                                    borderLeft: 1,\n                                    borderRight: 1,\n                                    borderBottom: 3,\n                                    borderColor: theme.palette.success.light,\n                                    borderRadius: 5,\n                                    boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                }}\n                            >\n                                <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                    <Grid item sx={{ backgroundColor: theme.palette.grey[900], mt: 2 }} lg={3.6} xs=\"auto\">\n                                        <StaxLogo />\n                                    </Grid>\n                                    <Grid item lg=\"auto\" xs=\"auto\" sx={{ ml: 0.8, mt: 5 }}>\n                                        <Typography variant=\"h2\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                            Stake\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item lg=\"auto\" xs=\"auto\">\n                                        <Typography\n                                            variant=\"h2\"\n                                            sx={{ ml: 0.7, mt: 5 }}\n                                            color={theme.palette.success.main}\n                                            textAlign=\"center\"\n                                        >\n                                            STAX\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item lg={1} xs=\"auto\" sx={{ mt: 5, pt: 0.2 }}>\n                                        <Tooltip\n                                            sx={{ color: theme.palette.success.main }}\n                                            title={\n                                                <Typography\n                                                    sx={{\n                                                        color: theme.palette.success.main\n                                                    }}\n                                                >\n                                                    Stakes have name, staked amount and SHARESBONUS. Users choose the name and tokens to be\n                                                    staked. When creating a stake, the smart contract will get the user`s current sSTX\n                                                    balance and save it as SHARESBONUS in the stake`s properties.\n                                                </Typography>\n                                            }\n                                        >\n                                            <InfoIcon />\n                                        </Tooltip>\n                                    </Grid>\n                                    <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                        <Grid\n                                            item\n                                            sx={{ justifyContent: 'center', backgroundColor: theme.palette.grey[900], my: 1 }}\n                                            lg=\"auto\"\n                                            md=\"auto\"\n                                            xs=\"auto\"\n                                        >\n                                            <Typography variant=\"h4\" textAlign=\"center\">\n                                                NAME:\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item sx={{ backgroundColor: theme.palette.grey[900] }} lg=\"auto\">\n                                            <TextField\n                                                value={stakeName}\n                                                sx={{ borderBottom: 2, borderColor: theme.palette.success.main }}\n                                                onChange={(e) => setStakeName(e.target.value)}\n                                                inputProps={{ style: { width: 110, color: 'white' } }}\n                                                id=\"standard-basic\"\n                                                variant=\"standard\"\n                                                color=\"success\"\n                                            />\n                                            <Typography variant=\"h5\" textAlign=\"left\">\n                                                Enter stake name\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                        <Grid\n                                            item\n                                            sx={{ justifyContent: 'center', backgroundColor: theme.palette.grey[900], my: 1 }}\n                                            lg=\"auto\"\n                                            md=\"auto\"\n                                            xs=\"auto\"\n                                        >\n                                            <Typography variant=\"h4\" textAlign=\"center\">\n                                                AMOUNT:\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item sx={{ backgroundColor: theme.palette.grey[900] }} lg=\"auto\">\n                                            <TextField\n                                                value={stakeAmount}\n                                                defaultValue={0}\n                                                sx={{ borderBottom: 2, borderColor: theme.palette.success.main }}\n                                                onChange={(e) => setStakeAmount(e.target.value)}\n                                                inputProps={{ style: { width: 110, color: 'white' } }}\n                                                type=\"number\"\n                                                id=\"standard-basic\"\n                                                variant=\"standard\"\n                                                color=\"success\"\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Typography variant=\"h5\" textAlign=\"left\">\n                                                Balance: {balanceFormatted} STAX\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                        <Grid item xs=\"auto\">\n                                            <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                SHARESBONUS:\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\">\n                                            <Typography variant=\"h4\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                                {sharesBalance}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\" sx={{ ml: 0.7, mt: -0.3 }}>\n                                            <Tooltip\n                                                sx={{ color: theme.palette.success.main }}\n                                                title={\n                                                    <Typography\n                                                        sx={{\n                                                            color: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        SHARESBONUS - shows your current sSTX balance. Each sSTX in your wallet, increases\n                                                        your APY by 5%. An user may hold unlimited amount of sSTX but the SHARESBONUS is\n                                                        limited to 20. Therefore, we can say the maximum APY is 108% (20 * 5% + 8%).\n                                                    </Typography>\n                                                }\n                                            >\n                                                <InfoIcon />\n                                            </Tooltip>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                        <Grid item xs=\"auto\">\n                                            <Typography variant=\"h4\" sx={{ mt: 1 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                                INITIAL APY:\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\">\n                                            <Typography\n                                                variant=\"h4\"\n                                                sx={{ mt: 1, ml: 1 }}\n                                                color={theme.palette.success.main}\n                                                textAlign=\"center\"\n                                            >\n                                                9.13%\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\" sx={{ ml: 0.7, my: 0.9 }}>\n                                            <Tooltip\n                                                sx={{ color: theme.palette.success.main }}\n                                                title={\n                                                    <Typography\n                                                        sx={{\n                                                            color: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Initial APY - That is the minimum APY that a stake can get if there are no sSTX in\n                                                        the wallet of the staker at that given moment.\n                                                    </Typography>\n                                                }\n                                            >\n                                                <InfoIcon />\n                                            </Tooltip>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                        <Grid item xs=\"auto\">\n                                            <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                CURRENT APY:\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\">\n                                            <Typography variant=\"h4\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                                {myAPY}%\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\" sx={{ ml: 0.7, mt: -0.3 }}>\n                                            <Tooltip\n                                                sx={{ color: theme.palette.success.main }}\n                                                title={\n                                                    <Typography\n                                                        sx={{\n                                                            color: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Current APY - shows your APY at the moment if you open a stake. It is calculated by\n                                                        the following formula: SHARESBONUS * 5 + 8%. The APY is limited to 108% (20\n                                                        SHARESBONUS).\n                                                    </Typography>\n                                                }\n                                            >\n                                                <InfoIcon />\n                                            </Tooltip>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                        <Grid\n                                            item\n                                            sx={{\n                                                backgroundColor: theme.palette.grey[900],\n                                                mt: 2,\n                                                mb: 3\n                                            }}\n                                            lg=\"auto\"\n                                        >\n                                            <Button\n                                                onClick={() => {\n                                                    stakeStax(stakeAFormatted, stakeName).then(() => {\n                                                        fetchStaxBalance();\n                                                        fetchSharesBalance();\n                                                        fetchStakesBalance();\n                                                    });\n                                                }}\n                                                sx={{\n                                                    fontSize: 20,\n                                                    width: 130,\n                                                    color: theme.palette.grey[900],\n                                                    backgroundColor: theme.palette.success.main\n                                                }}\n                                            >\n                                                Stake\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                        <Grid item lg={4.5} xs={12} sx={{ mt: 6 }}>\n                            <Card\n                                sx={{\n                                    borderLeft: 1,\n                                    borderRight: 1,\n                                    borderBottom: 3,\n                                    borderColor: theme.palette.success.light,\n                                    borderRadius: 5,\n                                    boxShadow: '0px 10px 20px rgb(0, 230, 117)',\n                                    mb: 1\n                                }}\n                            >\n                                <Grid\n                                    container\n                                    sx={{\n                                        backgroundColor: theme.palette.grey[900],\n                                        mt: 3,\n                                        display: 'flex',\n                                        justifyContent: 'center'\n                                    }}\n                                >\n                                    <Grid item xs=\"auto\">\n                                        <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                            APY /\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs=\"auto\">\n                                        <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                            REWARDS RATE\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <Grid item xs={10}>\n                                        <Typography variant=\"h5\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                            When creating a stake, the contract will save the staker`s` sSTX balance as SHARESBONUS. 1\n                                            SHARESBONUS + ~4.56% APY.\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <Grid item xs=\"auto\">\n                                        <Typography variant=\"h3\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                            Initial APY:\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs=\"auto\">\n                                        <Typography variant=\"h3\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                            9.125%\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <Grid item xs=\"auto\">\n                                        <Typography variant=\"h3\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                            Current APY:\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs=\"auto\">\n                                        <Typography\n                                            variant=\"h3\"\n                                            sx={{ my: 4, ml: 1 }}\n                                            color={theme.palette.success.main}\n                                            textAlign=\"center\"\n                                        >\n                                            {myAPY}%\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                        <Grid item lg={9} xs={12} sx={{ mt: 5 }}>\n                            <Card\n                                sx={{\n                                    width: 'auto',\n                                    borderLeft: 1,\n                                    borderRight: 1,\n                                    borderBottom: 3,\n                                    borderColor: theme.palette.success.light,\n                                    borderRadius: 5,\n                                    boxShadow: '0px 10px 20px rgb(0, 230, 117)',\n                                    mb: 10\n                                }}\n                            >\n                                <Grid\n                                    container\n                                    sx={{\n                                        backgroundColor: theme.palette.grey[900],\n                                        mt: 3,\n                                        display: 'flex',\n                                        justifyContent: 'center'\n                                    }}\n                                >\n                                    <Grid item xs=\"auto\">\n                                        <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                            Active Stakes\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid container sx={{ my: 3, display: 'flex', justifyContent: 'center' }}>\n                                    <Grid item lg={1.8} md={1.9} xs=\"auto\" sx={{ pl: 1, pt: 0.2 }}>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Typography\n                                                variant=\"h4\"\n                                                sx={{ mt: -0.2 }}\n                                                color={theme.palette.success.main}\n                                                textAlign=\"center\"\n                                            >\n                                                Name\n                                            </Typography>\n                                            <Tooltip\n                                                sx={{ color: theme.palette.success.main, mt: -0.3 }}\n                                                title={\n                                                    <Typography\n                                                        sx={{\n                                                            color: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Name of the stake.\n                                                    </Typography>\n                                                }\n                                            >\n                                                <InfoIcon />\n                                            </Tooltip>\n                                        </Grid>\n                                        <Divider sx={{ backgroundColor: theme.palette.grey[50] }} />\n                                        <Grid item lg=\"auto\" xs=\"auto\" sx={{ mt: 1 }}>\n                                            <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                {stakedd.map((total, index) => (\n                                                    <Typography sx={{ mb: 3 }} key={index}>\n                                                        {total.stakename}\n                                                    </Typography>\n                                                ))}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item lg={1.8} md={2} xs=\"auto\" sx={{ pl: 1, pt: 0.2 }}>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Typography\n                                                variant=\"h4\"\n                                                sx={{ mt: -0.2 }}\n                                                color={theme.palette.success.main}\n                                                textAlign=\"center\"\n                                            >\n                                                Sharesbonus\n                                            </Typography>\n                                            <Tooltip\n                                                sx={{ color: theme.palette.success.main, mt: -0.3 }}\n                                                title={\n                                                    <Typography\n                                                        sx={{\n                                                            color: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        SHARESBONUS (BONUS) shows the amount of sSTX that you held at the moment of opening\n                                                        the stake. It also increases your stake APY as it follows: 5% per sSTX token. Each\n                                                        sSTX increases the SHAREBONUS by the factor of 1. There is a limit of maximum 20\n                                                        SHARESBONUS or 100% Bonus APY.\n                                                    </Typography>\n                                                }\n                                            >\n                                                <InfoIcon />\n                                            </Tooltip>\n                                        </Grid>\n                                        <Grid item lg=\"auto\" xs=\"auto\" sx={{ mt: 1 }}>\n                                            {stakedd.map((total, index) => (\n                                                <Typography sx={{ mb: 3 }} textAlign=\"center\" key={index}>\n                                                    {total.sharesbonus}\n                                                </Typography>\n                                            ))}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item lg={1.8} md={1.9} sm=\"auto\" xs=\"auto\" sx={{ pl: 1, pt: 0.2 }}>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Typography\n                                                variant=\"h4\"\n                                                sx={{ mt: -0.2 }}\n                                                color={theme.palette.success.main}\n                                                textAlign=\"center\"\n                                            >\n                                                Staked\n                                            </Typography>\n                                            <Tooltip\n                                                sx={{ color: theme.palette.success.main, mt: -0.3 }}\n                                                title={\n                                                    <Typography\n                                                        sx={{\n                                                            color: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Shows the amount of staked STAX tokens.\n                                                    </Typography>\n                                                }\n                                            >\n                                                <InfoIcon />\n                                            </Tooltip>\n                                        </Grid>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center', mt: 1 }}>\n                                            <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                {stakedd.map((total, index) => (\n                                                    <Typography sx={{ mb: 3 }} key={index}>\n                                                        {(total.amount / Number18Decimals).toLocaleString(undefined, {\n                                                            maximumFractionDigits: 2\n                                                        })}\n                                                    </Typography>\n                                                ))}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item lg={1.8} md={1.9} xs=\"auto\" sx={{ pl: 1, pt: 0.2 }}>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Typography\n                                                variant=\"h4\"\n                                                sx={{ mt: -0.2 }}\n                                                color={theme.palette.success.main}\n                                                textAlign=\"center\"\n                                            >\n                                                Rewards\n                                            </Typography>\n                                            <Tooltip\n                                                sx={{ color: theme.palette.success.main, mt: -0.3 }}\n                                                title={\n                                                    <Typography\n                                                        sx={{\n                                                            color: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Shows the rewards of the stake.\n                                                    </Typography>\n                                                }\n                                            >\n                                                <InfoIcon />\n                                            </Tooltip>\n                                        </Grid>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center', mt: 1 }}>\n                                            <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                {stakedd.map((total, index) => (\n                                                    <Typography\n                                                        sx={{ mb: 3 }}\n                                                        color={theme.palette.grey[50]}\n                                                        textAlign=\"center\"\n                                                        key={index}\n                                                    >\n                                                        {(total.claimable / Number18Decimals).toLocaleString(undefined, {\n                                                            maximumFractionDigits: 2\n                                                        })}\n                                                    </Typography>\n                                                ))}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item lg={1.8} md={1.9} xs=\"auto\" sx={{ pl: 1, pt: 0.2 }}>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Typography\n                                                variant=\"h4\"\n                                                sx={{ mt: -0.2 }}\n                                                color={theme.palette.success.main}\n                                                textAlign=\"center\"\n                                            >\n                                                TUM\n                                            </Typography>\n                                            <Tooltip\n                                                sx={{ color: theme.palette.success.main, mt: -0.3 }}\n                                                title={\n                                                    <Typography\n                                                        sx={{\n                                                            color: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        TUM stands for Time Until Mature and it shows how many days left until a user can\n                                                        claim the stake rewards or close it without facing a penalty.\n                                                    </Typography>\n                                                }\n                                            >\n                                                <InfoIcon />\n                                            </Tooltip>\n                                        </Grid>\n                                        <Grid item lg=\"auto\" xs=\"auto\" sx={{ mt: 1 }}>\n                                            {stakedd.map((total, index) => (\n                                                <Typography sx={{ mb: 3 }} color={theme.palette.grey[50]} textAlign=\"center\" key={index}>\n                                                    {total.since}\n                                                </Typography>\n                                            ))}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item lg={1.6} md={1.9} xs=\"auto\" sx={{ pl: 1 }}>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Typography\n                                                variant=\"h4\"\n                                                sx={{ mt: -0.2 }}\n                                                color={theme.palette.success.main}\n                                                textAlign=\"center\"\n                                            >\n                                                Activities\n                                            </Typography>\n                                            <Tooltip\n                                                sx={{ color: theme.palette.success.main, mt: -0.3 }}\n                                                title={\n                                                    <Typography\n                                                        sx={{\n                                                            color: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Users may claim their rewards or close the stake by clicking below buttons.\n                                                    </Typography>\n                                                }\n                                            >\n                                                <InfoIcon />\n                                            </Tooltip>\n                                        </Grid>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center', mt: 0.7 }}>\n                                            {stakedd.map((total, index) => (\n                                                <>\n                                                    <Button\n                                                        sx={{\n                                                            mb: 2.5,\n                                                            fontSize: 15,\n                                                            width: 30,\n                                                            height: 23,\n                                                            color: theme.palette.grey[900],\n                                                            backgroundColor: theme.palette.success.main\n                                                        }}\n                                                        key={index}\n                                                    >\n                                                        Close\n                                                    </Button>\n                                                </>\n                                            ))}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default StakingCard;\n","import { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport StakingCard from './StakingCard';\n// ==============================|| TYPOGRAPHY ||============================== //\n\nconst Typography = () => {\n    useTheme();\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item lg={12}>\n                <StakingCard />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Typography;\n"],"sourceRoot":""}