{"version":3,"sources":["views/utilities/staxlogo.js","views/utilities/StakingCard.js","views/utilities/Typography.js"],"names":["StaxLogo","useTheme","Grid","justifyContent","alignContent","sx","height","width","src","Stax","alt","style","position","top","left","transform","bgcolor","border","boxShadow","borderRadius","borderColor","p","StakingCard","theme","useState","balance","setBalance","balanceFormatted","BigNumber","decimalPlaces","toLocaleString","undefined","preAmount","setPreAmount","stakeAmount","setStakeAmount","stakeAmountF","Web3","utils","toWei","toString","stakeAmountFormatted","toBN","stakeName","setStakeName","Number18Decimals","sharesBalance","setSharesBalance","boostedSharesBalance","setBoostedSharesBalance","stakesList","setStakesList","currentClaimable","setCurrentClaimable","currentStaked","setCurrentStaked","withdrawSum","setWithdrawSum","withdrawSumFormatted","withdrawAFormatted","stakedd","React","loading","setLoading","loading2","setLoading2","loading3","setLoading3","loading4","setLoading4","loading5","setLoading5","setLoading6","open","setOpen","open2","setOpen2","open3","setOpen3","open4","setOpen4","open5","setOpen5","handleClose","handleOpen","handleClose2","handleOpen2","handleClose3","handleOpen3","handleClose4","handleClose5","handleLoadingFalse","handleLoadingTrue","handleLoadingFalse2","handleLoadingTrue2","handleLoadingFalse3","handleLoadingTrue3","handleLoadingFalse4","handleLoadingTrue4","handleLoadingFalse5","handleLoadingTrue5","currentIndex","setCurrentIndex","myAPY","maximumFractionDigits","myAPY2","fetchStaxBalance","a","ggetStaxBalance","then","catch","err","console","log","fetchStakesBalance","stakeHas","balancee","fetchSharesBalance","ggetOwnBalance","useEffect","load","Modal","onBackdropClick","onClose","Box","variant","textAlign","component","item","container","mt","mb","display","ml","TextField","required","borderBottom","palette","success","main","onChange","e","target","value","inputProps","color","id","label","LoadingButton","onClick","withdrawAmount","fontSize","grey","backgroundColor","stakeStax","minHeight","minWidth","my","Button","spacing","xs","lg","md","sm","Card","maxWidth","borderLeft","borderRight","light","pt","Tooltip","title","mx","TableContainer","Table","TableHead","TableRow","TableCell","map","total","index","TableBody","stakename","sharesbonus","amount","claimable","dateSeparator","format","showTime","since","Typography","gridSpacing"],"mappings":"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","file":"static/js/14.b94ddc88.chunk.js","sourcesContent":["// project imports\nimport Stax from '../../assets/StaxLogoOnly.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst StaxLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" alignContent=\"center\" sx={{ height: 100 }}>\n                <img height={80} width=\"height\" src={Stax} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default StaxLogo;\n","import React, { useState, useEffect } from 'react';\n\n// material-ui\nimport SimpleDateTime from 'react-simple-timestamp-to-date';\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Button,\n    Box,\n    Card,\n    Grid,\n    Table,\n    TableContainer,\n    TextField,\n    Paper,\n    Tooltip,\n    TableHead,\n    Typography,\n    TableBody,\n    TableRow,\n    TableCell,\n    Modal\n} from '@mui/material';\n// project imports\nimport StaxLogo from './staxlogo';\nimport DoneIcon from '@mui/icons-material/Done';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { ggetStaxBalance, withdrawAmount, ggetOwnBalance, stakeStax, stakeHas } from 'components/wallet/sharesABI';\nimport BigNumber from 'bignumber.js';\nimport Web3 from 'web3';\nimport { LoadingButton } from '@mui/lab';\nimport LayersIcon from '@mui/icons-material/Layers';\nimport XsStaxLogo from './xsStaxLogo';\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 300,\n    bgcolor: 'background.paper',\n    border: '2px solid #000000',\n    boxShadow: 24,\n    borderRadius: 7,\n    borderColor: 'black',\n    p: 3\n};\nconst StakingCard = () => {\n    const theme = useTheme();\n    const [balance, setBalance] = useState(0);\n    const balanceToNumber = new BigNumber(balance);\n    const balanceFormat = balanceToNumber.decimalPlaces(2);\n    const balanceFormatted = balanceFormat.toLocaleString(undefined);\n    const [preAmount, setPreAmount] = useState(0);\n    const [stakeAmount, setStakeAmount] = useState(0);\n    const stakeAmountF = Web3.utils.toWei(stakeAmount.toString(), 'ether');\n    const stakeAmountFormatted = Web3.utils.toBN(stakeAmountF);\n    const [stakeName, setStakeName] = useState(0);\n    const Number18Decimals = 1000000000000000000;\n    const [sharesBalance, setSharesBalance] = useState(0);\n    const [boostedSharesBalance, setBoostedSharesBalance] = useState(0);\n    const [stakesList, setStakesList] = useState([[], []]);\n    const [currentClaimable, setCurrentClaimable] = useState(0);\n    const [currentStaked, setCurrentStaked] = useState(0);\n    const [withdrawSum, setWithdrawSum] = useState(0);\n    const withdrawSumFormatted = Web3.utils.toWei(withdrawSum.toString(), 'ether');\n    const withdrawAFormatted = Web3.utils.toBN(withdrawSumFormatted);\n    const [staked, stakedd] = stakesList;\n    // POP - UPS\n    const [loading, setLoading] = React.useState(false);\n    const [loading2, setLoading2] = React.useState(false);\n    const [loading3, setLoading3] = React.useState(false);\n    const [loading4, setLoading4] = React.useState(false);\n    const [loading5, setLoading5] = React.useState(false);\n    const [loading6, setLoading6] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [open2, setOpen2] = React.useState(false);\n    const [open3, setOpen3] = React.useState(false);\n    const [open4, setOpen4] = React.useState(false);\n    const [open5, setOpen5] = React.useState(false);\n    const handleClose = () => setOpen(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose2 = () => setOpen2(false);\n    const handleOpen2 = () => setOpen2(true);\n    const handleClose3 = () => setOpen3(false);\n    const handleOpen3 = () => setOpen3(true);\n    const handleClose4 = () => setOpen4(false);\n    const handleOpen4 = () => setOpen4(true);\n    const handleClose5 = () => setOpen5(false);\n    const handleOpen5 = () => setOpen5(true);\n    const handleLoadingFalse = () => setLoading(false);\n    const handleLoadingTrue = () => setLoading(true);\n    const handleLoadingFalse2 = () => setLoading2(false);\n    const handleLoadingTrue2 = () => setLoading2(true);\n    const handleLoadingFalse3 = () => setLoading3(false);\n    const handleLoadingTrue3 = () => setLoading3(true);\n    const handleLoadingFalse4 = () => setLoading4(false);\n    const handleLoadingTrue4 = () => setLoading4(true);\n    const handleLoadingFalse5 = () => setLoading5(false);\n    const handleLoadingTrue5 = () => setLoading5(true);\n    const handleLoadingFalse6 = () => setLoading6(false);\n    const handleLoadingTrue6 = () => setLoading6(true);\n    const updateStakeAmount = (event, newValue) => {\n        setStakeAmount(newValue);\n    };\n    //  WITHDRAWING INDEX\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const myAPY = (9.125 + sharesBalance * 4.5625).toLocaleString(undefined, { maximumFractionDigits: 2 });\n    const myAPY2 = (9.125 + boostedSharesBalance * 4.5625).toLocaleString(undefined, { maximumFractionDigits: 2 });\n    //  FETCHING BLOCKCHAIN DATA\n    const fetchStaxBalance = async () => {\n        ggetStaxBalance()\n            .then((balance) => {\n                setBalance(balance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStakesBalance = async () => {\n        stakeHas(true)\n            .then((balancee) => {\n                setStakesList(balancee);\n                console.log(balancee);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchSharesBalance = async () => {\n        ggetOwnBalance()\n            .then((balance) => {\n                if (balance > 30) {\n                    setBoostedSharesBalance(30);\n                    setSharesBalance(15);\n                } else if (balance > 15) {\n                    setSharesBalance(15);\n                    setBoostedSharesBalance(balance);\n                } else {\n                    setSharesBalance(balance);\n                    setBoostedSharesBalance(balance);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    useEffect(() => {\n        async function load() {\n            fetchStaxBalance();\n            stakeHas();\n            fetchSharesBalance();\n            fetchStakesBalance();\n        }\n        load();\n    }, []);\n    return (\n        <>\n            <Modal\n                open={open}\n                onBackdropClick={() => {\n                    handleClose();\n                    handleLoadingFalse3();\n                }}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: 90% penalty is applied to the `withdraw amount` to all pre-mature stakes.\n                    </Typography>\n                    <Grid item container sx={{ mt: 2, mb: 1, display: 'flex', justifyContent: 'center' }}>\n                        <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                            Rewards:{' '}\n                            {(currentClaimable / Number18Decimals).toLocaleString(undefined, {\n                                maximumFractionDigits: 2\n                            })}\n                        </Typography>\n                        <Typography variant=\"h5\" textAlign=\"center\" sx={{ ml: 2 }} component=\"h2\">\n                            Staked:{' '}\n                            {(currentStaked / Number18Decimals).toLocaleString(undefined, {\n                                maximumFractionDigits: 2\n                            })}\n                        </Typography>\n                    </Grid>\n                    <Grid item sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <TextField\n                            required\n                            sx={{ borderBottom: 2, borderColor: theme.palette.success.main }}\n                            onChange={(e) => setWithdrawSum(e.target.value)}\n                            inputProps={{ style: { width: 120, textAlign: 'center', color: 'white' } }}\n                            id=\"standard-basic\"\n                            label=\"Withdraw amount\"\n                            variant=\"standard\"\n                            color=\"success\"\n                        />\n                    </Grid>\n                    <Grid item sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <LoadingButton\n                            loading={loading5}\n                            onClick={() => {\n                                handleLoadingTrue5();\n                                withdrawAmount(withdrawAFormatted, currentIndex).then(() => {\n                                    handleLoadingFalse5();\n                                    setOpen(false);\n                                    setOpen3(true);\n                                    handleLoadingFalse3();\n                                    fetchStakesBalance();\n                                });\n                            }}\n                            sx={{\n                                mt: 2.5,\n                                fontSize: 15,\n                                width: 80,\n                                height: 30,\n                                color: theme.palette.grey[900],\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main\n                            }}\n                        >\n                            Withdraw\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open4}\n                onClose={handleClose4}\n                onBackdropClick={() => {\n                    handleClose4();\n                    handleLoadingFalse();\n                }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: Your stake will be in `pre-mature` phase for the first 45 days and will face heavy penatlies in case of\n                        any withdraws / claims (90% fee on the staked, 5% on the rewards and minus 1 SHARESBONUS per Transaction).\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <LoadingButton\n                            loading={loading2}\n                            onClick={() => {\n                                handleLoadingTrue2();\n                                stakeStax(stakeAmountFormatted, stakeName).then(() => {\n                                    handleClose4();\n                                    handleOpen3();\n                                    handleLoadingFalse2();\n                                    handleLoadingFalse();\n                                    fetchStakesBalance();\n                                    fetchStaxBalance();\n                                });\n                            }}\n                            sx={{\n                                fontSize: 18,\n                                minHeight: 45,\n                                minWidth: 140,\n                                mt: 3,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Stake\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open5}\n                onClose={handleClose5}\n                onBackdropClick={() => {\n                    handleClose5();\n                    handleLoadingFalse6();\n                    handleLoadingFalse2();\n                    handleLoadingFalse();\n                }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: Your stake will be in `pre-mature` phase for the first 1 year. You will NOT be able to withdraw any\n                        amount of the the 365 days after creating the stake. However, claiming rewards is possible and 5% fee is applied on\n                        each claim during the pre-mature phase. That amount is burnt forever. Each claim/withdraw transaction decreases the\n                        stake`s SHARESBONUS by 1.\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <LoadingButton\n                            loading={loading2}\n                            onClick={() => {\n                                handleLoadingTrue2();\n                                stakeStax(stakeAmountFormatted, stakeName).then(() => {\n                                    handleClose5();\n                                    handleOpen3();\n                                    handleLoadingFalse2();\n                                    handleLoadingFalse();\n                                    fetchStakesBalance();\n                                    fetchStaxBalance();\n                                });\n                            }}\n                            sx={{\n                                fontSize: 18,\n                                minHeight: 45,\n                                minWidth: 140,\n                                mt: 3,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Boost\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open2}\n                onClose={handleClose2}\n                onBackdropClick={() => {\n                    handleClose2();\n                    handleLoadingFalse5();\n                    handleLoadingFalse4();\n                }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: Each claim reduces the SHARESBONUS by 1. Therefore, the stake APR will be reduced by ~4,56% on each\n                        claim/withdraw.\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', my: 2, justifyContent: 'center' }}>\n                        <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\" key={currentIndex}>\n                            Amount to be claimed:{' '}\n                            {(currentClaimable / Number18Decimals).toLocaleString(undefined, {\n                                maximumFractionDigits: 2\n                            })}\n                        </Typography>\n                    </Grid>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <LoadingButton\n                            loading={loading5}\n                            onClick={() => {\n                                handleLoadingTrue5();\n                                withdrawAmount(0, currentIndex)\n                                    .then(() => {\n                                        handleLoadingFalse5();\n                                        setOpen2(false);\n                                        setOpen3(true);\n                                        handleLoadingFalse4();\n                                        fetchStakesBalance();\n                                    })\n                                    .catch(() => {\n                                        handleLoadingFalse5();\n                                    });\n                            }}\n                            sx={{\n                                mt: 1,\n                                fontSize: 18,\n                                minHeight: 35,\n                                minWidth: 110,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Claim\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open3}\n                onClose={handleClose3}\n                onBackdropClick={handleClose3}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <DoneIcon color=\"success\" fontSize=\"large\" />\n                    </Grid>\n                    <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                        Transaction completed.\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button\n                            onClick={handleClose3}\n                            sx={{\n                                mt: 2,\n                                fontSize: 18,\n                                minHeight: 45,\n                                minWidth: 140,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Close\n                        </Button>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Grid item container spacing={2} xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 7 }}>\n                    <Typography textAlign=\"center\" variant=\"h1\" color={theme.palette.grey[50]}>\n                        Stake\n                    </Typography>\n                    <LayersIcon color=\"success\" fontSize=\"large\" sx={{ mt: 2, ml: 1 }} />\n                </Grid>\n                <Grid item container lg={3.85} md={7} xs={11} sm={6.5} sx={{ display: 'flex', justifyContent: 'center', mt: 6 }}>\n                    <Card\n                        sx={{\n                            maxWidth: 1900,\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                        }}\n                    >\n                        <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                            <Grid item sx={{ backgroundColor: theme.palette.grey[900], mt: 2 }} lg={3.6} xs=\"auto\">\n                                <StaxLogo />\n                            </Grid>\n                            <Grid item lg=\"auto\" xs=\"auto\" sx={{ ml: 0.8, mt: 5 }}>\n                                <Typography variant=\"h2\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Stake\n                                </Typography>\n                            </Grid>\n                            <Grid item lg=\"auto\" xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 0.7, mt: 5 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    STAX\n                                </Typography>\n                            </Grid>\n                            <Grid item lg={1} xs=\"auto\" sx={{ mt: 5, pt: 0.2 }}>\n                                <Tooltip\n                                    sx={{ color: theme.palette.success.main }}\n                                    title={\n                                        <Typography\n                                            sx={{\n                                                color: theme.palette.success.main\n                                            }}\n                                        >\n                                            Stakes have name, staked amount and SHARESBONUS. Users choose the name and tokens to be staked.\n                                            When creating a stake, the smart contract will get the user`s current sSTX balance and save it\n                                            as SHARESBONUS in the stake`s properties.\n                                        </Typography>\n                                    }\n                                >\n                                    <InfoIcon />\n                                </Tooltip>\n                            </Grid>\n                            <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    sx={{ justifyContent: 'center', backgroundColor: theme.palette.grey[900], my: 1 }}\n                                    lg=\"auto\"\n                                    md=\"auto\"\n                                    xs=\"auto\"\n                                >\n                                    <Typography variant=\"h4\" textAlign=\"center\">\n                                        NAME:\n                                    </Typography>\n                                </Grid>\n                                <Grid item sx={{ backgroundColor: theme.palette.grey[900] }} lg=\"auto\">\n                                    <TextField\n                                        required\n                                        sx={{ borderBottom: 2, borderColor: theme.palette.success.main }}\n                                        onChange={(e) => setStakeName(e.target.value)}\n                                        inputProps={{ style: { width: 110, textAlign: 'center', color: 'white' } }}\n                                        id=\"standard-basic\"\n                                        variant=\"standard\"\n                                        color=\"success\"\n                                    />\n                                    <Typography variant=\"h5\" textAlign=\"left\">\n                                        Enter stake name\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    sx={{ justifyContent: 'center', backgroundColor: theme.palette.grey[900], my: 1 }}\n                                    lg=\"auto\"\n                                    md=\"auto\"\n                                    xs=\"auto\"\n                                >\n                                    <Typography variant=\"h4\" textAlign=\"center\">\n                                        AMOUNT:\n                                    </Typography>\n                                </Grid>\n                                <Grid item sx={{ backgroundColor: theme.palette.grey[900] }} lg=\"auto\">\n                                    <TextField\n                                        sx={{ borderBottom: 2, borderColor: theme.palette.success.main }}\n                                        onChange={(e) => setPreAmount(e.target.value)}\n                                        inputProps={{ style: { width: 110, textAlign: 'center', color: 'white' } }}\n                                        id=\"standard-basic\"\n                                        variant=\"standard\"\n                                        color=\"success\"\n                                    />\n                                </Grid>\n                                <Grid item container xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <Typography variant=\"h5\" textAlign=\"left\">\n                                        Balance: {balanceFormatted}\n                                    </Typography>\n                                    <XsStaxLogo />\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 5, display: 'flex', justifyContent: 'center' }}>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                        SHARESBONUS:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                        {sharesBalance} / {boostedSharesBalance}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\" sx={{ ml: 0.7, mt: -0.3 }}>\n                                    <Tooltip\n                                        sx={{ color: theme.palette.success.main }}\n                                        title={\n                                            <Typography\n                                                sx={{\n                                                    color: theme.palette.success.main\n                                                }}\n                                            >\n                                                SHARESBONUS - shows your current sSTX balance. Each sSTX in your wallet, increases your APY\n                                                by 5%. An user may hold unlimited amount of sSTX but the SHARESBONUS is limited to 15 when\n                                                opening a regular stake or 30 when opening a Boosted Stake. Regular Stake maximum APR:\n                                                77.56%. Boosted Stake maximum APR: 146%.\n                                            </Typography>\n                                        }\n                                    >\n                                        <InfoIcon />\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    sx={{\n                                        backgroundColor: theme.palette.grey[900],\n                                        mt: 5,\n                                        mb: 3\n                                    }}\n                                    lg=\"auto\"\n                                >\n                                    <LoadingButton\n                                        loading={loading}\n                                        onClick={() => {\n                                            setStakeAmount(preAmount);\n                                            handleLoadingTrue();\n                                            handleOpen4();\n                                        }}\n                                        sx={{\n                                            fontSize: 18,\n                                            minHeight: 30,\n                                            minWidth: 100,\n                                            bgcolor: theme.palette.success.main,\n                                            backgroundColor: theme.palette.success.main,\n                                            color: theme.palette.grey[900]\n                                        }}\n                                    >\n                                        Stake\n                                    </LoadingButton>\n                                    <LoadingButton\n                                        loading={loading}\n                                        onClick={() => {\n                                            setStakeAmount(preAmount);\n                                            handleLoadingTrue();\n                                            handleOpen5();\n                                        }}\n                                        sx={{\n                                            fontSize: 18,\n                                            minHeight: 30,\n                                            minWidth: 100,\n                                            ml: 2,\n                                            bgcolor: theme.palette.success.main,\n                                            backgroundColor: theme.palette.success.main,\n                                            color: theme.palette.grey[900]\n                                        }}\n                                    >\n                                        Boost\n                                    </LoadingButton>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n                <Grid item container lg={3.85} xs={11} md={7} sm={6.5} sx={{ display: 'flex', justifyContent: 'center', mt: 6 }}>\n                    <Card\n                        sx={{\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)',\n                            mb: 1\n                        }}\n                    >\n                        <Grid\n                            container\n                            sx={{\n                                backgroundColor: theme.palette.grey[900],\n                                mt: 3,\n                                display: 'flex',\n                                justifyContent: 'center'\n                            }}\n                        >\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    APY /\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    REWARDS RATE\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs={10}>\n                                <Typography variant=\"h5\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    When creating a stake, the contract will save the staker`s` sSTX balance as SHARESBONUS. 1 SHARESBONUS +\n                                    ~4.56% APY.\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Initial APY:\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    9.125%\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Current APR:\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ my: 4, ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    {myAPY}% / {myAPY2}%\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\" sx={{ my: 4 }}>\n                                <Tooltip\n                                    sx={{ color: theme.palette.success.main }}\n                                    title={\n                                        <Typography\n                                            sx={{\n                                                color: theme.palette.success.main\n                                            }}\n                                        >\n                                            The current APR is calculed by following the following formula: 9.125% + SHARESBONUS * 4.5625%\n                                            where SHARESBONUS is limited to 15 (when choosing `Regular Stake`) or 30 when opening a `Boosted\n                                            Stake`. Therefore, the maximum APR of a `Regular Stake` is 77.56% and the maximum APR of a\n                                            `Boosted Stake` is 146%.\n                                        </Typography>\n                                    }\n                                >\n                                    <InfoIcon />\n                                </Tooltip>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <Card\n                        sx={{\n                            width: '100%',\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)',\n                            mb: 1\n                        }}\n                    >\n                        <Grid item container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item lg=\"auto\">\n                                <Typography variant=\"h2\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Regular vs\n                                </Typography>\n                            </Grid>\n                            <Grid item lg=\"auto\">\n                                <Typography variant=\"h2\" sx={{ my: 4, ml: 0.6 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    Boosted Stake\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs={4} lg={5} sm={4}>\n                                <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Maximum APR: 77.56%\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={4} lg={5} sm={4}>\n                                <Typography variant=\"h4\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    Maximum APR: 146%\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs={4} lg={5.5} sm={4}>\n                                <Typography variant=\"h4\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Pre-mature phase: 45 days\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={4} lg={5.5} sm={4}>\n                                <Typography variant=\"h4\" sx={{ my: 4, ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    Pre-mature phase: 1 year\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n            </Grid>\n            <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 5, mb: 20 }}>\n                <Grid\n                    item\n                    container\n                    lg={3.95}\n                    md={7}\n                    xs={12}\n                    sm={8}\n                    sx={{\n                        mt: 5,\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <Grid item container lg={12} sx={{ display: 'flex', mb: 2, justifyContent: 'center' }}>\n                        <Grid item lg={6}>\n                            <Typography textAlign=\"center\" variant=\"h2\">\n                                Regular Stakes\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        lg={11.5}\n                        md={12}\n                        xs={11}\n                        sm={10}\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            mx: 1,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                        }}\n                    >\n                        <TableContainer sx={{ width: 370, borderRadius: 5 }}>\n                            <Table sx={{ width: 'max-width' }} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                NAME\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                SHARESBONUS\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                STAKED\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                REWARDS\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Grid container>\n                                                <Grid item xs={6} sx={{ mt: 0.9 }}>\n                                                    <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                        TUM\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Tooltip\n                                                        sx={{ mt: 0.6, color: theme.palette.success.main }}\n                                                        title={\n                                                            <Typography\n                                                                sx={{\n                                                                    color: theme.palette.success.main\n                                                                }}\n                                                            >\n                                                                TUM stands for Time Until Mature. Each stake will face heavy penalty (90% on\n                                                                the staked balane) if the stake is ended before the 45th day.\n                                                            </Typography>\n                                                        }\n                                                    >\n                                                        <InfoIcon />\n                                                    </Tooltip>\n                                                </Grid>\n                                            </Grid>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                ACTIVITIES\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                {stakedd.map((total, index) => (\n                                    <TableBody key={index}>\n                                        <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {total.stakename}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {total.sharesbonus} / {total.sharesbonus * 4.56 + 9.12}%\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.amount / Number18Decimals).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.claimable / Number18Decimals).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    <SimpleDateTime dateSeparator=\"/\" format=\"MYD\" showTime=\"0\">\n                                                        {total.since}\n                                                    </SimpleDateTime>\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Grid item container xs={12} sx={{ width: 170 }}>\n                                                    <LoadingButton\n                                                        loading={loading3}\n                                                        onClick={() => {\n                                                            setCurrentClaimable(total.claimable);\n                                                            setCurrentStaked(total.amount);\n                                                            handleLoadingTrue3();\n                                                            handleOpen();\n                                                            setCurrentIndex(index);\n                                                        }}\n                                                        sx={{\n                                                            fontSize: 15,\n                                                            width: 80,\n                                                            height: 23,\n                                                            color: theme.palette.grey[900],\n                                                            bgcolor: theme.palette.success.main,\n                                                            backgroundColor: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Withdraw\n                                                    </LoadingButton>\n                                                    <LoadingButton\n                                                        loading={loading4}\n                                                        onClick={() => {\n                                                            setCurrentClaimable(total.claimable);\n                                                            handleLoadingTrue4();\n                                                            handleOpen2();\n                                                            setCurrentIndex(index);\n                                                        }}\n                                                        sx={{\n                                                            ml: 1,\n                                                            fontSize: 15,\n                                                            width: 80,\n                                                            height: 23,\n                                                            color: theme.palette.grey[900],\n                                                            bgcolor: theme.palette.success.main,\n                                                            backgroundColor: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Claim\n                                                    </LoadingButton>\n                                                </Grid>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                ))}\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n                <Grid\n                    item\n                    container\n                    lg={3.95}\n                    xs={12}\n                    md={7}\n                    sm={7.4}\n                    sx={{\n                        mt: 5,\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <Grid item container lg={12} sx={{ display: 'flex', justifyContent: 'center', mb: 2 }}>\n                        <Grid item lg={6}>\n                            <Typography textAlign=\"center\" variant=\"h2\" sx={{ color: theme.palette.success.main }}>\n                                Boosted Stakes\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        lg={11.5}\n                        xs={11}\n                        md={12}\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                        }}\n                    >\n                        <TableContainer sx={{ width: 370, borderRadius: 5 }}>\n                            <Table sx={{ width: 'max-width' }} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                NAME\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                SHARESBONUS\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                STAKED\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                REWARDS\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Grid container>\n                                                <Grid item xs={6} sx={{ mt: 0.9 }}>\n                                                    <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                        TUM\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Tooltip\n                                                        sx={{ mt: 0.6, color: theme.palette.success.main }}\n                                                        title={\n                                                            <Typography\n                                                                sx={{\n                                                                    color: theme.palette.success.main\n                                                                }}\n                                                            >\n                                                                TUM stands for Time Until Mature. Each stake will face heavy penalty (90% on\n                                                                the staked balane) if the stake is ended before the 45th day.\n                                                            </Typography>\n                                                        }\n                                                    >\n                                                        <InfoIcon />\n                                                    </Tooltip>\n                                                </Grid>\n                                            </Grid>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                ACTIVITIES\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                {stakedd.map((total, index) => (\n                                    <TableBody key={index}>\n                                        <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {total.stakename}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {total.sharesbonus} / {total.sharesbonus * 4.56 + 9.12}%\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.amount / Number18Decimals).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.claimable / Number18Decimals).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    <SimpleDateTime dateSeparator=\"/\" format=\"MYD\" showTime=\"0\">\n                                                        {total.since}\n                                                    </SimpleDateTime>\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Grid item container xs={12} sx={{ width: 170 }}>\n                                                    <LoadingButton\n                                                        loading={loading3}\n                                                        onClick={() => {\n                                                            setCurrentClaimable(total.claimable);\n                                                            setCurrentStaked(total.amount);\n                                                            handleLoadingTrue3();\n                                                            handleOpen();\n                                                            setCurrentIndex(index);\n                                                        }}\n                                                        sx={{\n                                                            fontSize: 15,\n                                                            width: 80,\n                                                            height: 23,\n                                                            color: theme.palette.grey[900],\n                                                            bgcolor: theme.palette.success.main,\n                                                            backgroundColor: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Withdraw\n                                                    </LoadingButton>\n                                                    <LoadingButton\n                                                        loading={loading4}\n                                                        onClick={() => {\n                                                            setCurrentClaimable(total.claimable);\n                                                            handleLoadingTrue4();\n                                                            handleOpen2();\n                                                            setCurrentIndex(index);\n                                                        }}\n                                                        sx={{\n                                                            ml: 1,\n                                                            fontSize: 15,\n                                                            width: 80,\n                                                            height: 23,\n                                                            color: theme.palette.grey[900],\n                                                            bgcolor: theme.palette.success.main,\n                                                            backgroundColor: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Claim\n                                                    </LoadingButton>\n                                                </Grid>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                ))}\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default StakingCard;\n","import { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport StakingCard from './StakingCard';\n// ==============================|| TYPOGRAPHY ||============================== //\n\nconst Typography = () => {\n    useTheme();\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item lg={12}>\n                <StakingCard />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Typography;\n"],"sourceRoot":""}