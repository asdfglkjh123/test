{"version":3,"sources":["views/utilities/shareschart.js","views/utilities/SharesSTAXChart.js","views/utilities/TablerIcons.js"],"names":["chartData","type","height","options","chart","id","sparkline","enabled","dataLabels","stroke","curve","width","tooltip","fixed","x","show","y","title","marker","series","data","SharesSTAXChart","theme","useTheme","navType","useSelector","state","customization","orangeDark","palette","success","dark","useEffect","newSupportChart","colors","ApexCharts","exec","Card","sx","bgcolor","grey","style","position","top","left","transform","border","boxShadow","borderRadius","borderColor","p","DEX","React","useState","value","setValue","valueF","Web3","utils","toWei","toString","valueFormatted","toBN","busdValue","setBusdValue","busdValueF","busdValueFormatted","BigNumber","require","busdBalance","setBusdBalance","busdBalanceFinal","decimalPlaces","toLocaleString","undefined","staxBalance","setStaxBalance","staxBalanceFinal","staxPrice","setStaxPrice","loading","setLoading","open3","setOpen3","handleClose3","handleOpen3","handleLoadingTrue","handleLoadingFalse","fetchBusdBalance","a","ggetBUSDBalance","then","catch","err","console","log","fetchStaxBalance","ggetStaxBalance","fetchStaxPrice","getStaxPrice","result","load2","open","onClose","item","display","justifyContent","color","fontSize","variant","textAlign","mt","component","onClick","backgroundColor","main","content","container","xs","lg","borderLeft","borderRight","borderBottom","light","spacing","md","sm","my","maximumFractionDigits","substring","inputProps","onChange","e","target","label","mb","buyStax","minHeight","minWidth","sellStax"],"mappings":"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","file":"static/js/11.07050d2b.chunk.js","sourcesContent":["// ===========================|| DASHBOARD - BAJAJ AREA CHART ||=========================== //\n\nconst chartData = {\n    type: 'area',\n    height: 150,\n    options: {\n        chart: {\n            id: 'support-chart',\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 1\n        },\n        tooltip: {\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: 'Ticket '\n            },\n            marker: {\n                show: true\n            }\n        }\n    },\n    series: [\n        {\n            data: [20, 22, 24]\n        }\n    ]\n};\n\nexport default chartData;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card } from '@mui/material';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport chartData from './shareschart';\n\n// ===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||=========================== //\n\nconst SharesSTAXChart = () => {\n    const theme = useTheme();\n    const customization = useSelector((state) => state.customization);\n    const { navType } = customization;\n\n    const orangeDark = theme.palette.success.dark;\n\n    useEffect(() => {\n        const newSupportChart = {\n            ...chartData.options,\n            colors: [orangeDark],\n            tooltip: {\n                theme: 'light'\n            }\n        };\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\n    }, [navType, orangeDark]);\n\n    return (\n        <Card sx={{ bgcolor: theme.palette.grey[900] }}>\n            <Chart {...chartData} />\n        </Card>\n    );\n};\n\nexport default SharesSTAXChart;\n","// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Box, Card, CardContent, TextField, Grid, Typography, Modal } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Web3 from 'web3';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SharesSTAXChart from './SharesSTAXChart';\nimport React, { useState, useEffect } from 'react';\nimport { ggetBUSDBalance, sellStax, buyStax, ggetStaxBalance, getStaxPrice } from 'components/wallet/sharesABI';\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 300,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    borderRadius: 7,\n    borderColor: 'black',\n    p: 3\n};\n\nconst DEX = () => {\n    const [value, setValue] = React.useState(0);\n    const valueF = Web3.utils.toWei(value.toString(), 'ether');\n    const valueFormatted = Web3.utils.toBN(valueF);\n    const [busdValue, setBusdValue] = React.useState(0);\n    const busdValueF = Web3.utils.toWei(busdValue.toString(), 'ether');\n    const busdValueFormatted = Web3.utils.toBN(busdValueF);\n    // eslint-disable-next-line global-require\n    const BigNumber = require('bignumber.js');\n    const [busdBalance, setBusdBalance] = React.useState(0);\n    const busdBalanceNumber = new BigNumber(busdBalance);\n    const busdBalanceFormat = busdBalanceNumber.decimalPlaces(2);\n    const busdBalanceFinal = busdBalanceFormat.toLocaleString(undefined);\n    const [staxBalance, setStaxBalance] = React.useState(0);\n    const staxBalanceNumber = new BigNumber(staxBalance);\n    const staxBalanceFormat = staxBalanceNumber.decimalPlaces(2);\n    const staxBalanceFinal = staxBalanceFormat.toLocaleString(undefined);\n    const theme = useTheme();\n    const [staxPrice, setStaxPrice] = useState([], [], []);\n    const [loading, setLoading] = React.useState(false);\n    const [open3, setOpen3] = React.useState(false);\n    const handleClose3 = () => setOpen3(false);\n    const handleOpen3 = () => setOpen3(true);\n    const handleLoadingTrue = () => setLoading(true);\n    const handleLoadingFalse = () => setLoading(false);\n    const fetchBusdBalance = async () => {\n        ggetBUSDBalance()\n            .then((busdBalance) => {\n                setBusdBalance(busdBalance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStaxBalance = async () => {\n        ggetStaxBalance()\n            .then((staxBalance) => {\n                setStaxBalance(staxBalance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStaxPrice = async () => {\n        getStaxPrice()\n            .then((result) => {\n                setStaxPrice(result);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    useEffect(() => {\n        async function load2() {\n            fetchBusdBalance();\n            fetchStaxBalance();\n            fetchStaxPrice();\n        }\n        load2();\n    }, []);\n    return (\n        <>\n            <Modal open={open3} onClose={handleClose3} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <DoneIcon color=\"success\" fontSize=\"large\" />\n                    </Grid>\n                    <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                        Transaction completed.\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button\n                            onClick={handleClose3}\n                            sx={{\n                                mt: 3,\n                                fontSize: 15,\n                                width: 80,\n                                height: 30,\n                                color: theme.palette.grey[900],\n                                backgroundColor: theme.palette.success.main\n                            }}\n                        >\n                            Close\n                        </Button>\n                    </Grid>\n                </Box>\n            </Modal>\n            <MainCard\n                sx={{\n                    width: '100%',\n                    height: '108%',\n                    borderRadius: 0,\n                    backgroundColor: theme.palette.grey[900],\n                    border: 0\n                }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid item container sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <Grid container sx={{ justifyContent: 'center', display: 'flex' }} mt={5}>\n                            <Typography textAlign=\"center\" variant=\"h6\" color={theme.palette.grey[50]}>\n                                DEX - Swap & Liquidity\n                            </Typography>\n                        </Grid>\n                        <Grid item container xs={12} sx={{ mt: 5, display: 'flex', justifyContent: 'center' }} lg={4.5}>\n                            <Card\n                                sx={{\n                                    borderLeft: 1,\n                                    borderRight: 1,\n                                    borderBottom: 3,\n                                    borderColor: theme.palette.success.light,\n                                    borderRadius: 5,\n                                    boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                }}\n                            >\n                                <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                    <Grid container spacing={1} sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                                        <Grid item xs=\"auto\" lg=\"auto\" md=\"auto\" sm=\"auto\">\n                                            <Typography variant=\"h2\" color={theme.palette.grey[50]}>\n                                                BUY/SELL\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\" lg=\"auto\" sm=\"auto\" md=\"auto\">\n                                            <Typography variant=\"h2\" color={theme.palette.success.main} textAlign=\"left\">\n                                                STAX\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item sx={{ backgroundColor: theme.palette.grey[900], my: 0 }} lg={11} xs={9.3}>\n                                        <SharesSTAXChart />\n                                    </Grid>\n                                    <Grid item lg={12} xs={12}>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"center\">\n                                            STAX PRICE CHART\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item lg={12} xs={12}>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"center\">\n                                            Price:{' '}\n                                            {(staxPrice[1] / staxPrice[0])\n                                                .toLocaleString(undefined, { maximumFractionDigits: 20 })\n                                                .substring(0, 7)}{' '}\n                                            {` $ `}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sx={{\n                                            backgroundColor: theme.palette.grey[900],\n                                            justifyContent: 'center',\n                                            display: 'flex',\n                                            mt: 1.6\n                                        }}\n                                        lg={4.7}\n                                        md={7}\n                                        xs={12}\n                                        sm={7}\n                                    >\n                                        <Grid item xs={12}>\n                                            <Typography sx={{ my: 2 }} variant=\"h3\" textAlign=\"center\">\n                                                BUY STAX\n                                            </Typography>\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={7}\n                                            sx={{\n                                                borderRadius: 2,\n                                                border: 3,\n                                                borderColor: theme.palette.success.main,\n                                                justifyContent: 'center',\n                                                display: 'flex'\n                                            }}\n                                        >\n                                            <TextField\n                                                sx={{\n                                                    borderBottom: 2,\n                                                    display: 'flex',\n                                                    borderColor: theme.palette.success.main\n                                                }}\n                                                inputProps={{ style: { textAlign: 'center', color: 'white' } }}\n                                                onChange={(e) => setBusdValue(e.target.value)}\n                                                id=\"standard-basic\"\n                                                label=\"Enter BUSD amount:\"\n                                                variant=\"standard\"\n                                                color=\"success\"\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <Typography textAlign=\"center\">Balance: {busdBalanceFinal}</Typography>\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <Grid item sx={{ mb: 3, display: 'flex', justifyContent: 'center' }}>\n                                                <LoadingButton\n                                                    loading={loading}\n                                                    onClick={() => {\n                                                        handleLoadingTrue();\n                                                        buyStax(busdValueFormatted).then(() => {\n                                                            handleLoadingFalse();\n                                                            handleOpen3();\n                                                            fetchBusdBalance();\n                                                            fetchStaxBalance();\n                                                            fetchStaxPrice();\n                                                        });\n                                                    }}\n                                                    sx={{\n                                                        fontSize: 18,\n                                                        minHeight: 45,\n                                                        minWidth: 110,\n                                                        bgcolor: theme.palette.success.main,\n                                                        backgroundColor: theme.palette.success.main,\n                                                        color: theme.palette.grey[900]\n                                                    }}\n                                                >\n                                                    SWAP\n                                                </LoadingButton>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sx={{\n                                            backgroundColor: theme.palette.grey[900],\n                                            justifyContent: 'center',\n                                            display: 'flex',\n                                            mt: 1.6\n                                        }}\n                                        lg={4.7}\n                                        md={7}\n                                        xs={12}\n                                        sm={7}\n                                    >\n                                        <Grid item xs={12}>\n                                            <Typography sx={{ my: 2 }} variant=\"h3\" textAlign=\"center\">\n                                                SELL STAX\n                                            </Typography>\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={7}\n                                            sx={{\n                                                borderRadius: 2,\n                                                border: 3,\n                                                borderColor: theme.palette.success.main,\n                                                justifyContent: 'center',\n                                                display: 'flex'\n                                            }}\n                                        >\n                                            <TextField\n                                                sx={{\n                                                    borderBottom: 2,\n                                                    display: 'flex',\n                                                    borderColor: theme.palette.success.main\n                                                }}\n                                                inputProps={{ style: { textAlign: 'center', color: 'white' } }}\n                                                onChange={(e) => setValue(e.target.value)}\n                                                id=\"standard-basic\"\n                                                label=\"Enter STAX amount:\"\n                                                variant=\"standard\"\n                                                color=\"success\"\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <Typography textAlign=\"center\">Balance: {staxBalanceFinal}</Typography>\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <Grid item sx={{ mb: 3, display: 'flex', justifyContent: 'center' }}>\n                                                <LoadingButton\n                                                    loading={loading}\n                                                    onClick={() => {\n                                                        handleLoadingTrue();\n                                                        getStaxPrice();\n                                                        sellStax(valueFormatted).then(() => {\n                                                            handleLoadingFalse();\n                                                            handleOpen3();\n                                                            fetchBusdBalance();\n                                                            fetchStaxBalance();\n                                                            fetchStaxPrice();\n                                                        });\n                                                    }}\n                                                    sx={{\n                                                        fontSize: 18,\n                                                        minHeight: 45,\n                                                        minWidth: 110,\n                                                        bgcolor: theme.palette.success.main,\n                                                        backgroundColor: theme.palette.success.main,\n                                                        color: theme.palette.grey[900]\n                                                    }}\n                                                >\n                                                    SWAP\n                                                </LoadingButton>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default DEX;\n"],"sourceRoot":""}