{"version":3,"sources":["components/wallet/sharesABI.js","../node_modules/@mui/icons-material/Info.js","views/utilities/shareschart.js","views/utilities/SharesSTAXChart.js","assets/images/busdlogo.png","views/utilities/busdlogo.js","views/utilities/busdSmallLogo.js","views/utilities/SharesCard.js","views/utilities/Color.js"],"names":["selectedAccount","erc20SharesContract","erc20StaxContract","erc20BusdContract","isInitialized","init","a","provider","window","ethereum","request","method","then","accounts","console","log","catch","err","on","web3","Web3","eth","net","getId","erc20Abi","constant","inputs","name","type","outputs","payable","stateMutability","internalType","components","Contract","ggetOwnBalance","methods","balanceOf","call","balance","utils","toWei","sharesTotalSupply","totalSupply","totalsupply","getSTXPrice","fromWei","getSTXPriceFull","stakeHas","hasStake","purchaseSharess","value","PurchaseSHARES","send","from","stakeStax","value2","stakename","stake","approve","address","priceToApprove","amount","ggetStaxBalance","ggetBUSDBalance","ggetTotalDividends","ggetTotalSTAXSupply","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","chartData","height","options","chart","id","sparkline","enabled","dataLabels","stroke","curve","width","tooltip","fixed","x","show","y","title","marker","series","data","SharesSTAXChart","theme","useTheme","navType","useSelector","state","customization","orangeDark","palette","success","dark","useEffect","newSupportChart","colors","ApexCharts","exec","Card","sx","bgcolor","grey","BusdLogo","Grid","item","justifyContent","alignContent","lg","mx","src","BUSD","alt","BusdSmallLogo","PrettoSlider","styled","Slider","color","border","backgroundColor","boxShadow","display","lineHeight","fontSize","background","padding","borderRadius","transformOrigin","transform","StakingCard","React","useState","setValue","busdBalance","setBusdBalance","busdDividends","setBusdDividends","BigNumber","sSTXPrice","setsSTXPrice","setsSTXPriceFull","setBalance","bonusAPY","setBonusAPY","totalsharesSupply","setTotalSharesSupply","myAPYFormatted","busdBalanceFormatted","decimalPlaces","toLocaleString","undefined","value222","valueHelper","toString","valueToApprove","toBN","myShareRateFormatted","maximumFractionDigits","fetchsSTXPrice","fetchsSTXPriceFull","sSTXPriceFull","fetchBalance","fetchBusdBalance","fetchTotalDividends","fetchTotalSupply","load2","MainCard","content","CardContent","container","mt","textAlign","variant","xs","md","sm","borderLeft","borderRight","borderBottom","borderColor","light","spacing","main","pl","Tooltip","my","valueLabelDisplay","onChange","e","target","min","max","defaultValue","mb","Button","onClick","result","minHeight","minWidth","ml","mr","Typography"],"mappings":"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","file":"static/js/7.fc45de2c.chunk.js","sourcesContent":["// import NFTContractBuild from 'contracts/NFT.json';\nimport Web3 from 'web3';\n\nlet selectedAccount;\n\n// let nftContract;\nlet erc20SharesContract;\nlet erc20StaxContract;\nlet erc20BusdContract;\n\nlet isInitialized = false;\n\nexport const init = async () => {\n    const provider = window.ethereum;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    if (typeof provider !== 'undefined') {\n        provider\n            .request({ method: 'eth_requestAccounts' })\n            .then((accounts) => {\n                selectedAccount = accounts[0];\n                console.log(`Selected account is ${selectedAccount}`);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n        window.ethereum.on('accountsChanged', (accounts) => {\n            selectedAccount = accounts[0];\n            console.log(`Selected account changed to ${selectedAccount}`);\n        });\n    }\n\n    const web3 = new Web3(provider);\n\n    const networkId = await web3.eth.net.getId();\n\n    const erc20Abi = [\n        {\n            constant: true,\n            inputs: [\n                {\n                    name: '_owner',\n                    type: 'address'\n                }\n            ],\n            name: 'balanceOf',\n            outputs: [\n                {\n                    name: 'balance',\n                    type: 'uint256'\n                }\n            ],\n            payable: false,\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [],\n            name: '_getSoldSHARES',\n            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            constant: true,\n            inputs: [],\n            name: 'totalSupply',\n            outputs: [\n                {\n                    internalType: 'uint256',\n                    name: '',\n                    type: 'uint256'\n                }\n            ],\n            payable: false,\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'uint256',\n                    name: 'samount',\n                    type: 'uint256'\n                }\n            ],\n            name: 'PurchaseSHARES',\n            outputs: [],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {\n            inputs: [],\n            name: 'getSTXPrice',\n            outputs: [\n                {\n                    internalType: 'uint256',\n                    name: '',\n                    type: 'uint256'\n                }\n            ],\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'address',\n                    name: '_staker',\n                    type: 'address'\n                }\n            ],\n            name: 'hasStake',\n            outputs: [\n                {\n                    components: [\n                        {\n                            internalType: 'uint256',\n                            name: 'total_amount',\n                            type: 'uint256'\n                        },\n                        {\n                            components: [\n                                {\n                                    internalType: 'address',\n                                    name: 'user',\n                                    type: 'address'\n                                },\n                                {\n                                    internalType: 'string',\n                                    name: 'stakename',\n                                    type: 'string'\n                                },\n                                {\n                                    internalType: 'uint256',\n                                    name: 'amount',\n                                    type: 'uint256'\n                                },\n                                {\n                                    internalType: 'uint256',\n                                    name: 'since',\n                                    type: 'uint256'\n                                },\n                                {\n                                    internalType: 'uint256',\n                                    name: 'claimable',\n                                    type: 'uint256'\n                                },\n                                {\n                                    internalType: 'uint256',\n                                    name: 'sharesbonus',\n                                    type: 'uint256'\n                                }\n                            ],\n                            internalType: 'struct Stakeable.Stake[]',\n                            name: 'stakes',\n                            type: 'tuple[]'\n                        }\n                    ],\n                    internalType: 'struct Stakeable.StakingSummary',\n                    name: '',\n                    type: 'tuple'\n                }\n            ],\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'address',\n                    name: 'spender',\n                    type: 'address'\n                },\n                {\n                    internalType: 'uint256',\n                    name: 'amount',\n                    type: 'uint256'\n                }\n            ],\n            name: 'approve',\n            outputs: [\n                {\n                    internalType: 'bool',\n                    name: '',\n                    type: 'bool'\n                }\n            ],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'uint256',\n                    name: '_amount',\n                    type: 'uint256'\n                },\n                {\n                    internalType: 'string',\n                    name: '_stakename',\n                    type: 'string'\n                }\n            ],\n            name: 'stake',\n            outputs: [],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        }\n    ];\n\n    erc20SharesContract = new web3.eth.Contract(erc20Abi, '0xb08CE509caFb6660E4F7b951Fbb8ae63930a6aEE');\n    erc20StaxContract = new web3.eth.Contract(erc20Abi, '0xF224398d6d757142eDE2F6AFFa4837DBDa9C04CA');\n    erc20BusdContract = new web3.eth.Contract(erc20Abi, '0xd389253265dd6b85C47c410EC5fF0c6A383CE949');\n\n    isInitialized = true;\n};\nexport const ggetOwnBalance = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    return erc20SharesContract.methods\n        .balanceOf(selectedAccount)\n        .call()\n        .then((balance) => Web3.utils.toWei(balance, 'wei'));\n};\nexport const sharesTotalSupply = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    return erc20SharesContract.methods\n        .totalSupply()\n        .call()\n        .then((totalsupply) => Web3.utils.toWei(totalsupply, 'wei'));\n};\nexport const soldShares = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    // eslint-disable-next-line no-underscore-dangle\n    return (\n        // eslint-disable-next-line no-underscore-dangle\n        erc20SharesContract.methods\n            ._getSoldSHARES()\n            .call()\n            .then((sold) => Web3.utils.toWei(sold, 'wei'))\n    );\n};\nexport const getSTXPrice = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    // eslint-disable-next-line no-underscore-dangle\n    return erc20SharesContract.methods\n        .getSTXPrice()\n        .call()\n        .then((balance) => Web3.utils.fromWei(balance, 'ether'));\n};\nexport const getSTXPriceFull = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    // eslint-disable-next-line no-underscore-dangle\n    return erc20SharesContract.methods\n        .getSTXPrice()\n        .call()\n        .then((balance) => Web3.utils.toWei(balance, 'ether'));\n};\nexport const stakeHas = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n    return erc20StaxContract.methods.hasStake(selectedAccount).call();\n};\nexport const purchaseSharess = async (value) => {\n    if (!isInitialized) {\n        await init();\n    }\n    return erc20SharesContract.methods\n        .PurchaseSHARES(value)\n        .send({ from: selectedAccount })\n        .catch((err) => {\n            console.log(err);\n        });\n};\nexport const stakeStax = async (value2, stakename) => {\n    if (!isInitialized) {\n        await init();\n    }\n    return erc20StaxContract.methods.stake(value2, stakename).send({ from: selectedAccount });\n};\n\nexport const approve = async (address, priceToApprove, amount) => {\n    if (!isInitialized) {\n        await init();\n    }\n    return erc20BusdContract.methods\n        .approve('0xb08ce509cafb6660e4f7b951fbb8ae63930a6aee', priceToApprove)\n        .send({ from: selectedAccount })\n        .then(() => {\n            purchaseSharess(amount);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n};\n\nexport const ggetStaxBalance = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    return erc20StaxContract.methods\n        .balanceOf(selectedAccount)\n        .call()\n        .then((balance) => Web3.utils.fromWei(balance, 'ether'));\n};\nexport const ggetBUSDBalance = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    return erc20BusdContract.methods\n        .balanceOf(selectedAccount)\n        .call()\n        .then((balance) => Web3.utils.fromWei(balance, 'ether'));\n};\nexport const ggetTotalDividends = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    return erc20BusdContract.methods\n        .balanceOf('0xb08ce509cafb6660e4f7b951fbb8ae63930a6aee')\n        .call()\n        .then((balance) => Web3.utils.fromWei(balance, 'ether'));\n};\nexport const ggetTotalSTAXSupply = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    return erc20StaxContract.methods\n        .totalSupply()\n        .call()\n        .then((balance) => Web3.utils.fromWei(balance, 'ether'));\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","// ===========================|| DASHBOARD - BAJAJ AREA CHART ||=========================== //\n\nconst chartData = {\n    type: 'area',\n    height: 150,\n    options: {\n        chart: {\n            id: 'support-chart',\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 1\n        },\n        tooltip: {\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: 'Ticket '\n            },\n            marker: {\n                show: true\n            }\n        }\n    },\n    series: [\n        {\n            data: [20, 22, 24]\n        }\n    ]\n};\n\nexport default chartData;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card } from '@mui/material';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport chartData from './shareschart';\n\n// ===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||=========================== //\n\nconst SharesSTAXChart = () => {\n    const theme = useTheme();\n    const customization = useSelector((state) => state.customization);\n    const { navType } = customization;\n\n    const orangeDark = theme.palette.success.dark;\n\n    useEffect(() => {\n        const newSupportChart = {\n            ...chartData.options,\n            colors: [orangeDark],\n            tooltip: {\n                theme: 'light'\n            }\n        };\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\n    }, [navType, orangeDark]);\n\n    return (\n        <Card sx={{ bgcolor: theme.palette.grey[900] }}>\n            <Chart {...chartData} />\n        </Card>\n    );\n};\n\nexport default SharesSTAXChart;\n","export default __webpack_public_path__ + \"static/media/busdlogo.78457406.png\";","// project imports\nimport BUSD from '../../assets/images/busdlogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst BusdLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid item justifyContent=\"center\" alignContent=\"center\">\n                <Grid item lg={11} sx={{ mx: 1.5 }}>\n                    <img width={60} src={BUSD} alt=\"shares banner\" />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default BusdLogo;\n","// project imports\nimport BUSD from '../../assets/images/busdlogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst BusdSmallLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\">\n                <img width={26} src={BUSD} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default BusdSmallLogo;\n","// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Button, Card, CardContent, Tooltip, Grid, Typography } from '@mui/material';\nimport Slider from '@mui/material/Slider';\nimport Web3 from 'web3';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SharesSTAXChart from './SharesSTAXChart';\nimport BusdLogo from './busdlogo';\nimport BusdSmallLogo from './busdSmallLogo';\nimport React, { useState, useEffect } from 'react';\nimport InfoIcon from '@mui/icons-material/Info';\nimport {\n    ggetOwnBalance,\n    ggetBUSDBalance,\n    getSTXPrice,\n    sharesTotalSupply,\n    getSTXPriceFull,\n    approve,\n    ggetTotalDividends\n} from 'components/wallet/sharesABI';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\nconst PrettoSlider = styled(Slider)({\n    color: '#52af77',\n    height: 8,\n    '& .MuiSlider-track': {\n        border: 'none'\n    },\n    '& .MuiSlider-thumb': {\n        height: 24,\n        width: 24,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\n            boxShadow: 'inherit'\n        },\n        '&:before': {\n            display: 'none'\n        }\n    },\n    '& .MuiSlider-valueLabel': {\n        lineHeight: 1.2,\n        fontSize: 12,\n        background: 'unset',\n        padding: 0,\n        width: 32,\n        height: 32,\n        borderRadius: '50% 50% 50% 0',\n        backgroundColor: '#52af77',\n        transformOrigin: 'bottom left',\n        transform: 'translate(50%, -100%) rotate(-45deg) scale(0)',\n        '&:before': { display: 'none' },\n        '&.MuiSlider-valueLabelOpen': {\n            transform: 'translate(50%, -100%) rotate(-45deg) scale(1)'\n        },\n        '& > *': {\n            transform: 'rotate(45deg)'\n        }\n    }\n});\n\nconst StakingCard = () => {\n    const [value, setValue] = React.useState(1);\n    const [busdBalance, setBusdBalance] = React.useState(0);\n    const [busdDividends, setBusdDividends] = React.useState(0);\n    // const handleSliderChange = (event, newValue) => {\n    //    setValue(newValue);\n    // };\n    const theme = useTheme();\n    // eslint-disable-next-line global-require\n    const BigNumber = require('bignumber.js');\n    const [sSTXPrice, setsSTXPrice] = useState(0);\n    const [sSTXPriceFull, setsSTXPriceFull] = useState(0);\n    const [balance, setBalance] = useState(0);\n    const [bonusAPY, setBonusAPY] = useState(0);\n    const [totalsharesSupply, setTotalSharesSupply] = useState(0);\n    const myAPYFormatted = bonusAPY * 4.5625;\n    const BIG18 = 1000000000000000000;\n    const busdBalanceToNumber = new BigNumber(busdBalance);\n    const busdBalanceFormat = busdBalanceToNumber.decimalPlaces(4);\n    const busdBalanceFormatted = busdBalanceFormat.toLocaleString(undefined);\n    const value222 = value * sSTXPrice * BIG18;\n    const valueHelper = Web3.utils.toWei(value222.toString(), 'ether');\n    const valueToApprove = Web3.utils.toBN(valueHelper);\n    const myShareRate = (balance / totalsharesSupply) * 100;\n    const myShareRateFormatted = myShareRate.toLocaleString(undefined, { maximumFractionDigits: 1 });\n    const fetchsSTXPrice = async () => {\n        getSTXPrice()\n            .then((sSTXPrice) => {\n                setsSTXPrice(sSTXPrice);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchsSTXPriceFull = async () => {\n        getSTXPriceFull()\n            .then((sSTXPriceFull) => {\n                setsSTXPriceFull(sSTXPriceFull);\n                console.log(sSTXPriceFull);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchBalance = async () => {\n        ggetOwnBalance()\n            .then((balance) => {\n                setBalance(balance);\n                if (balance > 20) {\n                    setBonusAPY(20);\n                } else {\n                    setBonusAPY(balance);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchBusdBalance = async () => {\n        ggetBUSDBalance()\n            .then((busdBalance) => {\n                setBusdBalance(busdBalance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchTotalDividends = async () => {\n        ggetTotalDividends()\n            .then((busdDividends) => {\n                setBusdDividends(busdDividends);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchTotalSupply = async () => {\n        sharesTotalSupply()\n            .then((totalsharesSupply) => {\n                setTotalSharesSupply(totalsharesSupply);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    useEffect(() => {\n        async function load2() {\n            fetchBalance();\n            fetchsSTXPriceFull();\n            fetchTotalSupply();\n            fetchsSTXPrice();\n            fetchBusdBalance();\n            fetchTotalDividends();\n        }\n        load2();\n    }, []);\n    return (\n        <>\n            <MainCard\n                sx={{ width: 'full%', height: '108%', borderRadius: 0, backgroundColor: theme.palette.grey[900], border: 0 }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid container sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <Grid container lg={12} sx={{ justifyContent: 'center', display: 'flex' }} mt={5}>\n                            <Typography textAlign=\"center\" variant=\"h6\" color={theme.palette.grey[50]}>\n                                Shares & BUSD Dividends\n                            </Typography>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }} lg={4.5}>\n                            <Grid item lg={11.5} xs={12} md={12} sm={12} sx={{ mt: 5 }}>\n                                <Card\n                                    sx={{\n                                        borderLeft: 1,\n                                        borderRight: 1,\n                                        borderBottom: 3,\n                                        borderColor: theme.palette.success.light,\n                                        borderRadius: 5,\n                                        boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                    }}\n                                >\n                                    <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                        <Grid container spacing={1} sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                                            <Grid item xs=\"auto\" lg=\"auto\" md=\"auto\" sm=\"auto\">\n                                                <Typography variant=\"h2\" color={theme.palette.grey[50]}>\n                                                    SHARES\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs=\"auto\" lg=\"auto\" sm=\"auto\" md=\"auto\">\n                                                <Typography variant=\"h2\" color={theme.palette.success.main} textAlign=\"left\">\n                                                    STAX\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item lg=\"auto\" sx={{ pl: 0.5, mt: 0.24 }}>\n                                                <Tooltip\n                                                    sx={{ color: theme.palette.success.main }}\n                                                    title={\n                                                        <Typography\n                                                            sx={{\n                                                                color: theme.palette.success.main\n                                                            }}\n                                                        >\n                                                            The initial (starting) price of sSTX is 20 BUSD and it increases by 0.01 BUSD\n                                                            every sSTX sold. The current sSTX price can be checked below. 70% of the BUSD\n                                                            amount used for sSTX purchases is distributed to sSTX holders every 24 hours.\n                                                        </Typography>\n                                                    }\n                                                >\n                                                    <InfoIcon />\n                                                </Tooltip>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item sx={{ backgroundColor: theme.palette.grey[900], my: 0 }} lg={10} xs={9.3}>\n                                            <SharesSTAXChart />\n                                        </Grid>\n                                        <Grid item sx={{ backgroundColor: theme.palette.grey[900], mt: 1.6 }} lg={4.7} xs={5.5}>\n                                            <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                                Total sSTX Sold:\n                                            </Typography>\n                                            <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                                Initial sSTX Price:\n                                            </Typography>\n                                            <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                                Current sSTX Price:\n                                            </Typography>\n                                            <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                                My BUSD Balance:\n                                            </Typography>\n                                            <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                                My BONUS APY:\n                                            </Typography>\n                                            <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                                My sSTX Balance:\n                                            </Typography>\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            sx={{ backgroundColor: theme.palette.grey[900], mt: 1.6 }}\n                                            lg=\"auto\"\n                                            sm=\"auto\"\n                                            md=\"auto\"\n                                            xs=\"auto\"\n                                        >\n                                            <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"right\">\n                                                {totalsharesSupply}/100,000 sSTX\n                                            </Typography>\n                                            <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"right\">\n                                                20 BUSD\n                                            </Typography>\n                                            <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"right\">\n                                                {sSTXPrice} BUSD\n                                            </Typography>\n                                            <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"right\">\n                                                {busdBalanceFormatted} BUSD\n                                            </Typography>\n                                            <Typography sx={{ my: 2, color: theme.palette.success.main }} variant=\"h5\" textAlign=\"right\">\n                                                {myAPYFormatted} %\n                                            </Typography>\n                                            <Typography sx={{ my: 2, color: theme.palette.success.main }} variant=\"h5\" textAlign=\"right\">\n                                                {balance} sSTX\n                                            </Typography>\n                                        </Grid>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Grid item lg={5} xs={7.5}>\n                                                <PrettoSlider\n                                                    valueLabelDisplay=\"auto\"\n                                                    aria-label=\"pretto slider\"\n                                                    onChange={(e) => setValue(e.target.value)}\n                                                    min={1}\n                                                    max={10}\n                                                    value={value}\n                                                    defaultValue={value}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Grid item lg={12} sx={{ mb: 3, display: 'flex', justifyContent: 'center' }}>\n                                                <Button\n                                                    onClick={() => {\n                                                        getSTXPriceFull();\n                                                        approve('0xb08ce509cafb6660e4f7b951fbb8ae63930a6aee', valueToApprove, value).then(\n                                                            (result) => {\n                                                                fetchBalance();\n                                                                fetchsSTXPriceFull();\n                                                                fetchTotalSupply();\n                                                                fetchsSTXPrice();\n                                                                fetchBusdBalance();\n                                                                fetchTotalDividends();\n                                                            }\n                                                        );\n                                                    }}\n                                                    sx={{\n                                                        minHeight: 45,\n                                                        minWidth: 140,\n                                                        backgroundColor: theme.palette.success.main,\n                                                        color: theme.palette.grey[900]\n                                                    }}\n                                                >\n                                                    BUY {value} sSTX\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center', mt: 3 }} lg={4.5}>\n                            <Grid item lg={11.5} xs={12} md={12} sm={12} mt={2}>\n                                <Card\n                                    sx={{\n                                        borderLeft: 1,\n                                        borderRight: 1,\n                                        borderBottom: 3,\n                                        height: 'auto',\n                                        width: '100%',\n                                        borderColor: theme.palette.success.light,\n                                        borderRadius: 5,\n                                        boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                    }}\n                                >\n                                    <Grid container sx={{ height: 'auto', mt: 2 }}>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Grid item lg=\"auto\" xs=\"auto\" sm=\"auto\">\n                                                <Typography variant=\"h2\" color={theme.palette.success.main} textAlign=\"right\">\n                                                    STAX\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item lg=\"auto\" xs=\"auto\" sm=\"auto\">\n                                                <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.grey[50]} textAlign=\"left\">\n                                                    Shares stats\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Grid item lg={12} xs={12}>\n                                                <Typography variant=\"h5\" sx={{ mt: 2 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    My sSTX Balance: {balance} sSTX\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item lg={12} xs={12}>\n                                                <Typography variant=\"h5\" sx={{ mt: 2 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    Circulating sSTX: {totalsharesSupply} sSTX\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item lg=\"auto\" xs=\"auto\" sm=\"auto\" sx={{ my: 2 }}>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    My Share Rate: {myShareRateFormatted} %\n                                                </Typography>\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                lg={0.5}\n                                                sm={0.5}\n                                                sx={{ pl: 0.5, mt: 1.1, justifyContent: 'center', display: 'flex' }}\n                                            >\n                                                <Tooltip\n                                                    sx={{ height: 20, color: theme.palette.success.main, mt: 0.8 }}\n                                                    title={\n                                                        <Typography\n                                                            sx={{\n                                                                color: theme.palette.success.main\n                                                            }}\n                                                        >\n                                                            `Share rate shows how many tokens you own from all minted tokens at the current\n                                                            moment. If user owns 1 sSTX out of 100sSTX, then that address has a share rate\n                                                            of 1% and earn 1% of all BUSD rewards at that moment.`\n                                                        </Typography>\n                                                    }\n                                                >\n                                                    <InfoIcon />\n                                                </Tooltip>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Card>\n                            </Grid>\n                            <Grid container xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 3 }} lg={11.5}>\n                                <Grid item lg={12} xs={12} md={12} sm={12}>\n                                    <Card\n                                        sx={{\n                                            borderLeft: 1,\n                                            borderRight: 1,\n                                            borderBottom: 3,\n                                            height: '100%',\n                                            width: '100%',\n                                            borderColor: theme.palette.success.light,\n                                            borderRadius: 5,\n                                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                        }}\n                                    >\n                                        <Grid container sx={{ my: 3.3, display: 'flex', justifyContent: 'center' }}>\n                                            <Grid item lg=\"auto\" xs=\"auto\" sm=\"auto\" md=\"auto\" sx={{ mt: 1.3 }}>\n                                                <BusdLogo />\n                                            </Grid>\n                                            <Grid item lg=\"auto\" xs=\"auto\" md=\"auto\" sm=\"auto\" sx={{ ml: 0.5, mt: 3.3 }}>\n                                                <Typography variant=\"h2\" color={theme.palette.success.main}>\n                                                    Dividends\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item lg={12} sx={{ mt: 1, justifyContent: 'center', display: 'flex' }}>\n                                                <Grid item lg={8} xs={10} md={7}>\n                                                    <Typography\n                                                        variant=\"h5\"\n                                                        sx={{ mt: 2 }}\n                                                        color={theme.palette.grey[50]}\n                                                        textAlign=\"center\"\n                                                    >\n                                                        Any pending BUSD Dividends will appear here. Claim the BUSD rewards by clicking\n                                                        below buttons.\n                                                    </Typography>\n                                                </Grid>\n                                            </Grid>\n                                            <Grid item lg={12} xs={10} sx={{ mt: 5, justifyContent: 'center', display: 'flex' }}>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    STAX Volume Dividends\n                                                </Typography>\n                                                <Tooltip\n                                                    sx={{ height: 20, color: theme.palette.success.main }}\n                                                    title={\n                                                        <Typography\n                                                            sx={{\n                                                                color: theme.palette.success.main\n                                                            }}\n                                                        >\n                                                            There is 1% fee on every STAX BUY / SELL transaction and those fees are\n                                                            distributed as BUSD Dividends in a direct proportion to sSTX holders.\n                                                        </Typography>\n                                                    }\n                                                >\n                                                    <InfoIcon />\n                                                </Tooltip>\n                                            </Grid>\n                                            <Grid item lg={5} xs=\"auto\" sx={{ mt: 1, mx: 1, justifyContent: 'right', display: 'flex' }}>\n                                                <Typography variant=\"h2\" sx={{ mr: 1 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    0\n                                                </Typography>\n                                                <BusdSmallLogo />\n                                            </Grid>\n                                            <Grid item lg={4.3} xs={3} sx={{ mt: 0.7, justifyContent: 'left', display: 'flex' }}>\n                                                <Button\n                                                    sx={{\n                                                        mb: 1,\n                                                        height: 35,\n                                                        backgroundColor: theme.palette.success.main,\n                                                        color: theme.palette.grey[900]\n                                                    }}\n                                                >\n                                                    Claim\n                                                </Button>\n                                            </Grid>\n                                            <Grid item lg={12} xs={10} sx={{ mt: 2, justifyContent: 'center', display: 'flex' }}>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    STAX Pool Dividends\n                                                </Typography>\n                                                <Tooltip\n                                                    sx={{ height: 20, color: theme.palette.success.main }}\n                                                    title={\n                                                        <Typography\n                                                            sx={{\n                                                                color: theme.palette.success.main\n                                                            }}\n                                                        >\n                                                            There is 1% fee on every STAX BUY / SELL transaction and those fees are\n                                                            distributed as BUSD Dividends in a direct proportion to sSTX holders.\n                                                        </Typography>\n                                                    }\n                                                >\n                                                    <InfoIcon />\n                                                </Tooltip>\n                                            </Grid>\n                                            <Grid item lg={5} xs=\"auto\" sx={{ mt: 1, mx: 1, justifyContent: 'right', display: 'flex' }}>\n                                                <Typography variant=\"h2\" sx={{ mr: 1 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    {busdDividends}\n                                                </Typography>\n                                                <BusdSmallLogo />\n                                            </Grid>\n                                            <Grid item lg={4.3} xs={3} sx={{ mt: 0.7, justifyContent: 'left', display: 'flex' }}>\n                                                <Button\n                                                    sx={{\n                                                        mb: 1,\n                                                        height: 35,\n                                                        backgroundColor: theme.palette.success.main,\n                                                        color: theme.palette.grey[900]\n                                                    }}\n                                                >\n                                                    Claim\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Card>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default StakingCard;\n","import { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n// project imports\nimport SSTXCard from './SharesCard';\n// ==============================|| TYPOGRAPHY ||============================== //\n\nconst Typography = () => {\n    useTheme();\n    return (\n        <Grid container sx={{ justifyContent: 'center', display: 'flex' }}>\n            <Grid item lg={12}>\n                <SSTXCard />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Typography;\n"],"sourceRoot":""}