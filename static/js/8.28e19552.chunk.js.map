{"version":3,"sources":["assets/images/busdlogo.png","views/utilities/XsBusdLogo.js","../node_modules/@mui/icons-material/Settings.js","../node_modules/@mui/material/IconButton/iconButtonClasses.js","../node_modules/@mui/material/IconButton/IconButton.js","views/utilities/busdSmallLogo.js","views/utilities/smallStaxLogo.js","views/utilities/DEX.js"],"names":["XsBusdLogo","useTheme","justifyContent","sx","ml","mt","width","src","BUSD","alt","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getIconButtonUtilityClass","slot","generateUtilityClass","iconButtonClasses","generateUtilityClasses","_excluded","IconButtonRoot","styled","ButtonBase","name","overridesResolver","props","styles","ownerState","root","color","capitalize","edge","size","theme","_extends","textAlign","flex","fontSize","typography","pxToRem","padding","borderRadius","overflow","palette","action","active","transition","transitions","create","duration","shortest","disableRipple","backgroundColor","alpha","hoverOpacity","marginLeft","marginRight","main","disabled","IconButton","React","inProps","ref","useThemeProps","children","className","disableFocusRipple","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","centerRipple","focusRipple","BusdSmallLogo","Grid","SmallStaxLogo","alignContent","Stax","style","position","top","left","transform","bgcolor","border","boxShadow","borderColor","p","DEX","useState","setTotalStaxSupply","preBusdValue","setPreBusdValue","preBusdValue2","setPreBusdValue2","busdValue","setBusdValue","busdValueF","Web3","utils","toWei","toString","busdValueFormatted","toBN","BigNumber","busdBalance","setBusdBalance","busdBalanceFinal","decimalPlaces","toLocaleString","undefined","staxBalance","setStaxBalance","staxBalanceFinal","swappingToken","setSwappingToken","staxPrice","setStaxPrice","priceImpact1","priceImpact2","loading","setLoading","format","number","constantProduct","Number","newBUSD","oldSTAX","format2","newSTAX","oldBUSD","format3","format4","open4","setOpen4","handleClose4","open5","setOpen5","handleClose5","staxLogoFirst","setStaxLogoFirst","handleLoadingFalse","token1address","setToken1address","token2address","setToken2address","pathToPurchase","slippage","setSlippage","slippageF","setSlippageF","handleSwap","fetchBusdBalance","a","ggetBUSDBalance","then","catch","err","console","log","fetchStaxBalance","ggetStaxBalance","fetchStaxTotalSupply","ggetTotalSTAXSupply","result","fetchStaxPrice","getStaxPrice","updateBalances","useEffect","load2","Modal","open","onBackdropClick","Box","item","container","display","Typography","variant","component","TextField","success","inputProps","height","grey","onChange","e","target","id","Button","onClick","swapStaxAndBusd","MainCard","mb","content","CardContent","xs","lg","Card","borderLeft","borderRight","borderBottom","light","spacing","md","sm","mr","fullWidth","defaultValue","label","maximumFractionDigits","LoadingButton","minHeight","minWidth","approveBusd","approveStax"],"mappings":"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","file":"static/js/8.28e19552.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/busdlogo.78457406.png\";","// project imports\nimport BUSD from '../../assets/images/busdlogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst XsBusdLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" sx={{ ml: 0.4, mt: 0.2 }}>\n                <img width={16} src={BUSD} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default XsBusdLogo;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"\n}), 'Settings');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\n\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: theme.palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  })\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, ownerState.color !== 'inherit' && ownerState.color !== 'default' && _extends({\n  color: theme.palette[ownerState.color].main\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}), ownerState.size === 'small' && {\n  padding: 5,\n  fontSize: theme.typography.pxToRem(18)\n}, ownerState.size === 'large' && {\n  padding: 12,\n  fontSize: theme.typography.pxToRem(28)\n}, {\n  [`&.${iconButtonClasses.disabled}`]: {\n    backgroundColor: 'transparent',\n    color: theme.palette.action.disabled\n  }\n}));\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n\n  const {\n    edge = false,\n    children,\n    className,\n    color = 'default',\n    disabled = false,\n    disableFocusRipple = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;","// project imports\nimport BUSD from '../../assets/images/busdlogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst BusdSmallLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\">\n                <img width={23} src={BUSD} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default BusdSmallLogo;\n","// project imports\nimport Stax from '../../assets/StaxLogoOnly.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst SmallStaxLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" alignContent=\"center\">\n                <img width={23} src={Stax} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default SmallStaxLogo;\n","// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Box, Card, CardContent, TextField, Grid, Typography, Modal, IconButton } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Web3 from 'web3';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport React, { useState, useEffect } from 'react';\nimport SwapVerticalCircleIcon from '@mui/icons-material/SwapVerticalCircle';\nimport {\n    ggetBUSDBalance,\n    ggetStaxBalance,\n    getStaxPrice,\n    ggetTotalSTAXSupply,\n    swapStaxAndBusd,\n    approveStax,\n    approveBusd\n} from 'components/wallet/sharesABI';\nimport BusdSmallLogo from './busdSmallLogo';\nimport SmallStaxLogo from './smallStaxLogo';\nimport XsStaxLogo from './xsStaxLogo';\nimport XsBusdLogo from './XsBusdLogo';\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 300,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    borderRadius: 7,\n    borderColor: 'black',\n    p: 3\n};\n\nconst DEX = () => {\n    const [totalStaxSuply, setTotalStaxSupply] = React.useState(0);\n    const [preBusdValue, setPreBusdValue] = useState();\n    const [preBusdValue2, setPreBusdValue2] = useState();\n    const [busdValue, setBusdValue] = useState(0);\n    const busdValueF = Web3.utils.toWei(busdValue.toString(), 'ether');\n    const busdValueFormatted = Web3.utils.toBN(busdValueF);\n    // eslint-disable-next-line global-require\n    const BigNumber = require('bignumber.js');\n    const [busdBalance, setBusdBalance] = React.useState();\n    const busdBalanceNumber = new BigNumber(busdBalance);\n    const busdBalanceFormat = busdBalanceNumber.decimalPlaces(4);\n    const busdBalanceFinal = busdBalanceFormat.toLocaleString(undefined);\n    const [staxBalance, setStaxBalance] = React.useState();\n    const staxBalanceNumber = new BigNumber(staxBalance);\n    const staxBalanceFormat = staxBalanceNumber.decimalPlaces(4);\n    const staxBalanceFinal = staxBalanceFormat.toLocaleString(undefined);\n    const theme = useTheme();\n    const [swappingToken, setSwappingToken] = useState('STAX');\n    const [staxPrice, setStaxPrice] = useState([], [], []);\n    const priceImpact1 = (preBusdValue / staxPrice[1]) * 100000000000000000000;\n    const priceImpact2 = (preBusdValue / staxPrice[0]) * 100000000000000000000;\n    const [loading, setLoading] = React.useState(false);\n    const format = (number) => {\n        const constantProduct = Number(((staxPrice[1] / 1000000000000000000) * staxPrice[0]) / 1000000000000000000);\n        const oldBUSD = Number(staxPrice[1] / 1000000000000000000);\n        const newBUSD = oldBUSD + number;\n        const oldSTAX = Number(staxPrice[0] / 1000000000000000000);\n        const newSTAX = constantProduct / newBUSD;\n        const final = oldSTAX - newSTAX;\n        setPreBusdValue2(final);\n    };\n    const format2 = (number) => {\n        const constantProduct = Number(((staxPrice[1] / 1000000000000000000) * staxPrice[0]) / 1000000000000000000);\n        const oldSTAX = Number(staxPrice[0] / 1000000000000000000);\n        const newSTAX = oldSTAX + number;\n        const oldBUSD = Number(staxPrice[1] / 1000000000000000000);\n        const newBUSD = constantProduct / newSTAX;\n        const final = oldBUSD - newBUSD;\n        setPreBusdValue2(final);\n    };\n    const format3 = (number) => {\n        const constantProduct = Number(((staxPrice[1] / 1000000000000000000) * staxPrice[0]) / 1000000000000000000);\n        const oldBUSD = Number(staxPrice[1] / 1000000000000000000);\n        const newBUSD = oldBUSD + number;\n        const oldSTAX = Number(staxPrice[0] / 1000000000000000000);\n        const newSTAX = constantProduct / newBUSD;\n        const final = oldSTAX - newSTAX;\n        setPreBusdValue(final);\n    };\n    const format4 = (number) => {\n        const constantProduct = Number(((staxPrice[1] / 1000000000000000000) * staxPrice[0]) / 1000000000000000000);\n        const oldSTAX = Number(staxPrice[0] / 1000000000000000000);\n        const newSTAX = oldSTAX + number;\n        const oldBUSD = Number(staxPrice[1] / 1000000000000000000);\n        const newBUSD = constantProduct / newSTAX;\n        const final = oldBUSD - newBUSD;\n        setPreBusdValue(final);\n    };\n    const [open4, setOpen4] = React.useState(false);\n    const handleClose4 = () => setOpen4(false);\n    const handleOpen4 = () => setOpen4(true);\n    const [open5, setOpen5] = React.useState(false);\n    const handleClose5 = () => setOpen5(false);\n    const handleOpen5 = () => setOpen5(true);\n    const [staxLogoFirst, setStaxLogoFirst] = React.useState(true);\n    const handleStaxLogoFirst = () => setStaxLogoFirst(true);\n    const handleStaxLogoFirstN = () => setStaxLogoFirst(false);\n    const handleLoadingTrue = () => setLoading(true);\n    const handleLoadingFalse = () => setLoading(false);\n    const [token1address, setToken1address] = useState();\n    const [token2address, setToken2address] = useState();\n    const pathToPurchase = [token1address, token2address];\n    const [slippage, setSlippage] = useState(6);\n    const [slippageF, setSlippageF] = useState();\n    const handleSwap = () => {\n        if (staxLogoFirst === true) {\n            handleStaxLogoFirstN();\n            setToken1address('0xd389253265dd6b85C47c410EC5fF0c6A383CE949');\n            setToken2address('0x09712607134d4119a678dE94242505Be98C6Ae42');\n            setSwappingToken('BUSD');\n        } else if (staxLogoFirst === false) {\n            handleStaxLogoFirst();\n            setToken1address('0x09712607134d4119a678dE94242505Be98C6Ae42');\n            setToken2address('0xd389253265dd6b85C47c410EC5fF0c6A383CE949');\n            setSwappingToken('STAX');\n        }\n    };\n    const fetchBusdBalance = async () => {\n        ggetBUSDBalance()\n            .then((busdBalance) => {\n                setBusdBalance(busdBalance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStaxBalance = async () => {\n        ggetStaxBalance()\n            .then((staxBalance) => {\n                setStaxBalance(staxBalance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStaxTotalSupply = async () => {\n        ggetTotalSTAXSupply()\n            .then((result) => {\n                setTotalStaxSupply(result);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStaxPrice = async () => {\n        getStaxPrice()\n            .then((result) => {\n                setStaxPrice(result);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const updateBalances = async () => {\n        ggetStaxBalance().then((staxBalance) => {\n            setStaxBalance(staxBalance);\n            if (staxLogoFirst === true) {\n                setToken1address('0x09712607134d4119a678dE94242505Be98C6Ae42');\n                setToken2address('0xd389253265dd6b85C47c410EC5fF0c6A383CE949');\n            }\n        });\n        ggetBUSDBalance().then((busdBalance) => {\n            setBusdBalance(busdBalance);\n        });\n    };\n    useEffect(() => {\n        async function load2() {\n            fetchBusdBalance();\n            fetchStaxBalance();\n            fetchStaxPrice();\n            fetchStaxTotalSupply();\n            setSlippageF(5.5);\n            updateBalances();\n        }\n        load2();\n    }, [busdBalance, busdBalanceFinal, staxBalance, staxBalanceFinal, preBusdValue, preBusdValue2]);\n    return (\n        <>\n            <Modal\n                open={open4}\n                onBackdropClick={handleClose4}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Grid item container sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Grid item>\n                            <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                                Slippage should be at least 5.5% as the STAX Token applies 5% fee on every Buy / Sell transaction.\n                            </Typography>\n                        </Grid>\n                        <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                            Enter slippage:\n                        </Typography>\n                        <TextField\n                            sx={{\n                                display: 'flex',\n                                mt: 2.3,\n                                ml: 1,\n                                border: 1,\n                                borderRadius: 3,\n                                borderColor: theme.palette.success.main\n                            }}\n                            inputProps={{\n                                style: {\n                                    textAlign: 'center',\n                                    height: 1,\n                                    width: 27,\n                                    backgroundColor: theme.palette.grey[900],\n                                    color: 'white'\n                                }\n                            }}\n                            onChange={(e) => setSlippage(e.target.value)}\n                            id=\"standard-basic\"\n                            variant=\"outlined\"\n                            color=\"success\"\n                        />\n                        <Typography variant=\"h4\" sx={{ mt: 3, ml: 0.3 }}>\n                            %\n                        </Typography>\n                    </Grid>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button\n                            onClick={() => {\n                                handleClose4();\n                                setSlippageF(slippage);\n                            }}\n                            sx={{\n                                mt: 3,\n                                fontSize: 15,\n                                width: 80,\n                                height: 30,\n                                color: theme.palette.grey[900],\n                                backgroundColor: theme.palette.success.main\n                            }}\n                        >\n                            Done\n                        </Button>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open5}\n                onBackdropClick={() => {\n                    handleClose5();\n                    handleLoadingFalse();\n                }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Grid item container sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Grid item>\n                            <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                                You are going to swap {preBusdValue} {swappingToken}. Please confirm the transaction by clicking below\n                                button.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button\n                            onClick={() => {\n                                swapStaxAndBusd(busdValueFormatted, 0, pathToPurchase).then(() => {\n                                    handleLoadingFalse();\n                                    updateBalances();\n                                    setPreBusdValue(0);\n                                    setPreBusdValue2(0);\n                                    getStaxPrice();\n                                    handleClose5();\n                                });\n                            }}\n                            sx={{\n                                mt: 3,\n                                fontSize: 15,\n                                width: 80,\n                                height: 30,\n                                color: theme.palette.grey[900],\n                                backgroundColor: theme.palette.success.main\n                            }}\n                        >\n                            Confirm\n                        </Button>\n                    </Grid>\n                </Box>\n            </Modal>\n            <MainCard\n                sx={{\n                    width: '100%',\n                    height: '108%',\n                    borderRadius: 0,\n                    backgroundColor: theme.palette.grey[900],\n                    border: 0,\n                    mb: 5\n                }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid item container sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <Grid container sx={{ justifyContent: 'center', display: 'flex' }}>\n                            <Typography textAlign=\"center\" variant=\"h6\" color={theme.palette.grey[50]}>\n                                Swap\n                            </Typography>\n                            <SwapVerticalCircleIcon color=\"success\" fontSize=\"large\" sx={{ mt: 2.5, ml: 1 }} />\n                        </Grid>\n                        <Grid item container xs={12} sx={{ mt: 5, display: 'flex', justifyContent: 'center' }} lg={4}>\n                            <Card\n                                sx={{\n                                    borderLeft: 1,\n                                    borderRight: 1,\n                                    borderBottom: 3,\n                                    borderColor: theme.palette.success.light,\n                                    borderRadius: 5,\n                                    boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                }}\n                            >\n                                <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                    <Grid container spacing={1} sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                                        <Grid item xs=\"auto\" lg=\"auto\" md=\"auto\" sm=\"auto\" sx={{ mt: 1.2 }}>\n                                            <Typography variant=\"h2\" color={theme.palette.grey[50]}>\n                                                SWAP\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\" lg=\"auto\" sm=\"auto\" md=\"auto\" sx={{ mt: 1.2 }}>\n                                            <Typography variant=\"h2\" color={theme.palette.success.main} textAlign=\"left\">\n                                                STAX\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\" lg=\"auto\" sm=\"auto\" md=\"auto\" sx={{ mt: 0.3 }}>\n                                            <IconButton onClick={() => handleOpen4()}>\n                                                <SettingsIcon fontSize=\"medium\" color=\"success\" />\n                                            </IconButton>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sx={{\n                                            backgroundColor: theme.palette.grey[900],\n                                            justifyContent: 'center',\n                                            display: 'flex',\n                                            mt: 4\n                                        }}\n                                        lg={12}\n                                        md={7}\n                                        xs={12}\n                                        sm={7}\n                                    >\n                                        <Grid\n                                            item\n                                            xs={8.5}\n                                            sx={{\n                                                borderRadius: 2,\n                                                border: 2,\n                                                borderColor: theme.palette.success.main,\n                                                justifyContent: 'right',\n                                                display: 'flex'\n                                            }}\n                                        >\n                                            <Grid item sx={{ display: 'flex', justifyContent: 'center', mt: 1.5, mr: 1, ml: 1 }}>\n                                                {staxLogoFirst ? <SmallStaxLogo /> : <BusdSmallLogo />}\n                                            </Grid>\n                                            {staxLogoFirst ? (\n                                                <TextField\n                                                    fullWidth\n                                                    sx={{\n                                                        display: 'flex',\n                                                        borderColor: theme.palette.success.main\n                                                    }}\n                                                    inputProps={{ style: { textAlign: 'left', color: 'white' } }}\n                                                    onChange={(e) => {\n                                                        setPreBusdValue(e.target.value);\n                                                        format2(Number(e.target.value));\n                                                    }}\n                                                    value={preBusdValue}\n                                                    defaultValue={0}\n                                                    id=\"standard-basic\"\n                                                    label=\"Enter STAX amount:\"\n                                                    variant=\"standard\"\n                                                    color=\"success\"\n                                                />\n                                            ) : (\n                                                <TextField\n                                                    fullWidth\n                                                    sx={{\n                                                        display: 'flex',\n                                                        borderColor: theme.palette.success.main\n                                                    }}\n                                                    inputProps={{ style: { textAlign: 'left', color: 'white' } }}\n                                                    onChange={(e) => {\n                                                        setPreBusdValue(e.target.value);\n                                                        format(Number(e.target.value));\n                                                    }}\n                                                    value={preBusdValue}\n                                                    id=\"standard-basic\"\n                                                    label=\"Enter BUSD amount:\"\n                                                    defaultValue={0}\n                                                    variant=\"standard\"\n                                                    color=\"success\"\n                                                />\n                                            )}\n                                            {staxLogoFirst ? (\n                                                <Button\n                                                    variant=\"text\"\n                                                    onClick={() => {\n                                                        setPreBusdValue(staxBalance);\n                                                        format2(Number(staxBalance));\n                                                    }}\n                                                    size=\"small\"\n                                                    sx={{ color: theme.palette.success.main, borderColor: theme.palette.success.main }}\n                                                >\n                                                    Max\n                                                </Button>\n                                            ) : (\n                                                <Button\n                                                    variant=\"text\"\n                                                    onClick={() => {\n                                                        setPreBusdValue(busdBalance);\n                                                        format(Number(busdBalance));\n                                                    }}\n                                                    size=\"small\"\n                                                    sx={{ color: theme.palette.success.main, borderColor: theme.palette.success.main }}\n                                                >\n                                                    Max\n                                                </Button>\n                                            )}\n                                        </Grid>\n                                        {staxLogoFirst ? (\n                                            <Grid item container xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 0.5 }}>\n                                                <Typography textAlign=\"center\">Balance: {staxBalanceFinal}</Typography>\n                                                <XsStaxLogo />\n                                            </Grid>\n                                        ) : (\n                                            <Grid item container xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 0.5 }}>\n                                                <Typography textAlign=\"center\">Balance: {busdBalanceFinal}</Typography>\n                                                <XsBusdLogo />\n                                            </Grid>\n                                        )}\n                                    </Grid>\n                                    <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                        <IconButton\n                                            onClick={() => {\n                                                handleSwap();\n                                            }}\n                                        >\n                                            <SwapVerticalCircleIcon color=\"success\" fontSize=\"large\" />\n                                        </IconButton>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sx={{\n                                            backgroundColor: theme.palette.grey[900],\n                                            justifyContent: 'center',\n                                            display: 'flex'\n                                        }}\n                                        lg={12}\n                                        md={7}\n                                        xs={12}\n                                        sm={7}\n                                    >\n                                        <Grid\n                                            item\n                                            xs={8.5}\n                                            sx={{\n                                                borderRadius: 2,\n                                                mt: 1,\n                                                border: 2,\n                                                borderColor: theme.palette.success.main,\n                                                justifyContent: 'center',\n                                                display: 'flex'\n                                            }}\n                                        >\n                                            <Grid item sx={{ display: 'flex', justifyContent: 'center', mt: 1.5, mr: 1, ml: 1 }}>\n                                                {staxLogoFirst ? <BusdSmallLogo /> : <SmallStaxLogo />}\n                                            </Grid>\n                                            {staxLogoFirst ? (\n                                                <TextField\n                                                    fullWidth\n                                                    sx={{\n                                                        display: 'flex',\n                                                        borderColor: theme.palette.success.main\n                                                    }}\n                                                    inputProps={{ style: { textAlign: 'left', color: 'white' } }}\n                                                    onChange={(e) => {\n                                                        setPreBusdValue2(e.target.value);\n                                                        format3(Number(e.target.value));\n                                                    }}\n                                                    value={preBusdValue2}\n                                                    defaultValue={0}\n                                                    id=\"standard-basic\"\n                                                    label=\"Enter BUSD amount:\"\n                                                    variant=\"standard\"\n                                                    color=\"success\"\n                                                />\n                                            ) : (\n                                                <TextField\n                                                    fullWidth\n                                                    sx={{\n                                                        display: 'flex',\n                                                        borderColor: theme.palette.success.main\n                                                    }}\n                                                    inputProps={{ style: { textAlign: 'left', color: 'white' } }}\n                                                    onChange={(e) => {\n                                                        setPreBusdValue2(e.target.value);\n                                                        format4(Number(e.target.value));\n                                                    }}\n                                                    value={preBusdValue2}\n                                                    id=\"standard-basic\"\n                                                    label=\"Enter STAX amount:\"\n                                                    defaultValue={0}\n                                                    variant=\"standard\"\n                                                    color=\"success\"\n                                                />\n                                            )}\n                                            {staxLogoFirst ? (\n                                                <Button\n                                                    variant=\"text\"\n                                                    onClick={() => {\n                                                        setPreBusdValue2(busdBalance);\n                                                        format3(Number(busdBalance));\n                                                    }}\n                                                    size=\"small\"\n                                                    sx={{ color: theme.palette.success.main, borderColor: theme.palette.success.main }}\n                                                >\n                                                    Max\n                                                </Button>\n                                            ) : (\n                                                <Button\n                                                    variant=\"text\"\n                                                    onClick={() => {\n                                                        setPreBusdValue2(staxBalance);\n                                                        format4(Number(staxBalance));\n                                                    }}\n                                                    size=\"small\"\n                                                    sx={{ color: theme.palette.success.main, borderColor: theme.palette.success.main }}\n                                                >\n                                                    Max\n                                                </Button>\n                                            )}\n                                        </Grid>\n                                        {staxLogoFirst ? (\n                                            <Grid item container xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 0.5 }}>\n                                                <Typography textAlign=\"center\">Balance:{busdBalanceFinal}</Typography>\n                                                <XsBusdLogo />\n                                            </Grid>\n                                        ) : (\n                                            <Grid item container xs={12} sx={{ display: 'flex', justifyContent: 'center', mt: 0.5 }}>\n                                                <Typography textAlign=\"center\">Balance:{staxBalanceFinal}</Typography>\n                                                <XsStaxLogo />\n                                            </Grid>\n                                        )}\n                                        <Grid item xs={12} sx={{ mt: 1 }}>\n                                            {staxLogoFirst ? (\n                                                <Typography textAlign=\"center\" sx={{ mb: 1, mt: 2, color: theme.palette.success.light }}>\n                                                    Price impact: {priceImpact2.toLocaleString(undefined, { maximumFractionDigits: 2 })} %\n                                                </Typography>\n                                            ) : (\n                                                <Typography textAlign=\"center\" sx={{ mb: 1, mt: 2, color: theme.palette.success.light }}>\n                                                    Price impact: {priceImpact1.toLocaleString(undefined, { maximumFractionDigits: 2 })} %\n                                                </Typography>\n                                            )}\n                                            <Typography textAlign=\"center\" sx={{ mb: 1, color: theme.palette.success.light }}>\n                                                Slippage: {slippageF}%\n                                            </Typography>\n                                            <Grid item sx={{ mb: 3, mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                                <LoadingButton\n                                                    loading={loading}\n                                                    onClick={() => {\n                                                        setBusdValue(preBusdValue);\n                                                        handleLoadingTrue();\n                                                        updateBalances();\n                                                        handleOpen5();\n                                                    }}\n                                                    sx={{\n                                                        fontSize: 18,\n                                                        minHeight: 45,\n                                                        minWidth: 110,\n                                                        bgcolor: theme.palette.success.main,\n                                                        backgroundColor: theme.palette.success.main,\n                                                        color: theme.palette.grey[900]\n                                                    }}\n                                                >\n                                                    SWAP\n                                                </LoadingButton>\n                                            </Grid>\n                                            <Grid item sx={{ mb: 3, mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                                <Button\n                                                    onClick={() => {\n                                                        approveBusd().then(() => {\n                                                            approveStax();\n                                                        });\n                                                    }}\n                                                    sx={{\n                                                        fontSize: 18,\n                                                        minHeight: 45,\n                                                        minWidth: 110,\n                                                        bgcolor: theme.palette.success.main,\n                                                        backgroundColor: theme.palette.success.main,\n                                                        color: theme.palette.grey[900]\n                                                    }}\n                                                >\n                                                    APPROVE\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default DEX;\n"],"sourceRoot":""}