{"version":3,"sources":["views/utilities/staxlogo.js","views/utilities/StakingCard.js","views/utilities/Typography.js"],"names":["StaxLogo","useTheme","Grid","justifyContent","alignContent","sx","height","width","src","Stax","alt","style","position","top","left","transform","bgcolor","border","boxShadow","borderRadius","borderColor","p","StakingCard","theme","useState","balance","setBalance","balanceFormatted","BigNumber","decimalPlaces","toLocaleString","undefined","preAmount","setPreAmount","stakeAmount","setStakeAmount","stakeAmountF","Web3","utils","toWei","toString","stakeAmountFormatted","toBN","stakeName","setStakeName","Number18Decimals","sharesBalance","setSharesBalance","boostedSharesBalance","setBoostedSharesBalance","stakesList","setStakesList","stakesSuperList","setStakesSuperList","currentClaimable","setCurrentClaimable","currentStaked","setCurrentStaked","withdrawSum","setWithdrawSum","withdrawSumFormatted","withdrawAFormatted","stakedd","stakeddSuper","React","loading","setLoading","loading2","setLoading2","loading3","setLoading3","loading4","setLoading4","loading5","setLoading5","setLoading6","open","setOpen","open2","setOpen2","open4","setOpen4","open5","setOpen5","open6","setOpen6","open7","setOpen7","handleClose","handleClose2","handleClose4","handleClose5","handleClose6","handleClose7","handleLoadingFalse","handleLoadingTrue","handleLoadingFalse2","handleLoadingTrue2","handleLoadingFalse3","handleLoadingTrue3","handleLoadingFalse4","handleLoadingTrue4","handleLoadingFalse5","handleLoadingTrue5","currentIndex","setCurrentIndex","myAPY","maximumFractionDigits","myAPY2","fetchStaxBalance","a","ggetStaxBalance","then","catch","err","console","log","fetchStakesBalance","stakeHas","balancee","fetchStakesSuperBalance","stakeHasSuper","fetchSharesBalance","ggetOwnBalance","useEffect","load","Modal","onBackdropClick","onClose","Box","variant","textAlign","component","item","container","mb","mt","display","ml","xs","palette","success","main","lg","TextField","onChange","e","target","value","inputProps","color","id","label","Button","onClick","fromWei","size","LoadingButton","withdrawAmount","fontSize","grey","backgroundColor","stakeStax","minHeight","minWidth","stakeStaxSuper","my","withdrawAmountSuper","spacing","md","sm","Card","maxWidth","borderLeft","borderRight","borderBottom","light","pt","Tooltip","title","mx","TableContainer","Table","TableHead","TableRow","TableCell","map","total","index","TableBody","stakename","sharesbonus","amount","claimable","dateSeparator","format","showTime","created","keyy","stakenamesuper","Typography","gridSpacing"],"mappings":"mXAgBeA,EAXE,WAEb,OADAC,cAEI,mCACI,cAACC,EAAA,EAAD,CAAMC,eAAe,SAASC,aAAa,SAASC,GAAI,CAAEC,OAAQ,KAAlE,SACI,qBAAKA,OAAQ,GAAIC,MAAM,SAASC,IAAKC,IAAMC,IAAI,uB,iGCgCzDC,EAAQ,CACVC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXR,MAAO,IACPS,QAAS,mBACTC,OAAQ,oBACRC,UAAW,GACXC,aAAc,EACdC,YAAa,QACbC,EAAG,GAosCQC,EAlsCK,WAChB,IAAMC,EAAQtB,cACd,EAA8BuB,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAGMC,EAFkB,IAAIC,IAAUH,GACAI,cAAc,GACbC,oBAAeC,GACtD,EAAkCP,mBAAS,GAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KACA,EAAsCT,mBAAS,GAA/C,mBAAOU,EAAP,KAAoBC,EAApB,KACMC,EAAeC,IAAKC,MAAMC,MAAML,EAAYM,WAAY,SACxDC,EAAuBJ,IAAKC,MAAMI,KAAKN,GAC7C,EAAkCZ,mBAAS,GAA3C,mBAAOmB,EAAP,KAAkBC,EAAlB,KACMC,EAAmB,KACzB,EAA0CrB,mBAAS,GAAnD,mBAAOsB,GAAP,KAAsBC,GAAtB,KACA,GAAwDvB,mBAAS,GAAjE,qBAAOwB,GAAP,MAA6BC,GAA7B,MACA,GAAoCzB,mBAAS,CAAC,GAAI,KAAlD,qBAAO0B,GAAP,MAAmBC,GAAnB,MACA,GAA8C3B,mBAAS,CAAC,GAAI,KAA5D,qBAAO4B,GAAP,MAAwBC,GAAxB,MACA,GAAgD7B,mBAAS,GAAzD,qBAAO8B,GAAP,MAAyBC,GAAzB,MACA,GAA0C/B,mBAAS,GAAnD,qBAAOgC,GAAP,MAAsBC,GAAtB,MACA,GAAsCjC,mBAAS,GAA/C,qBAAOkC,GAAP,MAAoBC,GAApB,MACMC,GAAuBvB,IAAKC,MAAMC,MAAMmB,GAAYlB,WAAY,SAChEqB,GAAqBxB,IAAKC,MAAMI,KAAKkB,IAC3C,eAA0BV,GAA1B,GAAeY,IAAf,aACA,eAAoCV,GAApC,GAAoBW,IAApB,aAEA,GAA8BC,IAAMxC,UAAS,GAA7C,qBAAOyC,GAAP,MAAgBC,GAAhB,MACA,GAAgCF,IAAMxC,UAAS,GAA/C,qBAAO2C,GAAP,MAAiBC,GAAjB,MACA,GAAgCJ,IAAMxC,UAAS,GAA/C,qBAAO6C,GAAP,MAAiBC,GAAjB,MACA,GAAgCN,IAAMxC,UAAS,GAA/C,qBAAO+C,GAAP,MAAiBC,GAAjB,MACA,GAAgCR,IAAMxC,UAAS,GAA/C,qBAAOiD,GAAP,MAAiBC,GAAjB,MACA,GAAgCV,IAAMxC,UAAS,GAA/C,qBAAiBmD,IAAjB,aACA,GAAwBX,IAAMxC,UAAS,GAAvC,qBAAOoD,GAAP,MAAaC,GAAb,MACA,GAA0Bb,IAAMxC,UAAS,GAAzC,qBAAOsD,GAAP,MAAcC,GAAd,MACA,GAA0Bf,IAAMxC,UAAS,GAAzC,qBAAOwD,GAAP,MAAcC,GAAd,MACA,GAA0BjB,IAAMxC,UAAS,GAAzC,qBAAO0D,GAAP,MAAcC,GAAd,MACA,GAA0BnB,IAAMxC,UAAS,GAAzC,qBAAO4D,GAAP,MAAcC,GAAd,MACA,GAA0BrB,IAAMxC,UAAS,GAAzC,qBAAO8D,GAAP,MAAcC,GAAd,MACMC,GAAc,kBAAMX,IAAQ,IAE5BY,GAAe,kBAAMV,IAAS,IAE9BW,GAAe,kBAAMT,IAAS,IAE9BU,GAAe,kBAAMR,IAAS,IAE9BS,GAAe,kBAAMP,IAAS,IAE9BQ,GAAe,kBAAMN,IAAS,IAE9BO,GAAqB,kBAAM5B,IAAW,IACtC6B,GAAoB,kBAAM7B,IAAW,IACrC8B,GAAsB,kBAAM5B,IAAY,IACxC6B,GAAqB,kBAAM7B,IAAY,IACvC8B,GAAsB,kBAAM5B,IAAY,IACxC6B,GAAqB,kBAAM7B,IAAY,IACvC8B,GAAsB,kBAAM5B,IAAY,IACxC6B,GAAqB,kBAAM7B,IAAY,IACvC8B,GAAsB,kBAAM5B,IAAY,IACxC6B,GAAqB,kBAAM7B,IAAY,IAQ7C,GAAwClD,mBAAS,GAAjD,qBAAOgF,GAAP,MAAqBC,GAArB,MACMC,IAAS,MAAwB,OAAhB5D,IAAwBhB,oBAAeC,EAAW,CAAE4E,sBAAuB,IAC5FC,IAAU,MAA+B,OAAvB5D,IAA+BlB,oBAAeC,EAAW,CAAE4E,sBAAuB,IAEpGE,GAAgB,uCAAG,sBAAAC,EAAA,sDACrBC,cACKC,MAAK,SAACvF,GACHC,EAAWD,MAEdwF,OAAM,SAACC,GACJC,QAAQC,IAAIF,MANC,2CAAH,qDAShBG,GAAkB,uCAAG,sBAAAP,EAAA,sDACvBQ,aAAS,GACJN,MAAK,SAACO,GACHpE,GAAcoE,GACdJ,QAAQC,IAAIG,MAEfN,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAPG,2CAAH,qDAUlBM,GAAuB,uCAAG,sBAAAV,EAAA,sDAC5BW,aAAc,GACTT,MAAK,SAACO,GACHlE,GAAmBkE,GACnBJ,QAAQC,IAAIG,MAEfN,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAPQ,2CAAH,qDAUvBQ,GAAkB,uCAAG,sBAAAZ,EAAA,sDACvBa,cACKX,MAAK,SAACvF,GACCA,EAAU,IACVwB,GAAwB,IACxBF,GAAiB,KACVtB,EAAU,IACjBsB,GAAiB,IACjBE,GAAwBxB,KAExBsB,GAAiBtB,GACjBwB,GAAwBxB,OAG/BwF,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAfG,2CAAH,qDA4BxB,OAVAU,qBAAU,WAAM,4CACZ,sBAAAd,EAAA,sDACID,KACAS,cACAI,KACAL,KACAG,KALJ,4CADY,uBAAC,WAAD,wBAQZK,KACD,IAEC,qCACI,cAACC,EAAA,EAAD,CACIlD,KAAMA,GACNmD,gBAAiB,WACbvC,KACAU,KACAI,MAEJ0B,QAASxC,GACT,kBAAgB,oBAChB,mBAAiB,0BATrB,SAWI,eAACyC,EAAA,EAAD,CAAK5H,GAAIM,EAAT,UACI,cAAC,IAAD,CAAYuH,QAAQ,KAAKC,UAAU,SAASC,UAAU,KAAtD,kGAGA,eAAClI,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACjI,GAAI,CAAEkI,GAAI,EAAGC,GAAI,EAAGC,QAAS,OAAQtI,eAAgB,UAA1E,UACI,eAACD,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACjI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAA5D,UACI,eAAC,IAAD,CAAY+H,QAAQ,KAAKC,UAAU,SAASC,UAAU,KAAtD,qBACa,KACP9E,GAAmBT,GAAkBf,oBAAeC,EAAW,CAC7D4E,sBAAuB,OAG/B,cAAC,IAAD,OAEJ,eAACzG,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACjI,GAAI,CAAEmI,GAAI,EAAGC,QAAS,OAAQtI,eAAgB,UAAnE,UACI,eAAC,IAAD,CAAY+H,QAAQ,KAAKC,UAAU,SAAS9H,GAAI,CAAEqI,GAAI,GAAKN,UAAU,KAArE,oBACY,KACN5E,GAAgBX,GAAkBf,oBAAeC,EAAW,CAC1D4E,sBAAuB,OAG/B,cAAC,IAAD,UAGR,cAACzG,EAAA,EAAD,CAAMoI,WAAS,EAACjI,GAAI,CAAEmI,GAAI,EAAGC,QAAS,OAAQtI,eAAgB,UAA9D,SACI,eAACD,EAAA,EAAD,CACImI,MAAI,EACJC,WAAS,EACTK,GAAG,OACHtI,GAAI,CAAEY,OAAQ,EAAGG,YAAaG,EAAMqH,QAAQC,QAAQC,KAAM3H,aAAc,GACxE4H,GAAG,OALP,UAOI,cAACC,EAAA,EAAD,CACIC,SAAU,SAACC,GAAD,OAAOvF,GAAeuF,EAAEC,OAAOC,QACzCC,WAAY,CAAE1I,MAAO,CAAEJ,MAAO,IAAK4H,UAAW,SAAUmB,MAAO,UAC/DC,GAAG,iBACHH,MAAO1F,GACPwE,QAAQ,WACRoB,MAAM,UACNE,MAAM,kBAEV,cAACC,EAAA,EAAD,CACIvB,QAAQ,OACRwB,QAAS,kBAAM/F,GAAetB,IAAKC,MAAMqH,QAAQnG,MACjDoG,KAAK,QACLvJ,GAAI,CAAEiJ,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAM1H,YAAaG,EAAMqH,QAAQC,QAAQC,MAJhF,sBAUR,cAAC5I,EAAA,EAAD,CAAMmI,MAAI,EAAChI,GAAI,CAAEF,eAAgB,SAAUsI,QAAS,QAApD,SACI,cAACoB,EAAA,EAAD,CACI5F,QAASQ,GACTiF,QAAS,WACLnD,KACAuD,YAAejG,GAAoB2C,IAAcQ,MAAK,WAClDV,KACAzB,IAAQ,GACRqB,KACAmB,SAGRhH,GAAI,CACAmI,GAAI,IACJuB,SAAU,GACVxJ,MAAO,GACPD,OAAQ,GACRgJ,MAAO/H,EAAMqH,QAAQoB,KAAK,KAC1BhJ,QAASO,EAAMqH,QAAQC,QAAQC,KAC/BmB,gBAAiB1I,EAAMqH,QAAQC,QAAQC,MAlB/C,6BA0BZ,cAAChB,EAAA,EAAD,CACIlD,KAAMU,GACNyC,gBAAiB,WACblC,KACAK,KACAI,MAEJ0B,QAASnC,GACT,kBAAgB,oBAChB,mBAAiB,0BATrB,SAWI,eAACoC,EAAA,EAAD,CAAK5H,GAAIM,EAAT,UACI,cAAC,IAAD,CAAYuH,QAAQ,KAAKC,UAAU,SAASC,UAAU,KAAtD,kGAGA,eAAClI,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACjI,GAAI,CAAEkI,GAAI,EAAGC,GAAI,EAAGC,QAAS,OAAQtI,eAAgB,UAA1E,UACI,eAACD,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACjI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAA5D,UACI,eAAC,IAAD,CAAY+H,QAAQ,KAAKC,UAAU,SAASC,UAAU,KAAtD,qBACa,KACP9E,GAAmBT,GAAkBf,oBAAeC,EAAW,CAC7D4E,sBAAuB,OAG/B,cAAC,IAAD,OAEJ,eAACzG,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACjI,GAAI,CAAEmI,GAAI,EAAGC,QAAS,OAAQtI,eAAgB,UAAnE,UACI,eAAC,IAAD,CAAY+H,QAAQ,KAAKC,UAAU,SAAS9H,GAAI,CAAEqI,GAAI,GAAKN,UAAU,KAArE,oBACY,KACN5E,GAAgBX,GAAkBf,oBAAeC,EAAW,CAC1D4E,sBAAuB,OAG/B,cAAC,IAAD,UAGR,cAACzG,EAAA,EAAD,CAAMoI,WAAS,EAACjI,GAAI,CAAEmI,GAAI,EAAGC,QAAS,OAAQtI,eAAgB,UAA9D,SACI,eAACD,EAAA,EAAD,CACImI,MAAI,EACJC,WAAS,EACTK,GAAG,OACHtI,GAAI,CAAEY,OAAQ,EAAGG,YAAaG,EAAMqH,QAAQC,QAAQC,KAAM3H,aAAc,GACxE4H,GAAG,OALP,UAOI,cAACC,EAAA,EAAD,CACIC,SAAU,SAACC,GAAD,OAAOvF,GAAeuF,EAAEC,OAAOC,QACzCC,WAAY,CAAE1I,MAAO,CAAEJ,MAAO,IAAK4H,UAAW,SAAUmB,MAAO,UAC/DC,GAAG,iBACHH,MAAO1F,GACPwE,QAAQ,WACRoB,MAAM,UACNE,MAAM,kBAEV,cAACC,EAAA,EAAD,CACIvB,QAAQ,OACRwB,QAAS,kBAAM/F,GAAetB,IAAKC,MAAMqH,QAAQnG,MACjDoG,KAAK,QACLvJ,GAAI,CAAEiJ,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAM1H,YAAaG,EAAMqH,QAAQC,QAAQC,MAJhF,sBAUR,cAAC5I,EAAA,EAAD,CAAMmI,MAAI,EAAChI,GAAI,CAAEF,eAAgB,SAAUsI,QAAS,QAApD,SACI,cAACoB,EAAA,EAAD,CACI5F,QAASQ,GACTiF,QAAS,WACLnD,KACAuD,YAAejG,GAAoB2C,IAAcQ,MAAK,WAClDV,KACAf,IAAS,GACTW,KACAmB,SAGRhH,GAAI,CACAmI,GAAI,IACJuB,SAAU,GACVxJ,MAAO,GACPD,OAAQ,GACRgJ,MAAO/H,EAAMqH,QAAQoB,KAAK,KAC1BhJ,QAASO,EAAMqH,QAAQC,QAAQC,KAC/BmB,gBAAiB1I,EAAMqH,QAAQC,QAAQC,MAlB/C,6BA0BZ,cAAChB,EAAA,EAAD,CACIlD,KAAMI,GACNgD,QAAStC,GACTqC,gBAAiB,WACbrC,KACAM,KACAF,MAEJ,kBAAgB,oBAChB,mBAAiB,0BATrB,SAWI,eAACmC,EAAA,EAAD,CAAK5H,GAAIM,EAAT,UACI,cAAC,IAAD,CAAYuH,QAAQ,KAAKC,UAAU,SAASC,UAAU,KAAtD,2OAIA,cAAClI,EAAA,EAAD,CAAMmI,MAAI,EAAChI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAAlD,SACI,cAAC0J,EAAA,EAAD,CACI5F,QAASE,GACTuF,QAAS,WACLzD,KACAiE,YAAUzH,EAAsBE,GAAWqE,MAAK,WAC5CtB,KACAzD,EAAa,GACb+D,KACAF,KACAuB,KACAR,SAGRxG,GAAI,CACA0J,SAAU,GACVI,UAAW,GACXC,SAAU,IACV5B,GAAI,EACJxH,QAASO,EAAMqH,QAAQC,QAAQC,KAC/BmB,gBAAiB1I,EAAMqH,QAAQC,QAAQC,KACvCQ,MAAO/H,EAAMqH,QAAQoB,KAAK,MApBlC,0BA4BZ,cAAClC,EAAA,EAAD,CACIlD,KAAMM,GACN8C,QAASrC,GACToC,gBAAiB,WACbpC,KAzSkBhB,IAAY,GA2S9BqB,KACAF,MAEJ,kBAAgB,oBAChB,mBAAiB,0BAVrB,SAYI,eAACmC,EAAA,EAAD,CAAK5H,GAAIM,EAAT,UACI,cAAC,IAAD,CAAYuH,QAAQ,KAAKC,UAAU,SAASC,UAAU,KAAtD,wXAMA,cAAClI,EAAA,EAAD,CAAMmI,MAAI,EAAChI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAAlD,SACI,cAAC0J,EAAA,EAAD,CACI5F,QAASE,GACTuF,QAAS,WACLzD,KACAoE,YAAe5H,EAAsBE,GAAWqE,MAAK,WACjDrB,KACAK,KACAF,KACAuB,KACAR,SAGRxG,GAAI,CACA0J,SAAU,GACVI,UAAW,GACXC,SAAU,IACV5B,GAAI,EACJxH,QAASO,EAAMqH,QAAQC,QAAQC,KAC/BmB,gBAAiB1I,EAAMqH,QAAQC,QAAQC,KACvCQ,MAAO/H,EAAMqH,QAAQoB,KAAK,MAnBlC,0BA2BZ,cAAClC,EAAA,EAAD,CACIlD,KAAME,GACNkD,QAASvC,GACTsC,gBAAiB,WACbtC,KACAa,KACAF,MAEJ,kBAAgB,oBAChB,mBAAiB,0BATrB,SAWI,eAAC6B,EAAA,EAAD,CAAK5H,GAAIM,EAAT,UACI,cAAC,IAAD,CAAYuH,QAAQ,KAAKC,UAAU,SAASC,UAAU,KAAtD,4IAIA,eAAClI,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACjI,GAAI,CAAEoI,QAAS,OAAQ6B,GAAI,EAAGnK,eAAgB,UAAnE,UACI,eAAC,IAAD,CAAY+H,QAAQ,KAAKC,UAAU,SAASC,UAAU,KAAtD,kCAC0B,KACpB9E,GAAmBT,GAAkBf,oBAAeC,EAAW,CAC7D4E,sBAAuB,MAHiCH,IAMhE,cAAC,IAAD,OAEJ,cAACtG,EAAA,EAAD,CAAMmI,MAAI,EAAChI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAAlD,SACI,cAAC0J,EAAA,EAAD,CACI5F,QAASQ,GACTiF,QAAS,WACLnD,KACAuD,YAAe,EAAGtD,IACbQ,MAAK,WACFV,KACAvB,IAAS,GACTqB,KACAiB,QAEHJ,OAAM,WACHX,SAGZjG,GAAI,CACAmI,GAAI,EACJuB,SAAU,GACVI,UAAW,GACXC,SAAU,GACVpJ,QAASO,EAAMqH,QAAQC,QAAQC,KAC/BmB,gBAAiB1I,EAAMqH,QAAQC,QAAQC,KACvCQ,MAAO/H,EAAMqH,QAAQoB,KAAK,MAtBlC,0BA8BZ,cAAClC,EAAA,EAAD,CACIlD,KAAMQ,GACN4C,QAASpC,GACTmC,gBAAiB,WACbnC,KACAU,KACAF,MAEJ,kBAAgB,oBAChB,mBAAiB,0BATrB,SAWI,eAAC6B,EAAA,EAAD,CAAK5H,GAAIM,EAAT,UACI,cAAC,IAAD,CAAYuH,QAAQ,KAAKC,UAAU,SAASC,UAAU,KAAtD,4IAIA,eAAClI,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACjI,GAAI,CAAEoI,QAAS,OAAQ6B,GAAI,EAAGnK,eAAgB,UAAnE,UACI,eAAC,IAAD,CAAY+H,QAAQ,KAAKC,UAAU,SAASC,UAAU,KAAtD,kCAC0B,KACpB9E,GAAmBT,GAAkBf,oBAAeC,EAAW,CAC7D4E,sBAAuB,MAHiCH,IAMhE,cAAC,IAAD,OAEJ,cAACtG,EAAA,EAAD,CAAMmI,MAAI,EAAChI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAAlD,SACI,cAAC0J,EAAA,EAAD,CACI5F,QAASQ,GACTiF,QAAS,WACLnD,KACAgE,YAAoB,EAAG/D,IAAcQ,MAAK,WACtCV,KACAvB,IAAS,GACTqB,KACAiB,SAGRhH,GAAI,CACAmI,GAAI,EACJuB,SAAU,GACVI,UAAW,GACXC,SAAU,GACVpJ,QAASO,EAAMqH,QAAQC,QAAQC,KAC/BmB,gBAAiB1I,EAAMqH,QAAQC,QAAQC,KACvCQ,MAAO/H,EAAMqH,QAAQoB,KAAK,MAlBlC,0BA0BZ,eAAC9J,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACkC,QAAS,EAAG7B,GAAI,GAAItI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAAhF,UACI,eAACD,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACjI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,SAAUqI,GAAI,GAA1E,UACI,cAAC,IAAD,CAAYL,UAAU,SAASD,QAAQ,KAAKoB,MAAO/H,EAAMqH,QAAQoB,KAAK,IAAtE,mBAGA,cAAC,IAAD,CAAYV,MAAM,UAAUS,SAAS,QAAQ1J,GAAI,CAAEmI,GAAI,EAAGE,GAAI,QAElE,cAACxI,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACS,GAAI,KAAM0B,GAAI,EAAG9B,GAAI,GAAI+B,GAAI,IAAKrK,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,SAAUqI,GAAI,GAA5G,SACI,cAACmC,EAAA,EAAD,CACItK,GAAI,CACAuK,SAAU,KACVC,WAAY,EACZC,YAAa,EACbC,aAAc,EACd3J,YAAaG,EAAMqH,QAAQC,QAAQmC,MACnC7J,aAAc,EACdD,UAAW,kCARnB,SAWI,eAAChB,EAAA,EAAD,CAAMoI,WAAS,EAACjI,GAAI,CAAEmI,GAAI,EAAGC,QAAS,OAAQtI,eAAgB,UAA9D,UACI,cAACD,EAAA,EAAD,CAAMmI,MAAI,EAAChI,GAAI,CAAE4J,gBAAiB1I,EAAMqH,QAAQoB,KAAK,KAAMxB,GAAI,GAAKO,GAAI,IAAKJ,GAAG,OAAhF,SACI,cAAC,EAAD,MAEJ,cAACzI,EAAA,EAAD,CAAMmI,MAAI,EAACU,GAAG,OAAOJ,GAAG,OAAOtI,GAAI,CAAEqI,GAAI,GAAKF,GAAI,GAAlD,SACI,cAAC,IAAD,CAAYN,QAAQ,KAAKoB,MAAO/H,EAAMqH,QAAQoB,KAAK,IAAK7B,UAAU,SAAlE,qBAIJ,cAACjI,EAAA,EAAD,CAAMmI,MAAI,EAACU,GAAG,OAAOJ,GAAG,OAAxB,SACI,cAAC,IAAD,CAAYT,QAAQ,KAAK7H,GAAI,CAAEqI,GAAI,GAAKF,GAAI,GAAKc,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAA9F,oBAIJ,cAACjI,EAAA,EAAD,CAAMmI,MAAI,EAACU,GAAI,EAAGJ,GAAG,OAAOtI,GAAI,CAAEmI,GAAI,EAAGyC,GAAI,IAA7C,SACI,cAACC,EAAA,EAAD,CACI7K,GAAI,CAAEiJ,MAAO/H,EAAMqH,QAAQC,QAAQC,MACnCqC,MACI,cAAC,IAAD,CACI9K,GAAI,CACAiJ,MAAO/H,EAAMqH,QAAQC,QAAQC,MAFrC,sPAHR,SAcI,cAAC,IAAD,QAGR,eAAC5I,EAAA,EAAD,CAAMoI,WAAS,EAACjI,GAAI,CAAEmI,GAAI,EAAGC,QAAS,OAAQtI,eAAgB,UAA9D,UACI,eAACD,EAAA,EAAD,CACImI,MAAI,EACJC,WAAS,EACTK,GAAG,OACHtI,GAAI,CAAEY,OAAQ,EAAGG,YAAaG,EAAMqH,QAAQC,QAAQC,KAAM3H,aAAc,GACxE4H,GAAG,OALP,UAOI,cAACC,EAAA,EAAD,CACIC,SAAU,SAACC,GAAD,OAAOtG,EAAasG,EAAEC,OAAOC,QACvCC,WAAY,CAAE1I,MAAO,CAAEJ,MAAO,IAAK4H,UAAW,SAAUmB,MAAO,UAC/DC,GAAG,iBACHH,MAAOzG,EACPuF,QAAQ,WACRoB,MAAM,UACNE,MAAM,sBAEV,cAACC,EAAA,EAAD,CACIvB,QAAQ,OACRwB,QAAS,kBAAM9G,EAAa,YAC5BgH,KAAK,QACLvJ,GAAI,CAAEiJ,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAM1H,YAAaG,EAAMqH,QAAQC,QAAQC,MAJhF,wBASJ,cAAC5I,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACK,GAAI,GAAItI,GAAI,CAAEoI,QAAS,OAAQD,GAAI,GAAKrI,eAAgB,UAA7E,SACI,cAAC,IAAD,CAAY+H,QAAQ,KAAKC,UAAU,SAAnC,mCAKR,eAACjI,EAAA,EAAD,CAAMoI,WAAS,EAACjI,GAAI,CAAEmI,GAAI,EAAGC,QAAS,OAAQtI,eAAgB,UAA9D,UACI,eAACD,EAAA,EAAD,CACImI,MAAI,EACJC,WAAS,EACTK,GAAG,OACHtI,GAAI,CACAY,OAAQ,EACRG,YAAaG,EAAMqH,QAAQC,QAAQC,KACnC3H,aAAc,EACdsH,QAAS,OACTtI,eAAgB,UAEpB4I,GAAG,OAXP,UAaI,cAACC,EAAA,EAAD,CACIC,SAAU,SAACC,GAAD,OAAOjH,EAAaiH,EAAEC,OAAOC,QACvCC,WAAY,CAAE1I,MAAO,CAAEJ,MAAO,IAAK4H,UAAW,SAAUmB,MAAO,UAC/DC,GAAG,iBACHH,MAAOpH,EACPkG,QAAQ,WACRoB,MAAM,UACNE,MAAM,kBAEV,cAACC,EAAA,EAAD,CACIvB,QAAQ,OACRwB,QAAS,kBAAMzH,EAAaN,IAC5BiI,KAAK,QACLvJ,GAAI,CAAEiJ,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAM1H,YAAaG,EAAMqH,QAAQC,QAAQC,MAJhF,oBASJ,eAAC5I,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACK,GAAI,GAAItI,GAAI,CAAEmI,GAAI,GAAKC,QAAS,OAAQtI,eAAgB,UAA7E,UACI,eAAC,IAAD,CAAY+H,QAAQ,KAAKC,UAAU,OAAnC,sBACcxG,KAEd,cAAC,IAAD,UAGR,eAACzB,EAAA,EAAD,CAAMoI,WAAS,EAACjI,GAAI,CAAEmI,GAAI,EAAGC,QAAS,OAAQtI,eAAgB,UAA9D,UACI,cAACD,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAG,OAAd,SACI,cAAC,IAAD,CAAYT,QAAQ,KAAKoB,MAAO/H,EAAMqH,QAAQoB,KAAK,IAAK7B,UAAU,SAAlE,4BAIJ,cAACjI,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAG,OAAd,SACI,eAAC,IAAD,CAAYT,QAAQ,KAAK7H,GAAI,CAAEqI,GAAI,GAAKY,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAArF,UACKrF,GADL,MACuBE,QAG3B,cAAC9C,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAG,OAAOtI,GAAI,CAAEqI,GAAI,GAAKF,IAAK,IAAzC,SACI,cAAC0C,EAAA,EAAD,CACI7K,GAAI,CAAEiJ,MAAO/H,EAAMqH,QAAQC,QAAQC,MACnCqC,MACI,cAAC,IAAD,CACI9K,GAAI,CACAiJ,MAAO/H,EAAMqH,QAAQC,QAAQC,MAFrC,oUAHR,SAeI,cAAC,IAAD,WAIZ,cAAC5I,EAAA,EAAD,CAAMoI,WAAS,EAACjI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAAvD,SACI,eAACD,EAAA,EAAD,CACImI,MAAI,EACJhI,GAAI,CACA4J,gBAAiB1I,EAAMqH,QAAQoB,KAAK,KACpCxB,GAAI,EACJD,GAAI,GAERQ,GAAG,OAPP,UASI,cAACc,EAAA,EAAD,CACI5F,QAASA,GACTyF,QAAS,WACLvH,EAAeH,GACf+D,KAxnBdd,IAAS,IA2nBC5E,GAAI,CACA0J,SAAU,GACVI,UAAW,GACXC,SAAU,IACVpJ,QAASO,EAAMqH,QAAQC,QAAQC,KAC/BmB,gBAAiB1I,EAAMqH,QAAQC,QAAQC,KACvCQ,MAAO/H,EAAMqH,QAAQoB,KAAK,MAblC,mBAkBA,cAACH,EAAA,EAAD,CACI5F,QAASA,GACTyF,QAAS,WACLvH,EAAeH,GACf+D,KAxoBdZ,IAAS,IA2oBC9E,GAAI,CACA0J,SAAU,GACVI,UAAW,GACXC,SAAU,IACV1B,GAAI,EACJ1H,QAASO,EAAMqH,QAAQC,QAAQC,KAC/BmB,gBAAiB1I,EAAMqH,QAAQC,QAAQC,KACvCQ,MAAO/H,EAAMqH,QAAQoB,KAAK,MAdlC,+BAwBpB,eAAC9J,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACS,GAAI,KAAMJ,GAAI,GAAI8B,GAAI,EAAGC,GAAI,IAAKrK,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,SAAUqI,GAAI,GAA5G,UACI,eAACmC,EAAA,EAAD,CACItK,GAAI,CACAwK,WAAY,EACZC,YAAa,EACbC,aAAc,EACd3J,YAAaG,EAAMqH,QAAQC,QAAQmC,MACnC7J,aAAc,EACdD,UAAW,iCACXqH,GAAI,GARZ,UAWI,eAACrI,EAAA,EAAD,CACIoI,WAAS,EACTjI,GAAI,CACA4J,gBAAiB1I,EAAMqH,QAAQoB,KAAK,KACpCxB,GAAI,EACJC,QAAS,OACTtI,eAAgB,UANxB,UASI,cAACD,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAG,OAAd,SACI,cAAC,IAAD,CAAYT,QAAQ,KAAK7H,GAAI,CAAEqI,GAAI,GAAKY,MAAO/H,EAAMqH,QAAQoB,KAAK,IAAK7B,UAAU,SAAjF,qBAIJ,cAACjI,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAG,OAAd,SACI,cAAC,IAAD,CAAYT,QAAQ,KAAK7H,GAAI,CAAEqI,GAAI,GAAKY,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAArF,+BAKR,cAACjI,EAAA,EAAD,CAAMoI,WAAS,EAACjI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAAvD,SACI,cAACD,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAI,GAAf,SACI,cAAC,IAAD,CAAYT,QAAQ,KAAK7H,GAAI,CAAEiK,GAAI,GAAKhB,MAAO/H,EAAMqH,QAAQoB,KAAK,IAAK7B,UAAU,SAAjF,sIAMR,eAACjI,EAAA,EAAD,CAAMoI,WAAS,EAACjI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAAvD,UACI,cAACD,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAG,OAAd,SACI,cAAC,IAAD,CAAYT,QAAQ,KAAKoB,MAAO/H,EAAMqH,QAAQoB,KAAK,IAAK7B,UAAU,SAAlE,4BAIJ,cAACjI,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAG,OAAd,SACI,cAAC,IAAD,CAAYT,QAAQ,KAAK7H,GAAI,CAAEqI,GAAI,GAAKY,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAArF,yBAKR,eAACjI,EAAA,EAAD,CAAMoI,WAAS,EAACjI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAAvD,UACI,cAACD,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAG,OAAd,SACI,cAAC,IAAD,CAAYT,QAAQ,KAAK7H,GAAI,CAAEiK,GAAI,GAAKhB,MAAO/H,EAAMqH,QAAQoB,KAAK,IAAK7B,UAAU,SAAjF,4BAIJ,cAACjI,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAG,OAAd,SACI,eAAC,IAAD,CAAYT,QAAQ,KAAK7H,GAAI,CAAEiK,GAAI,EAAG5B,GAAI,GAAKY,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAA5F,UACKzB,GADL,OACgBE,GADhB,SAIJ,cAAC1G,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAG,OAAOtI,GAAI,CAAEiK,GAAI,GAA/B,SACI,cAACY,EAAA,EAAD,CACI7K,GAAI,CAAEiJ,MAAO/H,EAAMqH,QAAQC,QAAQC,MACnCqC,MACI,cAAC,IAAD,CACI9K,GAAI,CACAiJ,MAAO/H,EAAMqH,QAAQC,QAAQC,MAFrC,iUAHR,SAeI,cAAC,IAAD,cAKhB,eAAC6B,EAAA,EAAD,CACItK,GAAI,CACAE,MAAO,OACPsK,WAAY,EACZC,YAAa,EACbC,aAAc,EACd3J,YAAaG,EAAMqH,QAAQC,QAAQmC,MACnC7J,aAAc,EACdD,UAAW,iCACXqH,GAAI,GATZ,UAYI,eAACrI,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACjI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAA5D,UACI,cAACD,EAAA,EAAD,CAAMmI,MAAI,EAACU,GAAG,OAAd,SACI,cAAC,IAAD,CAAYb,QAAQ,KAAK7H,GAAI,CAAEiK,GAAI,GAAKhB,MAAO/H,EAAMqH,QAAQoB,KAAK,IAAK7B,UAAU,SAAjF,yBAIJ,cAACjI,EAAA,EAAD,CAAMmI,MAAI,EAACU,GAAG,OAAd,SACI,cAAC,IAAD,CAAYb,QAAQ,KAAK7H,GAAI,CAAEiK,GAAI,EAAG5B,GAAI,IAAOY,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAA9F,gCAKR,eAACjI,EAAA,EAAD,CAAMoI,WAAS,EAACjI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAAvD,UACI,cAACD,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAI,EAAGI,GAAI,EAAG2B,GAAI,EAA7B,SACI,cAAC,IAAD,CAAYxC,QAAQ,KAAKoB,MAAO/H,EAAMqH,QAAQoB,KAAK,IAAK7B,UAAU,SAAlE,mCAIJ,cAACjI,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAI,EAAGI,GAAI,EAAG2B,GAAI,EAA7B,SACI,cAAC,IAAD,CAAYxC,QAAQ,KAAK7H,GAAI,CAAEqI,GAAI,GAAKY,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAArF,oCAKR,eAACjI,EAAA,EAAD,CAAMoI,WAAS,EAACjI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,UAAvD,UACI,cAACD,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAI,EAAGI,GAAI,IAAK2B,GAAI,EAA/B,SACI,cAAC,IAAD,CAAYxC,QAAQ,KAAK7H,GAAI,CAAEiK,GAAI,GAAKhB,MAAO/H,EAAMqH,QAAQoB,KAAK,IAAK7B,UAAU,SAAjF,yCAIJ,cAACjI,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAI,EAAGI,GAAI,IAAK2B,GAAI,EAA/B,SACI,cAAC,IAAD,CAAYxC,QAAQ,KAAK7H,GAAI,CAAEiK,GAAI,EAAG5B,GAAI,GAAKY,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAA5F,oDAQpB,eAACjI,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACjI,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,SAAUqI,GAAI,EAAGD,GAAI,IAAjF,UACI,eAACrI,EAAA,EAAD,CACImI,MAAI,EACJC,WAAS,EACTS,GAAI,KACJ0B,GAAI,EACJ9B,GAAI,GACJ+B,GAAI,EACJrK,GAAI,CACAmI,GAAI,EACJC,QAAS,OACTtI,eAAgB,UAVxB,UAaI,cAACD,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACS,GAAI,GAAI1I,GAAI,CAAEoI,QAAS,OAAQF,GAAI,EAAGpI,eAAgB,UAA3E,SACI,cAACD,EAAA,EAAD,CAAMmI,MAAI,EAACU,GAAI,EAAf,SACI,cAAC,IAAD,CAAYZ,UAAU,SAASD,QAAQ,KAAvC,gCAKR,cAAChI,EAAA,EAAD,CACImI,MAAI,EACJC,WAAS,EACTS,GAAI,KACJ0B,GAAI,GACJ9B,GAAI,GACJ+B,GAAI,GACJrK,GAAI,CACAoI,QAAS,OACTtI,eAAgB,SAChB0K,WAAY,EACZC,YAAa,EACbC,aAAc,EACdK,GAAI,EACJhK,YAAaG,EAAMqH,QAAQC,QAAQmC,MACnC7J,aAAc,EACdD,UAAW,kCAhBnB,SAmBI,cAACmK,EAAA,EAAD,CAAgBhL,GAAI,CAAEE,MAAO,IAAKY,aAAc,GAAhD,SACI,eAACmK,EAAA,EAAD,CAAOjL,GAAI,CAAEE,MAAO,aAAe,aAAW,eAA9C,UACI,cAACgL,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYnC,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAAzD,oBAIJ,cAACsD,EAAA,EAAD,UACI,cAAC,IAAD,CAAYnC,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAAzD,2BAIJ,cAACsD,EAAA,EAAD,UACI,cAAC,IAAD,CAAYnC,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAAzD,sBAIJ,cAACsD,EAAA,EAAD,UACI,cAAC,IAAD,CAAYnC,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAAzD,uBAIJ,cAACsD,EAAA,EAAD,UACI,eAACvL,EAAA,EAAD,CAAMoI,WAAS,EAAf,UACI,cAACpI,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAI,EAAGtI,GAAI,CAAEmI,GAAI,IAA5B,SACI,cAAC,IAAD,CAAYc,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAAzD,mBAIJ,cAACjI,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAI,EAAf,SACI,cAACuC,EAAA,EAAD,CACI7K,GAAI,CAAEmI,GAAI,GAAKc,MAAO/H,EAAMqH,QAAQC,QAAQC,MAC5CqC,MACI,cAAC,IAAD,CACI9K,GAAI,CACAiJ,MAAO/H,EAAMqH,QAAQC,QAAQC,MAFrC,wJAHR,SAaI,cAAC,IAAD,aAKhB,cAAC2C,EAAA,EAAD,UACI,cAAC,IAAD,CAAYnC,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAAzD,+BAMXrE,GAAQ4H,KAAI,SAACC,EAAOC,GAAR,OACT,cAACC,EAAA,EAAD,UACI,eAACL,EAAA,EAAD,CAAsBnL,GAAI,CAAE,mCAAoC,CAAEY,OAAQ,IAA1E,UACI,cAACwK,EAAA,EAAD,UACI,cAAC,IAAD,CAAwBtD,UAAU,SAAlC,SACKwD,EAAMG,WADMF,KAIrB,cAACH,EAAA,EAAD,UACI,eAAC,IAAD,CAAwBtD,UAAU,SAAlC,WAC0B,KAApBwD,EAAMI,YAAqB,MAAMjK,oBAAeC,EAAW,CACzD4E,sBAAuB,IAF/B,MAAiBiF,KAOrB,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAwBtD,UAAU,SAAlC,UACMwD,EAAMK,OAASnJ,GAAkBf,oBAAeC,EAAW,CACzD4E,sBAAuB,KAFdiF,KAMrB,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAwBtD,UAAU,SAAlC,UACMwD,EAAMM,UAAYpJ,GAAkBf,oBAAeC,EAAW,CAC5D4E,sBAAuB,KAFdiF,KAMrB,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAwBtD,UAAU,SAAlC,SACI,cAAC,IAAD,CAAgB+D,cAAc,IAAIC,OAAO,MAAMC,SAAS,IAAxD,SACKT,EAAMU,WAFET,KAMrB,cAACH,EAAA,EAAD,UACI,eAACvL,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACgE,KAAMV,EAAOjD,GAAI,GAAItI,GAAI,CAAEE,MAAO,KAAvD,UACI,cAACsJ,EAAA,EAAD,CACI5F,QAASI,GACTqF,QAAS,WACLnG,GAAoBoI,EAAMM,WAC1BxI,GAAiBkI,EAAMK,QACvB7F,KAt7B/BtB,IAAQ,GAw7BuB4B,GAAgBmF,IAEpBvL,GAAI,CACA0J,SAAU,GACVxJ,MAAO,GACPD,OAAQ,GACRgJ,MAAO/H,EAAMqH,QAAQoB,KAAK,KAC1BhJ,QAASO,EAAMqH,QAAQC,QAAQC,KAC/BmB,gBAAiB1I,EAAMqH,QAAQC,QAAQC,MAf/C,sBAoBA,cAACe,EAAA,EAAD,CACI5F,QAASM,GACTmF,QAAS,WACLnG,GAAoBoI,EAAMM,WAC1B5F,KAv8B9BtB,IAAS,GAy8BqB0B,GAAgBmF,IAEpBvL,GAAI,CACAqI,GAAI,EACJqB,SAAU,GACVxJ,MAAO,GACPD,OAAQ,GACRgJ,MAAO/H,EAAMqH,QAAQoB,KAAK,KAC1BhJ,QAASO,EAAMqH,QAAQC,QAAQC,KAC/BmB,gBAAiB1I,EAAMqH,QAAQC,QAAQC,MAf/C,0BAzDG8C,IADHA,gBAuFpC,eAAC1L,EAAA,EAAD,CACImI,MAAI,EACJC,WAAS,EACTS,GAAI,KACJJ,GAAI,GACJ8B,GAAI,EACJC,GAAI,IACJrK,GAAI,CACAmI,GAAI,EACJC,QAAS,OACTtI,eAAgB,UAVxB,UAaI,cAACD,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACS,GAAI,GAAI1I,GAAI,CAAEoI,QAAS,OAAQtI,eAAgB,SAAUoI,GAAI,GAAlF,SACI,cAACrI,EAAA,EAAD,CAAMmI,MAAI,EAACU,GAAI,EAAf,SACI,cAAC,IAAD,CAAYZ,UAAU,SAASD,QAAQ,KAAK7H,GAAI,CAAEiJ,MAAO/H,EAAMqH,QAAQC,QAAQC,MAA/E,gCAKR,cAAC5I,EAAA,EAAD,CACImI,MAAI,EACJC,WAAS,EACTS,GAAI,KACJJ,GAAI,GACJ8B,GAAI,GACJpK,GAAI,CACAoI,QAAS,OACTtI,eAAgB,SAChB0K,WAAY,EACZC,YAAa,EACbC,aAAc,EACd3J,YAAaG,EAAMqH,QAAQC,QAAQmC,MACnC7J,aAAc,EACdD,UAAW,kCAdnB,SAiBI,cAACmK,EAAA,EAAD,CAAgBhL,GAAI,CAAEE,MAAO,IAAKY,aAAc,GAAhD,SACI,eAACmK,EAAA,EAAD,CAAOjL,GAAI,CAAEE,MAAO,aAAe,aAAW,eAA9C,UACI,cAACgL,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYnC,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAAzD,oBAIJ,cAACsD,EAAA,EAAD,UACI,cAAC,IAAD,CAAYnC,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAAzD,2BAIJ,cAACsD,EAAA,EAAD,UACI,cAAC,IAAD,CAAYnC,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAAzD,sBAIJ,cAACsD,EAAA,EAAD,UACI,cAAC,IAAD,CAAYnC,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAAzD,uBAIJ,cAACsD,EAAA,EAAD,UACI,eAACvL,EAAA,EAAD,CAAMoI,WAAS,EAAf,UACI,cAACpI,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAI,EAAGtI,GAAI,CAAEmI,GAAI,IAA5B,SACI,cAAC,IAAD,CAAYc,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAAzD,mBAIJ,cAACjI,EAAA,EAAD,CAAMmI,MAAI,EAACM,GAAI,EAAf,SACI,cAACuC,EAAA,EAAD,CACI7K,GAAI,CAAEmI,GAAI,GAAKc,MAAO/H,EAAMqH,QAAQC,QAAQC,MAC5CqC,MACI,cAAC,IAAD,CACI9K,GAAI,CACAiJ,MAAO/H,EAAMqH,QAAQC,QAAQC,MAFrC,wJAHR,SAaI,cAAC,IAAD,aAKhB,cAAC2C,EAAA,EAAD,UACI,cAAC,IAAD,CAAYnC,MAAO/H,EAAMqH,QAAQC,QAAQC,KAAMX,UAAU,SAAzD,+BAMXpE,GAAa2H,KAAI,SAACC,EAAOC,GAAR,OACd,cAACC,EAAA,EAAD,UACI,eAACL,EAAA,EAAD,CAAsBnL,GAAI,CAAE,mCAAoC,CAAEY,OAAQ,IAA1E,UACI,cAACwK,EAAA,EAAD,UACI,cAAC,IAAD,CAAwBtD,UAAU,SAAlC,SACKwD,EAAMY,gBADMX,KAIrB,cAACH,EAAA,EAAD,UACI,eAAC,IAAD,CAAwBtD,UAAU,SAAlC,WAC0B,KAApBwD,EAAMI,YAAqB,MAAMjK,oBAAeC,EAAW,CACzD4E,sBAAuB,IAF/B,MAAiBiF,KAOrB,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAwBtD,UAAU,SAAlC,UACMwD,EAAMK,OAASnJ,GAAkBf,oBAAeC,EAAW,CACzD4E,sBAAuB,KAFdiF,KAMrB,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAwBtD,UAAU,SAAlC,UACMwD,EAAMM,UAAYpJ,GAAkBf,oBAAeC,EAAW,CAC5D4E,sBAAuB,KAFdiF,KAMrB,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAwBtD,UAAU,SAAlC,SACI,cAAC,IAAD,CAAgB+D,cAAc,IAAIC,OAAO,MAAMC,SAAS,IAAxD,SACKT,EAAMU,WAFET,KAMrB,cAACH,EAAA,EAAD,UACI,eAACvL,EAAA,EAAD,CAAMmI,MAAI,EAACC,WAAS,EAACK,GAAI,GAAItI,GAAI,CAAEE,MAAO,KAA1C,UACI,cAACsJ,EAAA,EAAD,CACI5F,QAASI,GACTqF,QAAS,WACLnG,GAAoBoI,EAAMM,WAC1BxI,GAAiBkI,EAAMK,QACvB7F,KAlmC9BZ,IAAS,GAomCqBkB,GAAgBmF,IAEpBvL,GAAI,CACA0J,SAAU,GACVxJ,MAAO,GACPD,OAAQ,GACRgJ,MAAO/H,EAAMqH,QAAQoB,KAAK,KAC1BhJ,QAASO,EAAMqH,QAAQC,QAAQC,KAC/BmB,gBAAiB1I,EAAMqH,QAAQC,QAAQC,MAf/C,sBAoBA,cAACe,EAAA,EAAD,CACI5F,QAASM,GACTmF,QAAS,WACLnG,GAAoBoI,EAAMM,WAC1B5F,KAvnC9BhB,IAAS,GAynCqBoB,GAAgBmF,IAEpBvL,GAAI,CACAqI,GAAI,EACJqB,SAAU,GACVxJ,MAAO,GACPD,OAAQ,GACRgJ,MAAO/H,EAAMqH,QAAQoB,KAAK,KAC1BhJ,QAASO,EAAMqH,QAAQC,QAAQC,KAC/BmB,gBAAiB1I,EAAMqH,QAAQC,QAAQC,MAf/C,0BAzDG8C,IADHA,uBC3oCrCY,UAXI,WAEf,OADAvM,cAEI,cAACC,EAAA,EAAD,CAAMoI,WAAS,EAACkC,QAASiC,IAAzB,SACI,cAACvM,EAAA,EAAD,CAAMmI,MAAI,EAACU,GAAI,GAAf,SACI,cAAC,EAAD","file":"static/js/14.00f7f7c1.chunk.js","sourcesContent":["// project imports\nimport Stax from '../../assets/StaxLogoOnly.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst StaxLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" alignContent=\"center\" sx={{ height: 100 }}>\n                <img height={80} width=\"height\" src={Stax} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default StaxLogo;\n","import React, { useState, useEffect } from 'react';\n\n// material-ui\nimport SimpleDateTime from 'react-simple-timestamp-to-date';\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Button,\n    Box,\n    Card,\n    Grid,\n    Table,\n    TableContainer,\n    TextField,\n    Paper,\n    Tooltip,\n    TableHead,\n    Typography,\n    TableBody,\n    TableRow,\n    TableCell,\n    Modal\n} from '@mui/material';\n// project imports\nimport StaxLogo from './staxlogo';\nimport InfoIcon from '@mui/icons-material/Info';\nimport {\n    ggetStaxBalance,\n    withdrawAmount,\n    withdrawAmountSuper,\n    ggetOwnBalance,\n    stakeStax,\n    stakeHas,\n    stakeStaxSuper,\n    stakeHasSuper\n} from 'components/wallet/sharesABI';\nimport BigNumber from 'bignumber.js';\nimport Web3 from 'web3';\nimport { LoadingButton } from '@mui/lab';\nimport LayersIcon from '@mui/icons-material/Layers';\nimport XsStaxLogo from './xsStaxLogo';\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 300,\n    bgcolor: 'background.paper',\n    border: '2px solid #000000',\n    boxShadow: 24,\n    borderRadius: 7,\n    borderColor: 'black',\n    p: 3\n};\nconst StakingCard = () => {\n    const theme = useTheme();\n    const [balance, setBalance] = useState(0);\n    const balanceToNumber = new BigNumber(balance);\n    const balanceFormat = balanceToNumber.decimalPlaces(2);\n    const balanceFormatted = balanceFormat.toLocaleString(undefined);\n    const [preAmount, setPreAmount] = useState(0);\n    const [stakeAmount, setStakeAmount] = useState(0);\n    const stakeAmountF = Web3.utils.toWei(stakeAmount.toString(), 'ether');\n    const stakeAmountFormatted = Web3.utils.toBN(stakeAmountF);\n    const [stakeName, setStakeName] = useState(0);\n    const Number18Decimals = 1000000000000000000;\n    const [sharesBalance, setSharesBalance] = useState(0);\n    const [boostedSharesBalance, setBoostedSharesBalance] = useState(0);\n    const [stakesList, setStakesList] = useState([[], []]);\n    const [stakesSuperList, setStakesSuperList] = useState([[], []]);\n    const [currentClaimable, setCurrentClaimable] = useState(0);\n    const [currentStaked, setCurrentStaked] = useState(0);\n    const [withdrawSum, setWithdrawSum] = useState(0);\n    const withdrawSumFormatted = Web3.utils.toWei(withdrawSum.toString(), 'ether');\n    const withdrawAFormatted = Web3.utils.toBN(withdrawSumFormatted);\n    const [staked, stakedd] = stakesList;\n    const [stakedSuper, stakeddSuper] = stakesSuperList;\n    // POP - UPS\n    const [loading, setLoading] = React.useState(false);\n    const [loading2, setLoading2] = React.useState(false);\n    const [loading3, setLoading3] = React.useState(false);\n    const [loading4, setLoading4] = React.useState(false);\n    const [loading5, setLoading5] = React.useState(false);\n    const [loading6, setLoading6] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [open2, setOpen2] = React.useState(false);\n    const [open4, setOpen4] = React.useState(false);\n    const [open5, setOpen5] = React.useState(false);\n    const [open6, setOpen6] = React.useState(false);\n    const [open7, setOpen7] = React.useState(false);\n    const handleClose = () => setOpen(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose2 = () => setOpen2(false);\n    const handleOpen2 = () => setOpen2(true);\n    const handleClose4 = () => setOpen4(false);\n    const handleOpen4 = () => setOpen4(true);\n    const handleClose5 = () => setOpen5(false);\n    const handleOpen5 = () => setOpen5(true);\n    const handleClose6 = () => setOpen6(false);\n    const handleOpen6 = () => setOpen6(true);\n    const handleClose7 = () => setOpen7(false);\n    const handleOpen7 = () => setOpen7(true);\n    const handleLoadingFalse = () => setLoading(false);\n    const handleLoadingTrue = () => setLoading(true);\n    const handleLoadingFalse2 = () => setLoading2(false);\n    const handleLoadingTrue2 = () => setLoading2(true);\n    const handleLoadingFalse3 = () => setLoading3(false);\n    const handleLoadingTrue3 = () => setLoading3(true);\n    const handleLoadingFalse4 = () => setLoading4(false);\n    const handleLoadingTrue4 = () => setLoading4(true);\n    const handleLoadingFalse5 = () => setLoading5(false);\n    const handleLoadingTrue5 = () => setLoading5(true);\n    const handleLoadingFalse6 = () => setLoading6(false);\n    const handleLoadingTrue6 = () => setLoading6(true);\n    const amountGreaterThanZero = ({ amount }) => amount;\n    const updateStakeAmount = (event, newValue) => {\n        setStakeAmount(newValue);\n    };\n    //  WITHDRAWING INDEX\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const myAPY = (9.125 + sharesBalance * 4.5625).toLocaleString(undefined, { maximumFractionDigits: 2 });\n    const myAPY2 = (9.125 + boostedSharesBalance * 4.5625).toLocaleString(undefined, { maximumFractionDigits: 2 });\n    //  FETCHING BLOCKCHAIN DATA\n    const fetchStaxBalance = async () => {\n        ggetStaxBalance()\n            .then((balance) => {\n                setBalance(balance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStakesBalance = async () => {\n        stakeHas(true)\n            .then((balancee) => {\n                setStakesList(balancee);\n                console.log(balancee);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchStakesSuperBalance = async () => {\n        stakeHasSuper(true)\n            .then((balancee) => {\n                setStakesSuperList(balancee);\n                console.log(balancee);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchSharesBalance = async () => {\n        ggetOwnBalance()\n            .then((balance) => {\n                if (balance > 30) {\n                    setBoostedSharesBalance(30);\n                    setSharesBalance(15);\n                } else if (balance > 15) {\n                    setSharesBalance(15);\n                    setBoostedSharesBalance(balance);\n                } else {\n                    setSharesBalance(balance);\n                    setBoostedSharesBalance(balance);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    useEffect(() => {\n        async function load() {\n            fetchStaxBalance();\n            stakeHas();\n            fetchSharesBalance();\n            fetchStakesBalance();\n            fetchStakesSuperBalance();\n        }\n        load();\n    }, []);\n    return (\n        <>\n            <Modal\n                open={open}\n                onBackdropClick={() => {\n                    handleClose();\n                    handleLoadingFalse3();\n                    handleLoadingFalse5();\n                }}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: 90% penalty is applied to the `withdraw amount` to all pre-mature stakes.\n                    </Typography>\n                    <Grid item container sx={{ mb: 1, mt: 2, display: 'flex', justifyContent: 'center' }}>\n                        <Grid item container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                                Rewards:{' '}\n                                {(currentClaimable / Number18Decimals).toLocaleString(undefined, {\n                                    maximumFractionDigits: 2\n                                })}\n                            </Typography>\n                            <XsStaxLogo />\n                        </Grid>\n                        <Grid item container sx={{ mt: 1, display: 'flex', justifyContent: 'center' }}>\n                            <Typography variant=\"h5\" textAlign=\"center\" sx={{ ml: 2 }} component=\"h2\">\n                                Staked:{' '}\n                                {(currentStaked / Number18Decimals).toLocaleString(undefined, {\n                                    maximumFractionDigits: 2\n                                })}\n                            </Typography>\n                            <XsStaxLogo />\n                        </Grid>\n                    </Grid>\n                    <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                        <Grid\n                            item\n                            container\n                            xs=\"auto\"\n                            sx={{ border: 2, borderColor: theme.palette.success.main, borderRadius: 2 }}\n                            lg=\"auto\"\n                        >\n                            <TextField\n                                onChange={(e) => setWithdrawSum(e.target.value)}\n                                inputProps={{ style: { width: 100, textAlign: 'center', color: 'white' } }}\n                                id=\"standard-basic\"\n                                value={withdrawSum}\n                                variant=\"standard\"\n                                color=\"success\"\n                                label=\"Enter amount:\"\n                            />\n                            <Button\n                                variant=\"text\"\n                                onClick={() => setWithdrawSum(Web3.utils.fromWei(currentStaked))}\n                                size=\"small\"\n                                sx={{ color: theme.palette.success.main, borderColor: theme.palette.success.main }}\n                            >\n                                Max\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid item sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <LoadingButton\n                            loading={loading5}\n                            onClick={() => {\n                                handleLoadingTrue5();\n                                withdrawAmount(withdrawAFormatted, currentIndex).then(() => {\n                                    handleLoadingFalse5();\n                                    setOpen(false);\n                                    handleLoadingFalse3();\n                                    fetchStakesBalance();\n                                });\n                            }}\n                            sx={{\n                                mt: 2.5,\n                                fontSize: 15,\n                                width: 80,\n                                height: 30,\n                                color: theme.palette.grey[900],\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main\n                            }}\n                        >\n                            Withdraw\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open7}\n                onBackdropClick={() => {\n                    handleClose7();\n                    handleLoadingFalse3();\n                    handleLoadingFalse5();\n                }}\n                onClose={handleClose7}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: 90% penalty is applied to the `withdraw amount` to all pre-mature stakes.\n                    </Typography>\n                    <Grid item container sx={{ mb: 1, mt: 2, display: 'flex', justifyContent: 'center' }}>\n                        <Grid item container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                                Rewards:{' '}\n                                {(currentClaimable / Number18Decimals).toLocaleString(undefined, {\n                                    maximumFractionDigits: 2\n                                })}\n                            </Typography>\n                            <XsStaxLogo />\n                        </Grid>\n                        <Grid item container sx={{ mt: 1, display: 'flex', justifyContent: 'center' }}>\n                            <Typography variant=\"h5\" textAlign=\"center\" sx={{ ml: 2 }} component=\"h2\">\n                                Staked:{' '}\n                                {(currentStaked / Number18Decimals).toLocaleString(undefined, {\n                                    maximumFractionDigits: 2\n                                })}\n                            </Typography>\n                            <XsStaxLogo />\n                        </Grid>\n                    </Grid>\n                    <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                        <Grid\n                            item\n                            container\n                            xs=\"auto\"\n                            sx={{ border: 2, borderColor: theme.palette.success.main, borderRadius: 2 }}\n                            lg=\"auto\"\n                        >\n                            <TextField\n                                onChange={(e) => setWithdrawSum(e.target.value)}\n                                inputProps={{ style: { width: 100, textAlign: 'center', color: 'white' } }}\n                                id=\"standard-basic\"\n                                value={withdrawSum}\n                                variant=\"standard\"\n                                color=\"success\"\n                                label=\"Enter amount:\"\n                            />\n                            <Button\n                                variant=\"text\"\n                                onClick={() => setWithdrawSum(Web3.utils.fromWei(currentStaked))}\n                                size=\"small\"\n                                sx={{ color: theme.palette.success.main, borderColor: theme.palette.success.main }}\n                            >\n                                Max\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid item sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <LoadingButton\n                            loading={loading5}\n                            onClick={() => {\n                                handleLoadingTrue5();\n                                withdrawAmount(withdrawAFormatted, currentIndex).then(() => {\n                                    handleLoadingFalse5();\n                                    setOpen7(false);\n                                    handleLoadingFalse3();\n                                    fetchStakesBalance();\n                                });\n                            }}\n                            sx={{\n                                mt: 2.5,\n                                fontSize: 15,\n                                width: 80,\n                                height: 30,\n                                color: theme.palette.grey[900],\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main\n                            }}\n                        >\n                            Withdraw\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open4}\n                onClose={handleClose4}\n                onBackdropClick={() => {\n                    handleClose4();\n                    handleLoadingFalse2();\n                    handleLoadingFalse();\n                }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: Your stake will be in `pre-mature` phase for the first 45 days and will face heavy penatlies in case of\n                        any withdraws / claims (90% fee on the staked, 5% on the rewards and minus 1 SHARESBONUS per Transaction).\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <LoadingButton\n                            loading={loading2}\n                            onClick={() => {\n                                handleLoadingTrue2();\n                                stakeStax(stakeAmountFormatted, stakeName).then(() => {\n                                    handleClose4();\n                                    setPreAmount(0);\n                                    handleLoadingFalse2();\n                                    handleLoadingFalse();\n                                    fetchStakesBalance();\n                                    fetchStaxBalance();\n                                });\n                            }}\n                            sx={{\n                                fontSize: 18,\n                                minHeight: 45,\n                                minWidth: 140,\n                                mt: 3,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Stake\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open5}\n                onClose={handleClose5}\n                onBackdropClick={() => {\n                    handleClose5();\n                    handleLoadingFalse6();\n                    handleLoadingFalse2();\n                    handleLoadingFalse();\n                }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: Your stake will be in `pre-mature` phase for the first 1 year. You will NOT be able to withdraw any\n                        amount 365 days after creating the stake. However, claiming rewards is possible and 5% fee is applied on each claim\n                        only during the pre-mature phase. That amount is burnt forever. Each claim/withdraw transaction decreases the\n                        stake`s SHARESBONUS by 1.\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <LoadingButton\n                            loading={loading2}\n                            onClick={() => {\n                                handleLoadingTrue2();\n                                stakeStaxSuper(stakeAmountFormatted, stakeName).then(() => {\n                                    handleClose5();\n                                    handleLoadingFalse2();\n                                    handleLoadingFalse();\n                                    fetchStakesBalance();\n                                    fetchStaxBalance();\n                                });\n                            }}\n                            sx={{\n                                fontSize: 18,\n                                minHeight: 45,\n                                minWidth: 140,\n                                mt: 3,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Boost\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open2}\n                onClose={handleClose2}\n                onBackdropClick={() => {\n                    handleClose2();\n                    handleLoadingFalse5();\n                    handleLoadingFalse4();\n                }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: Each claim reduces the SHARESBONUS by 1. Therefore, the stake APR will be reduced by ~4,56% on each\n                        claim/withdraw.\n                    </Typography>\n                    <Grid item container sx={{ display: 'flex', my: 2, justifyContent: 'center' }}>\n                        <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\" key={currentIndex}>\n                            Amount to be claimed:{' '}\n                            {(currentClaimable / Number18Decimals).toLocaleString(undefined, {\n                                maximumFractionDigits: 2\n                            })}\n                        </Typography>\n                        <XsStaxLogo />\n                    </Grid>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <LoadingButton\n                            loading={loading5}\n                            onClick={() => {\n                                handleLoadingTrue5();\n                                withdrawAmount(0, currentIndex)\n                                    .then(() => {\n                                        handleLoadingFalse5();\n                                        setOpen2(false);\n                                        handleLoadingFalse4();\n                                        fetchStakesBalance();\n                                    })\n                                    .catch(() => {\n                                        handleLoadingFalse5();\n                                    });\n                            }}\n                            sx={{\n                                mt: 1,\n                                fontSize: 16,\n                                minHeight: 30,\n                                minWidth: 80,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Claim\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Modal\n                open={open6}\n                onClose={handleClose6}\n                onBackdropClick={() => {\n                    handleClose6();\n                    handleLoadingFalse5();\n                    handleLoadingFalse4();\n                }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\">\n                        Important: Each claim reduces the SHARESBONUS by 1. Therefore, the stake APR will be reduced by ~4,56% on each\n                        claim/withdraw.\n                    </Typography>\n                    <Grid item container sx={{ display: 'flex', my: 2, justifyContent: 'center' }}>\n                        <Typography variant=\"h5\" textAlign=\"center\" component=\"h2\" key={currentIndex}>\n                            Amount to be claimed:{' '}\n                            {(currentClaimable / Number18Decimals).toLocaleString(undefined, {\n                                maximumFractionDigits: 2\n                            })}\n                        </Typography>\n                        <XsStaxLogo />\n                    </Grid>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <LoadingButton\n                            loading={loading5}\n                            onClick={() => {\n                                handleLoadingTrue5();\n                                withdrawAmountSuper(0, currentIndex).then(() => {\n                                    handleLoadingFalse5();\n                                    setOpen2(false);\n                                    handleLoadingFalse4();\n                                    fetchStakesBalance();\n                                });\n                            }}\n                            sx={{\n                                mt: 1,\n                                fontSize: 16,\n                                minHeight: 30,\n                                minWidth: 80,\n                                bgcolor: theme.palette.success.main,\n                                backgroundColor: theme.palette.success.main,\n                                color: theme.palette.grey[900]\n                            }}\n                        >\n                            Claim\n                        </LoadingButton>\n                    </Grid>\n                </Box>\n            </Modal>\n            <Grid item container spacing={2} xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 7 }}>\n                    <Typography textAlign=\"center\" variant=\"h1\" color={theme.palette.grey[50]}>\n                        Stake\n                    </Typography>\n                    <LayersIcon color=\"success\" fontSize=\"large\" sx={{ mt: 2, ml: 1 }} />\n                </Grid>\n                <Grid item container lg={3.85} md={7} xs={11} sm={6.5} sx={{ display: 'flex', justifyContent: 'center', mt: 6 }}>\n                    <Card\n                        sx={{\n                            maxWidth: 1900,\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                        }}\n                    >\n                        <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                            <Grid item sx={{ backgroundColor: theme.palette.grey[900], mt: 2 }} lg={3.6} xs=\"auto\">\n                                <StaxLogo />\n                            </Grid>\n                            <Grid item lg=\"auto\" xs=\"auto\" sx={{ ml: 0.8, mt: 5 }}>\n                                <Typography variant=\"h2\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Stake\n                                </Typography>\n                            </Grid>\n                            <Grid item lg=\"auto\" xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 0.7, mt: 5 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    STAX\n                                </Typography>\n                            </Grid>\n                            <Grid item lg={1} xs=\"auto\" sx={{ mt: 5, pt: 0.2 }}>\n                                <Tooltip\n                                    sx={{ color: theme.palette.success.main }}\n                                    title={\n                                        <Typography\n                                            sx={{\n                                                color: theme.palette.success.main\n                                            }}\n                                        >\n                                            Stakes have name, staked amount and SHARESBONUS. Users choose the name and tokens to be staked.\n                                            When creating a stake, the smart contract will get the user`s current sSTX balance and save it\n                                            as SHARESBONUS in the stake`s properties.\n                                        </Typography>\n                                    }\n                                >\n                                    <InfoIcon />\n                                </Tooltip>\n                            </Grid>\n                            <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    container\n                                    xs=\"auto\"\n                                    sx={{ border: 2, borderColor: theme.palette.success.main, borderRadius: 2 }}\n                                    lg=\"auto\"\n                                >\n                                    <TextField\n                                        onChange={(e) => setStakeName(e.target.value)}\n                                        inputProps={{ style: { width: 100, textAlign: 'center', color: 'white' } }}\n                                        id=\"standard-basic\"\n                                        value={stakeName}\n                                        variant=\"standard\"\n                                        color=\"success\"\n                                        label=\"Enter stake name:\"\n                                    />\n                                    <Button\n                                        variant=\"text\"\n                                        onClick={() => setStakeName('Default')}\n                                        size=\"small\"\n                                        sx={{ color: theme.palette.success.main, borderColor: theme.palette.success.main }}\n                                    >\n                                        Default\n                                    </Button>\n                                </Grid>\n                                <Grid item container xs={12} sx={{ display: 'flex', mt: 0.7, justifyContent: 'center' }}>\n                                    <Typography variant=\"h5\" textAlign=\"center\">\n                                        Enter stake name\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    container\n                                    xs=\"auto\"\n                                    sx={{\n                                        border: 2,\n                                        borderColor: theme.palette.success.main,\n                                        borderRadius: 2,\n                                        display: 'flex',\n                                        justifyContent: 'center'\n                                    }}\n                                    lg=\"auto\"\n                                >\n                                    <TextField\n                                        onChange={(e) => setPreAmount(e.target.value)}\n                                        inputProps={{ style: { width: 100, textAlign: 'center', color: 'white' } }}\n                                        id=\"standard-basic\"\n                                        value={preAmount}\n                                        variant=\"standard\"\n                                        color=\"success\"\n                                        label=\"Enter amount:\"\n                                    />\n                                    <Button\n                                        variant=\"text\"\n                                        onClick={() => setPreAmount(balanceFormatted)}\n                                        size=\"small\"\n                                        sx={{ color: theme.palette.success.main, borderColor: theme.palette.success.main }}\n                                    >\n                                        Max\n                                    </Button>\n                                </Grid>\n                                <Grid item container xs={12} sx={{ mt: 0.7, display: 'flex', justifyContent: 'center' }}>\n                                    <Typography variant=\"h5\" textAlign=\"left\">\n                                        Balance: {balanceFormatted}\n                                    </Typography>\n                                    <XsStaxLogo />\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ mt: 5, display: 'flex', justifyContent: 'center' }}>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                        SHARESBONUS:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\">\n                                    <Typography variant=\"h4\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                        {sharesBalance} / {boostedSharesBalance}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs=\"auto\" sx={{ ml: 0.7, mt: -0.3 }}>\n                                    <Tooltip\n                                        sx={{ color: theme.palette.success.main }}\n                                        title={\n                                            <Typography\n                                                sx={{\n                                                    color: theme.palette.success.main\n                                                }}\n                                            >\n                                                SHARESBONUS - shows your current sSTX balance. Each sSTX in your wallet, increases your APY\n                                                by 5%. An user may hold unlimited amount of sSTX but the SHARESBONUS is limited to 15 when\n                                                opening a regular stake or 30 when opening a Boosted Stake. Regular Stake maximum APR:\n                                                77.56%. Boosted Stake maximum APR: 146%.\n                                            </Typography>\n                                        }\n                                    >\n                                        <InfoIcon />\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n                            <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                <Grid\n                                    item\n                                    sx={{\n                                        backgroundColor: theme.palette.grey[900],\n                                        mt: 5,\n                                        mb: 3\n                                    }}\n                                    lg=\"auto\"\n                                >\n                                    <LoadingButton\n                                        loading={loading}\n                                        onClick={() => {\n                                            setStakeAmount(preAmount);\n                                            handleLoadingTrue();\n                                            handleOpen4();\n                                        }}\n                                        sx={{\n                                            fontSize: 18,\n                                            minHeight: 30,\n                                            minWidth: 100,\n                                            bgcolor: theme.palette.success.main,\n                                            backgroundColor: theme.palette.success.main,\n                                            color: theme.palette.grey[900]\n                                        }}\n                                    >\n                                        Stake\n                                    </LoadingButton>\n                                    <LoadingButton\n                                        loading={loading}\n                                        onClick={() => {\n                                            setStakeAmount(preAmount);\n                                            handleLoadingTrue();\n                                            handleOpen5();\n                                        }}\n                                        sx={{\n                                            fontSize: 18,\n                                            minHeight: 30,\n                                            minWidth: 100,\n                                            ml: 2,\n                                            bgcolor: theme.palette.success.main,\n                                            backgroundColor: theme.palette.success.main,\n                                            color: theme.palette.grey[900]\n                                        }}\n                                    >\n                                        Boost\n                                    </LoadingButton>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n                <Grid item container lg={3.85} xs={11} md={7} sm={6.5} sx={{ display: 'flex', justifyContent: 'center', mt: 6 }}>\n                    <Card\n                        sx={{\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)',\n                            mb: 1\n                        }}\n                    >\n                        <Grid\n                            container\n                            sx={{\n                                backgroundColor: theme.palette.grey[900],\n                                mt: 3,\n                                display: 'flex',\n                                justifyContent: 'center'\n                            }}\n                        >\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    APY /\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    REWARDS RATE\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs={10}>\n                                <Typography variant=\"h5\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    When creating a stake, the contract will save the staker`s` sSTX balance as SHARESBONUS. 1 SHARESBONUS +\n                                    ~4.56% APY.\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Initial APY:\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    9.125%\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Current APR:\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Typography variant=\"h3\" sx={{ my: 4, ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    {myAPY}% / {myAPY2}%\n                                </Typography>\n                            </Grid>\n                            <Grid item xs=\"auto\" sx={{ my: 4 }}>\n                                <Tooltip\n                                    sx={{ color: theme.palette.success.main }}\n                                    title={\n                                        <Typography\n                                            sx={{\n                                                color: theme.palette.success.main\n                                            }}\n                                        >\n                                            The current APR is calculed by following the following formula: 9.125% + SHARESBONUS * 4.5625%\n                                            where SHARESBONUS is limited to 15 (when choosing `Regular Stake`) or 30 when opening a `Boosted\n                                            Stake`. Therefore, the maximum APR of a `Regular Stake` is 77.56% and the maximum APR of a\n                                            `Boosted Stake` is 146%.\n                                        </Typography>\n                                    }\n                                >\n                                    <InfoIcon />\n                                </Tooltip>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <Card\n                        sx={{\n                            width: '100%',\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)',\n                            mb: 1\n                        }}\n                    >\n                        <Grid item container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item lg=\"auto\">\n                                <Typography variant=\"h2\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Regular &\n                                </Typography>\n                            </Grid>\n                            <Grid item lg=\"auto\">\n                                <Typography variant=\"h2\" sx={{ my: 4, ml: 0.6 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    Boosted Stake\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs={4} lg={5} sm={4}>\n                                <Typography variant=\"h4\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Maximum APR: 77.56%\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={4} lg={5} sm={4}>\n                                <Typography variant=\"h4\" sx={{ ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    Maximum APR: 146%\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                            <Grid item xs={4} lg={5.5} sm={4}>\n                                <Typography variant=\"h4\" sx={{ my: 4 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                    Pre-mature phase: 45 days\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={4} lg={5.5} sm={4}>\n                                <Typography variant=\"h4\" sx={{ my: 4, ml: 1 }} color={theme.palette.success.main} textAlign=\"center\">\n                                    Pre-mature phase: 1 year\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n            </Grid>\n            <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 5, mb: 20 }}>\n                <Grid\n                    item\n                    container\n                    lg={3.95}\n                    md={7}\n                    xs={12}\n                    sm={8}\n                    sx={{\n                        mt: 5,\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <Grid item container lg={12} sx={{ display: 'flex', mb: 2, justifyContent: 'center' }}>\n                        <Grid item lg={6}>\n                            <Typography textAlign=\"center\" variant=\"h2\">\n                                Regular Stakes\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        lg={11.5}\n                        md={12}\n                        xs={11}\n                        sm={10}\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            mx: 1,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                        }}\n                    >\n                        <TableContainer sx={{ width: 330, borderRadius: 5 }}>\n                            <Table sx={{ width: 'max-width' }} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                NAME\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                SHARESBONUS\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                STAKED\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                REWARDS\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Grid container>\n                                                <Grid item xs={6} sx={{ mt: 0.9 }}>\n                                                    <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                        TUM\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Tooltip\n                                                        sx={{ mt: 0.6, color: theme.palette.success.main }}\n                                                        title={\n                                                            <Typography\n                                                                sx={{\n                                                                    color: theme.palette.success.main\n                                                                }}\n                                                            >\n                                                                TUM stands for Time Until Mature. Each stake will face heavy penalty (90% on\n                                                                the staked balane) if the stake is ended before the 45th day.\n                                                            </Typography>\n                                                        }\n                                                    >\n                                                        <InfoIcon />\n                                                    </Tooltip>\n                                                </Grid>\n                                            </Grid>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                ACTIVITIES\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                {stakedd.map((total, index) => (\n                                    <TableBody key={index}>\n                                        <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {total.stakename}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.sharesbonus * 4.56 + 9.12).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                    %\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.amount / Number18Decimals).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.claimable / Number18Decimals).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    <SimpleDateTime dateSeparator=\"/\" format=\"MYD\" showTime=\"0\">\n                                                        {total.created}\n                                                    </SimpleDateTime>\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Grid item container keyy={index} xs={12} sx={{ width: 170 }}>\n                                                    <LoadingButton\n                                                        loading={loading3}\n                                                        onClick={() => {\n                                                            setCurrentClaimable(total.claimable);\n                                                            setCurrentStaked(total.amount);\n                                                            handleLoadingTrue3();\n                                                            handleOpen();\n                                                            setCurrentIndex(index);\n                                                        }}\n                                                        sx={{\n                                                            fontSize: 15,\n                                                            width: 80,\n                                                            height: 23,\n                                                            color: theme.palette.grey[900],\n                                                            bgcolor: theme.palette.success.main,\n                                                            backgroundColor: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Withdraw\n                                                    </LoadingButton>\n                                                    <LoadingButton\n                                                        loading={loading4}\n                                                        onClick={() => {\n                                                            setCurrentClaimable(total.claimable);\n                                                            handleLoadingTrue4();\n                                                            handleOpen2();\n                                                            setCurrentIndex(index);\n                                                        }}\n                                                        sx={{\n                                                            ml: 1,\n                                                            fontSize: 15,\n                                                            width: 80,\n                                                            height: 23,\n                                                            color: theme.palette.grey[900],\n                                                            bgcolor: theme.palette.success.main,\n                                                            backgroundColor: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Claim\n                                                    </LoadingButton>\n                                                </Grid>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                ))}\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n                <Grid\n                    item\n                    container\n                    lg={3.95}\n                    xs={12}\n                    md={7}\n                    sm={7.4}\n                    sx={{\n                        mt: 5,\n                        display: 'flex',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <Grid item container lg={12} sx={{ display: 'flex', justifyContent: 'center', mb: 2 }}>\n                        <Grid item lg={6}>\n                            <Typography textAlign=\"center\" variant=\"h2\" sx={{ color: theme.palette.success.main }}>\n                                Boosted Stakes\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        lg={11.5}\n                        xs={11}\n                        md={12}\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            borderLeft: 1,\n                            borderRight: 1,\n                            borderBottom: 3,\n                            borderColor: theme.palette.success.light,\n                            borderRadius: 5,\n                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                        }}\n                    >\n                        <TableContainer sx={{ width: 330, borderRadius: 5 }}>\n                            <Table sx={{ width: 'max-width' }} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                NAME\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                SHARESBONUS\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                STAKED\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                REWARDS\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Grid container>\n                                                <Grid item xs={6} sx={{ mt: 0.9 }}>\n                                                    <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                        TUM\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Tooltip\n                                                        sx={{ mt: 0.6, color: theme.palette.success.main }}\n                                                        title={\n                                                            <Typography\n                                                                sx={{\n                                                                    color: theme.palette.success.main\n                                                                }}\n                                                            >\n                                                                TUM stands for Time Until Mature. Each stake will face heavy penalty (90% on\n                                                                the staked balane) if the stake is ended before the 45th day.\n                                                            </Typography>\n                                                        }\n                                                    >\n                                                        <InfoIcon />\n                                                    </Tooltip>\n                                                </Grid>\n                                            </Grid>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography color={theme.palette.success.main} textAlign=\"center\">\n                                                ACTIVITIES\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                {stakeddSuper.map((total, index) => (\n                                    <TableBody key={index}>\n                                        <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {total.stakenamesuper}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.sharesbonus * 4.56 + 9.12).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                    %\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.amount / Number18Decimals).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    {(total.claimable / Number18Decimals).toLocaleString(undefined, {\n                                                        maximumFractionDigits: 2\n                                                    })}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography key={index} textAlign=\"center\">\n                                                    <SimpleDateTime dateSeparator=\"/\" format=\"MYD\" showTime=\"0\">\n                                                        {total.created}\n                                                    </SimpleDateTime>\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Grid item container xs={12} sx={{ width: 170 }}>\n                                                    <LoadingButton\n                                                        loading={loading3}\n                                                        onClick={() => {\n                                                            setCurrentClaimable(total.claimable);\n                                                            setCurrentStaked(total.amount);\n                                                            handleLoadingTrue3();\n                                                            handleOpen7();\n                                                            setCurrentIndex(index);\n                                                        }}\n                                                        sx={{\n                                                            fontSize: 15,\n                                                            width: 80,\n                                                            height: 23,\n                                                            color: theme.palette.grey[900],\n                                                            bgcolor: theme.palette.success.main,\n                                                            backgroundColor: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Withdraw\n                                                    </LoadingButton>\n                                                    <LoadingButton\n                                                        loading={loading4}\n                                                        onClick={() => {\n                                                            setCurrentClaimable(total.claimable);\n                                                            handleLoadingTrue4();\n                                                            handleOpen6();\n                                                            setCurrentIndex(index);\n                                                        }}\n                                                        sx={{\n                                                            ml: 1,\n                                                            fontSize: 15,\n                                                            width: 80,\n                                                            height: 23,\n                                                            color: theme.palette.grey[900],\n                                                            bgcolor: theme.palette.success.main,\n                                                            backgroundColor: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        Claim\n                                                    </LoadingButton>\n                                                </Grid>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                ))}\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default StakingCard;\n","import { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport StakingCard from './StakingCard';\n// ==============================|| TYPOGRAPHY ||============================== //\n\nconst Typography = () => {\n    useTheme();\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item lg={12}>\n                <StakingCard />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Typography;\n"],"sourceRoot":""}