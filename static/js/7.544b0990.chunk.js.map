{"version":3,"sources":["components/wallet/sharesABI.js","../node_modules/@mui/icons-material/ExpandMore.js","assets/BigStaxLogo.png","views/dashboard/Default/banner.js","views/dashboard/Default/TopTitle.js","views/dashboard/Default/smallDashboard.js","assets/Footer1.png","views/dashboard/Default/Footer1.js","assets/images/decentralized.png","views/dashboard/Default/declogo.js","views/dashboard/Default/Description.js","assets/images/StakingLogo.png","views/dashboard/Default/StakingLogo.js","views/dashboard/Default/StakingInfo.js","views/dashboard/Default/chart-data/bajaj-area-chart.js","views/dashboard/Default/BajajAreaChartCard.js","views/dashboard/Default/SharesInfo.js","assets/telegramlogo.png","views/dashboard/Default/telegram.js","views/dashboard/Default/Socials.js","assets/bsclogo.png","views/dashboard/Default/bsclogo.js","assets/metamasklogo.png","views/dashboard/Default/metamasklogo.js","views/dashboard/Default/partners.js","../node_modules/@mui/material/Accordion/AccordionContext.js","../node_modules/@mui/material/AccordionSummary/accordionSummaryClasses.js","../node_modules/@mui/material/AccordionSummary/AccordionSummary.js","../node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js","../node_modules/@mui/material/AccordionDetails/AccordionDetails.js","../node_modules/@mui/material/Accordion/accordionClasses.js","../node_modules/@mui/material/Accordion/Accordion.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","views/dashboard/Default/FAQ.js","views/dashboard/Default/index.js"],"names":["selectedAccount","erc20SharesContract","erc20StaxContract","erc20BusdContract","isInitialized","init","a","provider","window","ethereum","request","method","then","accounts","console","log","catch","err","on","web3","Web3","eth","net","getId","erc20Abi","constant","inputs","name","type","outputs","payable","stateMutability","internalType","components","Contract","ggetOwnBalance","methods","balanceOf","call","balance","utils","toWei","sharesTotalSupply","totalSupply","totalsupply","getSTXPrice","fromWei","getSTXPriceFull","stakeHas","hasStake","purchaseShares","value","PurchaseSHARES","send","from","stakeStax","value2","stakename","stake","approve","address","priceToApprove","ggetStaxBalance","ggetBUSDBalance","ggetTotalDividends","ggetTotalSTAXSupply","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","BannerComp","useTheme","Grid","justifyContent","alignContent","height","width","src","BigStaxLogo","alt","TopTitle","theme","MainCard","sx","maxWidth","backgroundColor","palette","grey","border","content","CardContent","container","item","Typography","variant","xs","md","sm","mt","lg","color","my","Button","size","mx","SmallDashboard","useState","setTotalSupply","sharesSupply","setSharesSupply","totalSupplyFormatted","BigNumber","decimalPlaces","toLocaleString","undefined","fetchTotalSupply","fetchSharesSupply","useEffect","load1","textAlign","spacing","Card","borderBottom","borderRadius","borderColor","success","dark","FooterFirst","Box","Footer1","DecLogo","Decentralized","Description","mb","borderLeft","main","StakingLogo","Staking","StakingInfo","display","borderRight","light","boxShadow","TextField","inputProps","style","id","chartData","options","chart","sparkline","enabled","dataLabels","stroke","curve","tooltip","fixed","x","show","y","title","marker","series","data","BajajAreaChartCard","navType","useSelector","state","customization","orangeDark","newSupportChart","colors","ApexCharts","exec","bgcolor","SharesInfo","ml","TelegramLogo","Telegram","Socials","BscLogo","Bsc","MetamaskLogo","Metamask","AccordionContext","React","getAccordionSummaryUtilityClass","slot","generateUtilityClass","accordionSummaryClasses","generateUtilityClasses","_excluded","AccordionSummaryRoot","styled","ButtonBase","overridesResolver","props","styles","root","ownerState","transition","duration","transitions","shortest","_extends","minHeight","padding","create","focusVisible","action","focus","disabled","opacity","disabledOpacity","cursor","disableGutters","expanded","AccordionSummaryContent","flexGrow","margin","AccordionSummaryExpandIconWrapper","expandIconWrapper","active","transform","AccordionSummary","inProps","ref","useThemeProps","children","className","expandIcon","focusVisibleClassName","onClick","other","_objectWithoutPropertiesLoose","toggle","classes","slots","composeClasses","useUtilityClasses","_jsxs","focusRipple","disableRipple","component","clsx","event","_jsx","getAccordionDetailsUtilityClass","AccordionDetailsRoot","AccordionDetails","getAccordionUtilityClass","accordionClasses","AccordionRoot","Paper","region","square","rounded","gutters","position","overflowAnchor","left","top","right","divider","marginTop","marginBottom","disabledBackground","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","Accordion","arr","childrenProp","defaultExpanded","expandedProp","onChange","TransitionComponent","Collapse","TransitionProps","useControlled","controlled","setExpandedState","handleChange","toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","summary","contextValue","Provider","in","timeout","role","FAQ","alligncontent","Dashboard","isLoading","setLoading"],"mappings":"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","file":"static/js/7.544b0990.chunk.js","sourcesContent":["// import NFTContractBuild from 'contracts/NFT.json';\nimport Web3 from 'web3';\n\nlet selectedAccount;\n\n// let nftContract;\nlet erc20SharesContract;\nlet erc20StaxContract;\nlet erc20BusdContract;\n\nlet isInitialized = false;\n\nexport const init = async () => {\n    const provider = window.ethereum;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    if (typeof provider !== 'undefined') {\n        provider\n            .request({ method: 'eth_requestAccounts' })\n            .then((accounts) => {\n                selectedAccount = accounts[0];\n                console.log(`Selected account is ${selectedAccount}`);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n        window.ethereum.on('accountsChanged', (accounts) => {\n            selectedAccount = accounts[0];\n            console.log(`Selected account changed to ${selectedAccount}`);\n        });\n    }\n\n    const web3 = new Web3(provider);\n\n    const networkId = await web3.eth.net.getId();\n\n    const erc20Abi = [\n        {\n            constant: true,\n            inputs: [\n                {\n                    name: '_owner',\n                    type: 'address'\n                }\n            ],\n            name: 'balanceOf',\n            outputs: [\n                {\n                    name: 'balance',\n                    type: 'uint256'\n                }\n            ],\n            payable: false,\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [],\n            name: '_getSoldSHARES',\n            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            constant: true,\n            inputs: [],\n            name: 'totalSupply',\n            outputs: [\n                {\n                    internalType: 'uint256',\n                    name: '',\n                    type: 'uint256'\n                }\n            ],\n            payable: false,\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'uint256',\n                    name: 'samount',\n                    type: 'uint256'\n                }\n            ],\n            name: 'PurchaseSHARES',\n            outputs: [],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {\n            inputs: [],\n            name: 'getSTXPrice',\n            outputs: [\n                {\n                    internalType: 'uint256',\n                    name: '',\n                    type: 'uint256'\n                }\n            ],\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'address',\n                    name: '_staker',\n                    type: 'address'\n                }\n            ],\n            name: 'hasStake',\n            outputs: [\n                {\n                    components: [\n                        {\n                            internalType: 'uint256',\n                            name: 'total_amount',\n                            type: 'uint256'\n                        },\n                        {\n                            components: [\n                                {\n                                    internalType: 'address',\n                                    name: 'user',\n                                    type: 'address'\n                                },\n                                {\n                                    internalType: 'string',\n                                    name: 'stakename',\n                                    type: 'string'\n                                },\n                                {\n                                    internalType: 'uint256',\n                                    name: 'amount',\n                                    type: 'uint256'\n                                },\n                                {\n                                    internalType: 'uint256',\n                                    name: 'since',\n                                    type: 'uint256'\n                                },\n                                {\n                                    internalType: 'uint256',\n                                    name: 'claimable',\n                                    type: 'uint256'\n                                },\n                                {\n                                    internalType: 'uint256',\n                                    name: 'sharesbonus',\n                                    type: 'uint256'\n                                }\n                            ],\n                            internalType: 'struct Stakeable.Stake[]',\n                            name: 'stakes',\n                            type: 'tuple[]'\n                        }\n                    ],\n                    internalType: 'struct Stakeable.StakingSummary',\n                    name: '',\n                    type: 'tuple'\n                }\n            ],\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'address',\n                    name: 'spender',\n                    type: 'address'\n                },\n                {\n                    internalType: 'uint256',\n                    name: 'amount',\n                    type: 'uint256'\n                }\n            ],\n            name: 'approve',\n            outputs: [\n                {\n                    internalType: 'bool',\n                    name: '',\n                    type: 'bool'\n                }\n            ],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'uint256',\n                    name: '_amount',\n                    type: 'uint256'\n                },\n                {\n                    internalType: 'string',\n                    name: '_stakename',\n                    type: 'string'\n                }\n            ],\n            name: 'stake',\n            outputs: [],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        }\n    ];\n\n    erc20SharesContract = new web3.eth.Contract(erc20Abi, '0xb08CE509caFb6660E4F7b951Fbb8ae63930a6aEE');\n    erc20StaxContract = new web3.eth.Contract(erc20Abi, '0xF224398d6d757142eDE2F6AFFa4837DBDa9C04CA');\n    erc20BusdContract = new web3.eth.Contract(erc20Abi, '0xd389253265dd6b85C47c410EC5fF0c6A383CE949');\n\n    isInitialized = true;\n};\nexport const ggetOwnBalance = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    return erc20SharesContract.methods\n        .balanceOf(selectedAccount)\n        .call()\n        .then((balance) => Web3.utils.toWei(balance, 'wei'));\n};\nexport const sharesTotalSupply = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    return erc20SharesContract.methods\n        .totalSupply()\n        .call()\n        .then((totalsupply) => Web3.utils.toWei(totalsupply, 'wei'));\n};\nexport const soldShares = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    // eslint-disable-next-line no-underscore-dangle\n    return (\n        // eslint-disable-next-line no-underscore-dangle\n        erc20SharesContract.methods\n            ._getSoldSHARES()\n            .call()\n            .then((sold) => Web3.utils.toWei(sold, 'wei'))\n    );\n};\nexport const getSTXPrice = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    // eslint-disable-next-line no-underscore-dangle\n    return erc20SharesContract.methods\n        .getSTXPrice()\n        .call()\n        .then((balance) => Web3.utils.fromWei(balance, 'ether'));\n};\nexport const getSTXPriceFull = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    // eslint-disable-next-line no-underscore-dangle\n    return erc20SharesContract.methods\n        .getSTXPrice()\n        .call()\n        .then((balance) => Web3.utils.toWei(balance, 'ether'));\n};\nexport const stakeHas = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n    return erc20StaxContract.methods.hasStake(selectedAccount).call();\n};\nexport const purchaseShares = async (value) => {\n    if (!isInitialized) {\n        await init();\n    }\n    return erc20SharesContract.methods\n        .PurchaseSHARES(value)\n        .send({ from: selectedAccount })\n        .catch((err) => {\n            console.log(err);\n        });\n};\nexport const stakeStax = async (value2, stakename) => {\n    if (!isInitialized) {\n        await init();\n    }\n    return erc20StaxContract.methods.stake(value2, stakename).send({ from: selectedAccount });\n};\n\nexport const approve = async (address, priceToApprove) => {\n    if (!isInitialized) {\n        await init();\n    }\n    return erc20BusdContract.methods\n        .approve('0xb08ce509cafb6660e4f7b951fbb8ae63930a6aee', priceToApprove)\n        .send({ from: selectedAccount })\n        .catch((err) => {\n            console.log(err);\n        });\n};\n\nexport const ggetStaxBalance = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    return erc20StaxContract.methods\n        .balanceOf(selectedAccount)\n        .call()\n        .then((balance) => Web3.utils.fromWei(balance, 'ether'));\n};\nexport const ggetBUSDBalance = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    return erc20BusdContract.methods\n        .balanceOf(selectedAccount)\n        .call()\n        .then((balance) => Web3.utils.fromWei(balance, 'ether'));\n};\nexport const ggetTotalDividends = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    return erc20BusdContract.methods\n        .balanceOf('0xb08ce509cafb6660e4f7b951fbb8ae63930a6aee')\n        .call()\n        .then((balance) => Web3.utils.fromWei(balance, 'ether'));\n};\nexport const ggetTotalSTAXSupply = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n\n    return erc20StaxContract.methods\n        .totalSupply()\n        .call()\n        .then((balance) => Web3.utils.fromWei(balance, 'ether'));\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","export default __webpack_public_path__ + \"static/media/BigStaxLogo.0ae0d426.png\";","// project imports\nimport BigStaxLogo from '../../../assets/BigStaxLogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst BannerComp = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" alignContent=\"center\">\n                <img height=\"100%\" width=\"100%\" src={BigStaxLogo} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default BannerComp;\n","// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Button, CardContent, Grid, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n\n// assets\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst TopTitle = () => {\n    const theme = useTheme();\n\n    return (\n        <>\n            <MainCard\n                sx={{ height: 'auto', width: 'auto', maxWidth: 600, backgroundColor: theme.palette.grey[900], border: 0 }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid container>\n                        <Grid container alignContent=\"center\" justifyContent=\"left\">\n                            <Grid item>\n                                <Typography variant=\"h1\">Store of Value</Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container alignContent=\"center\" justifyContent=\"left\">\n                            <Grid item xs={10} md={12} sm={12} sx={{ mt: 5 }}>\n                                <Typography variant=\"h2\">Flexible Ecosystem & Hybrid-Rewards</Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container alignContent=\"center\" justifyContent=\"left\">\n                            <Grid item lg={8} xs={12} md={10} sm={10} sx={{ mt: 5 }}>\n                                <Typography color={theme.palette.grey[500]} variant=\"h5\">\n                                    STAX is a Decentralized Staking Protocol operating on Binance Smart Chain (BSC). The protocol is\n                                    designed to store value and provide hybrid-rewards with no barriers to entry. No authorization is\n                                    required to use the the ecosystem. Please read the whitepaper to fully understand STAX Protocol.\n                                </Typography>\n                            </Grid>\n                            <Grid container sx={{ my: 3 }} alignContent=\"center\" justifyContent=\"left\">\n                                <Grid>\n                                    <Button size=\"large\" variant=\"outlined\" color=\"success\">\n                                        Learn More\n                                    </Button>\n                                </Grid>\n                                <Grid sx={{ mx: 3 }}>\n                                    <Button size=\"large\" variant=\"contained\" color=\"success\">\n                                        Buy STAX\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default TopTitle;\n","import { useState, useEffect } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, Grid, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n\n// assets\nimport { ggetTotalSTAXSupply, sharesTotalSupply } from 'components/wallet/sharesABI';\nimport BigNumber from 'bignumber.js';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst SmallDashboard = () => {\n    const theme = useTheme();\n    const [totalSupply, setTotalSupply] = useState(0);\n    const [sharesSupply, setSharesSupply] = useState(0);\n    const totalSupplyToNumber = new BigNumber(totalSupply);\n    const totalSupplyFormat = totalSupplyToNumber.decimalPlaces(2);\n    const totalSupplyFormatted = totalSupplyFormat.toLocaleString(undefined);\n    const fetchTotalSupply = async () => {\n        ggetTotalSTAXSupply()\n            .then((balance) => {\n                setTotalSupply(balance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchSharesSupply = async () => {\n        sharesTotalSupply()\n            .then((balance) => {\n                setSharesSupply(balance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    useEffect(() => {\n        async function load1() {\n            fetchTotalSupply();\n            fetchSharesSupply();\n        }\n        load1();\n    }, []);\n\n    return (\n        <>\n            <MainCard sx={{ height: 'auto', width: 'auto', backgroundColor: theme.palette.grey[900], border: 0 }} content={false}>\n                <CardContent>\n                    <Grid container>\n                        <Grid container justifyContent=\"center\">\n                            <Grid item>\n                                <Typography textAlign=\"center\" variant=\"h6\">\n                                    Decentralized Staking Protocol\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ my: 3 }} justifyContent=\"center\">\n                            <Grid item lg={8} xs={11} md={12} sm={12} sx={{ mt: 0 }}>\n                                <Typography textAlign=\"center\" color={theme.palette.grey[500]} variant=\"h5\">\n                                    STAX Protocol is designed to provide hybrid staking rewards in BUSD & STAX - native token. You may think\n                                    of STAX as Store of Value.\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ my: 3 }} justifyContent=\"center\">\n                            <Grid item lg={8} xs={12} md={12} sm={12} sx={{ mt: 3 }}>\n                                <Typography textAlign=\"center\" color={theme.palette.grey[500]} variant=\"h5\">\n                                    Overview of STAX numbers.\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={10} justifyContent=\"center\">\n                            <Grid item lg={4} xs={12} sm={8} md={8}>\n                                <Card\n                                    sx={{\n                                        border: 0,\n                                        borderBottom: 5,\n                                        borderRadius: 0,\n                                        borderColor: theme.palette.success.dark\n                                    }}\n                                    variant=\"outlined\"\n                                >\n                                    <CardContent xs={12} lg={12}>\n                                        <Typography variant=\"h3\" textAlign=\"center\">\n                                            Circulating STAX Supply\n                                        </Typography>\n                                        <Typography variant=\"h3\" textAlign=\"center\">\n                                            {totalSupplyFormatted}\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item lg={4} xs={12} sm={8} md={8}>\n                                <Card\n                                    sx={{\n                                        border: 0,\n                                        borderBottom: 5,\n                                        borderRadius: 0,\n                                        borderColor: theme.palette.success.dark\n                                    }}\n                                    variant=\"outlined\"\n                                >\n                                    <CardContent xs={12} lg={12}>\n                                        <Typography variant=\"h3\" textAlign=\"center\">\n                                            Total Shares Sold\n                                        </Typography>\n                                        <Typography variant=\"h3\" textAlign=\"center\">\n                                            {sharesSupply} / 100,000 sSTX\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item lg={4} xs={12} sm={8} md={8}>\n                                <Card\n                                    sx={{\n                                        border: 0,\n                                        borderBottom: 5,\n                                        borderRadius: 0,\n                                        borderColor: theme.palette.success.dark\n                                    }}\n                                    variant=\"outlined\"\n                                >\n                                    <CardContent xs={12} lg={12}>\n                                        <Typography variant=\"h3\" textAlign=\"center\">\n                                            STAX Holders\n                                        </Typography>\n                                        <Typography variant=\"h3\" textAlign=\"center\">\n                                            N/A\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default SmallDashboard;\n","export default __webpack_public_path__ + \"static/media/Footer1.6db30e9f.png\";","// project imports\nimport Footer1 from '../../../assets/Footer1.png';\nimport { Box } from '@mui/material';\n\nconst FooterFirst = () => (\n    <>\n        <Box>\n            <img width=\"100%\" src={Footer1} alt=\"shares banner\" />\n        </Box>\n    </>\n);\n\nexport default FooterFirst;\n","export default __webpack_public_path__ + \"static/media/decentralized.504b77b0.png\";","// project imports\nimport Decentralized from '../../../assets/images/decentralized.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst DecLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" alignContent=\"center\" sx={{ height: 350 }}>\n                <img height={410} width=\"100%\" src={Decentralized} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default DecLogo;\n","// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Button, CardContent, Grid, Typography } from '@mui/material';\nimport DecLogo from './declogo';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst Description = () => {\n    const theme = useTheme();\n\n    return (\n        <>\n            <MainCard\n                sx={{ height: 'auto', width: '100%', borderRadius: 0, backgroundColor: theme.palette.grey[900], border: 0 }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid container>\n                        <Grid item lg={12} xs={12} sx={{ mb: 0 }}>\n                            <Typography variant=\"h1\" textAlign=\"center\">\n                                Flexible Ecosystem & Staking\n                            </Typography>\n                        </Grid>\n                        <Grid container sx={{ my: 5 }} alignContent=\"center\" justifyContent=\"center\">\n                            <Grid item lg={7} xs={12} md={6} sm={7} sx={{ mt: 10, mx: 0 }} alignContent=\"right\" justifyContent=\"right\">\n                                <Grid item lg={9} sm={12} sx={{ borderLeft: 2, borderColor: theme.palette.success.main }}>\n                                    <Typography sx={{ mx: 2 }} textAlign=\"left\" variant=\"h6\" color={theme.palette.success.main}>\n                                        STAX\n                                    </Typography>\n                                    <Typography sx={{ mx: 2 }} textAlign=\"left\" variant=\"h6\" color={theme.palette.grey[50]}>\n                                        Introduction\n                                    </Typography>\n                                    <Typography textAlign=\"left\" sx={{ mx: 2, mt: 5 }} color={theme.palette.grey[50]} variant=\"h4\">\n                                        STAX is decentralized cryptocurrency on Binance Smart Chain and it is the main token of the\n                                        protocol. Users may stake their tokens in order to receive rewards in the form of more STAX. The\n                                        protocol provides boost token used for different features - Shares STAX (sSTX). Shares STAX holders\n                                        receive passive BUSD dividends received from STAX Daily Volume & each sSTX purchase.\n                                    </Typography>\n                                    <Button sx={{ mx: 2, mt: 2 }} size=\"large\" variant=\"outlined\" color=\"success\">\n                                        Buy STAX\n                                    </Button>\n                                    <Button sx={{ mt: 2 }} size=\"large\" variant=\"contained\" color=\"success\">\n                                        STAKE\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                            <Grid item sx={{ backgroundColor: theme.palette.grey[900], my: 5, mx: 0 }} sm={5} lg={4} md={5}>\n                                <DecLogo />\n                                <Typography textAlign=\"center\">STAX & BUSD Rewards</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default Description;\n","export default __webpack_public_path__ + \"static/media/StakingLogo.3bbcb268.png\";","// project imports\nimport Staking from '../../../assets/images/StakingLogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst StakingLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\">\n                <img height={250} width=\"100%\" src={Staking} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default StakingLogo;\n","// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, Grid, TextField, Typography } from '@mui/material';\nimport StakingLogo from './StakingLogo';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst StakingInfo = () => {\n    const theme = useTheme();\n\n    return (\n        <>\n            <MainCard\n                sx={{ height: 'auto', width: '102.7%', borderRadius: 0, backgroundColor: theme.palette.grey[900], border: 0 }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid container>\n                        <Grid container mt={5} justifyContent=\"center\">\n                            <Grid item>\n                                <Typography textAlign=\"center\" variant=\"h6\" color={theme.palette.grey[50]}>\n                                    Staking Rewards\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container sx={{ mt: 6, display: 'flex', justifyContent: 'center' }}>\n                            <Grid item lg={3} xs=\"auto\" md={4} sm={4} sx={{ mt: 10 }}>\n                                <StakingLogo />\n                            </Grid>\n                            <Grid item lg={3.5} xs={10} md={4} sm={6} sx={{ mt: 10 }}>\n                                <Card\n                                    sx={{\n                                        borderLeft: 1,\n                                        borderRight: 1,\n                                        borderBottom: 3,\n                                        height: '100%',\n                                        width: '100%',\n                                        borderColor: theme.palette.success.light,\n                                        borderRadius: 5,\n                                        boxShadow: '0px 10px 20px green'\n                                    }}\n                                >\n                                    <Grid container sx={{ height: 330, my: 1, display: 'flex', justifyContent: 'center' }}>\n                                        <Grid item xs={12} sx={{ height: 50, backgroundColor: theme.palette.grey[900] }} lg={12}>\n                                            <Typography variant=\"h2\" sx={{ mt: 3 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                                Staking Calculator\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item sx={{ height: 40, backgroundColor: theme.palette.grey[900], my: 1 }} lg={4}>\n                                            <Typography variant=\"h4\" textAlign=\"center\">\n                                                STAX Amount:\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item sx={{ height: 40, backgroundColor: theme.palette.grey[900], my: 0 }} lg={3}>\n                                            <TextField\n                                                sx={{ borderBottom: 2, borderColor: theme.palette.success.dark }}\n                                                inputProps={{ style: { color: 'white' } }}\n                                                id=\"standard-basic\"\n                                                variant=\"standard\"\n                                                color=\"success\"\n                                            />\n                                        </Grid>\n                                        <Grid item sx={{ height: 40, backgroundColor: theme.palette.grey[900], my: 1 }} lg={4}>\n                                            <Typography variant=\"h4\" textAlign=\"center\">\n                                                SHARES (sSTX) Balance:\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default StakingInfo;\n","// ===========================|| DASHBOARD - BAJAJ AREA CHART ||=========================== //\n\nconst chartData = {\n    type: 'area',\n    height: 250,\n    options: {\n        chart: {\n            id: 'support-chart',\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 1\n        },\n        tooltip: {\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: 'Ticket '\n            },\n            marker: {\n                show: false\n            }\n        }\n    },\n    series: [\n        {\n            data: [1, 4, 7, 10, 13, 16, 20]\n        }\n    ]\n};\n\nexport default chartData;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { Card } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport chartData from './chart-data/bajaj-area-chart';\n\n// ===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||=========================== //\n\nconst BajajAreaChartCard = () => {\n    const theme = useTheme();\n    const customization = useSelector((state) => state.customization);\n    const { navType } = customization;\n\n    const orangeDark = theme.palette.success.dark;\n\n    useEffect(() => {\n        const newSupportChart = {\n            ...chartData.options,\n            colors: [orangeDark],\n            tooltip: {\n                theme: 'light'\n            }\n        };\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\n    }, [navType, orangeDark]);\n\n    return (\n        <Card sx={{ bgcolor: theme.palette.grey[900] }}>\n            <Chart {...chartData} />\n        </Card>\n    );\n};\n\nexport default BajajAreaChartCard;\n","// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Card, CardContent, Grid, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n\n// assets\nimport BajajAreaChartCard from './BajajAreaChartCard';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst SharesInfo = () => {\n    const theme = useTheme();\n\n    return (\n        <>\n            <MainCard\n                sx={{ height: 'auto', width: '100%', backgroundColor: theme.palette.grey[900], border: 0, borderRadius: 0 }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid container justifyContent=\"center\" sx={{ mt: 10, backgroundColor: theme.palette.grey[900] }}>\n                        <Grid container sx={{ my: 5 }} alignContent=\"center\" justifyContent=\"center\">\n                            <Grid\n                                item\n                                lg={4}\n                                xs={9.6}\n                                md={4.4}\n                                sm={7}\n                                sx={{ borderLeft: 2, borderColor: theme.palette.success.main, ml: 0, my: 0 }}\n                            >\n                                <Typography color={theme.palette.grey[50]} textAlign=\"left\" sx={{ ml: 3 }} variant=\"h6\">\n                                    STAX\n                                </Typography>\n                                <Typography color={theme.palette.success.main} textAlign=\"left\" sx={{ ml: 3 }} variant=\"h6\">\n                                    Shares\n                                </Typography>\n                                <Typography variant=\"h4\" sx={{ color: theme.palette.grey[50], mt: 2.5, ml: 3 }}>\n                                    STAX Protocol provides additional boost token (sSTX) allowing hybrid-benefits such as more staking\n                                    rewards and rewards and HIGH-YIELD BUSD rewards`. Each sSTX increases the initial APY by 5% and is\n                                    limited to 108%. No tokens are available at the launch but users mint them on each purchase. The maximum\n                                    total supply is 100,000. The initial sSTX price is 20 BUSD and increases by 0.01 BUSD per token sale.\n                                </Typography>\n                                <Button sx={{ mx: 3, mt: 2 }} size=\"large\" variant=\"outlined\" color=\"success\">\n                                    Learn more\n                                </Button>\n                                <Button sx={{ mt: 2 }} size=\"large\" variant=\"contained\" color=\"success\">\n                                    Buy SHARES\n                                </Button>\n                            </Grid>\n                            <Grid item lg={5} xs={12} md={5} sm={7} sx={{ mx: 2, mt: 10 }}>\n                                <BajajAreaChartCard />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={10} mt={0} alignContent=\"center\" justifyContent=\"center\">\n                        <Grid item lg={3} xs={10} sm={5} md={3}>\n                            <Card\n                                sx={{\n                                    border: 0,\n                                    borderBottom: 5,\n                                    borderRadius: 0,\n                                    borderColor: theme.palette.success.dark,\n                                    backgroundColor: theme.palette.grey[900]\n                                }}\n                                variant=\"outlined\"\n                            >\n                                <CardContent xs={12}>\n                                    <Typography color={theme.palette.grey[50]} variant=\"h3\" textAlign=\"center\">\n                                        BUSD Dividends\n                                    </Typography>\n                                    <Typography color={theme.palette.grey[50]} variant=\"h3\" textAlign=\"center\">\n                                        70%\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item lg={3} xs={10} sm={5} md={3}>\n                            <Card\n                                sx={{\n                                    border: 0,\n                                    borderBottom: 5,\n                                    borderRadius: 0,\n                                    borderColor: theme.palette.success.dark,\n                                    backgroundColor: theme.palette.grey[900]\n                                }}\n                                variant=\"outlined\"\n                            >\n                                <CardContent xs={12}>\n                                    <Typography color={theme.palette.grey[50]} variant=\"h3\" textAlign=\"center\">\n                                        STAX Auto-LP\n                                    </Typography>\n                                    <Typography color={theme.palette.grey[50]} variant=\"h3\" textAlign=\"center\">\n                                        10%\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item lg={3} xs={10} sm={5} md={3}>\n                            <Card\n                                sx={{\n                                    border: 0,\n                                    borderBottom: 5,\n                                    borderRadius: 0,\n                                    borderColor: theme.palette.success.dark,\n                                    backgroundColor: theme.palette.grey[900]\n                                }}\n                                variant=\"outlined\"\n                            >\n                                <CardContent xs={12}>\n                                    <Typography color={theme.palette.grey[50]} variant=\"h3\" textAlign=\"center\">\n                                        Governance\n                                    </Typography>\n                                    <Typography color={theme.palette.grey[50]} variant=\"h3\" textAlign=\"center\">\n                                        16%\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item lg={3} xs={10} sm={5} md={3}>\n                            <Card\n                                sx={{\n                                    border: 0,\n                                    borderBottom: 5,\n                                    borderRadius: 0,\n                                    borderColor: theme.palette.success.dark,\n                                    backgroundColor: theme.palette.grey[900]\n                                }}\n                                variant=\"outlined\"\n                            >\n                                <CardContent xs={12}>\n                                    <Typography color={theme.palette.grey[50]} variant=\"h3\" textAlign=\"center\">\n                                        Team Fund\n                                    </Typography>\n                                    <Typography color={theme.palette.grey[50]} variant=\"h3\" textAlign=\"center\">\n                                        4%\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default SharesInfo;\n","export default __webpack_public_path__ + \"static/media/telegramlogo.133c0bae.png\";","// project imports\nimport Telegram from '../../../assets/telegramlogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst TelegramLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\">\n                <img height={200} src={Telegram} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default TelegramLogo;\n","// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { CardContent, Grid, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n// assets\nimport TelegramLogo from './telegram';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst Socials = () => {\n    const theme = useTheme();\n\n    return (\n        <>\n            <MainCard\n                sx={{\n                    height: 'auto',\n                    width: '100%',\n                    border: 0,\n                    borderRadius: 8,\n                    mx: 1,\n                    backgroundColor: theme.palette.success.dark\n                }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid container justifyContent=\"center\">\n                        <Grid item lg={12} md={12} sx={{ mt: 8 }}>\n                            <Typography variant=\"h1\" sx={{ color: theme.palette.grey[900] }} textAlign=\"center\">\n                                Join STAX\n                            </Typography>\n                        </Grid>\n                        <Grid item lg={12} sx={{ mt: 5 }}>\n                            <Typography variant=\"h4\" sx={{ color: theme.palette.grey[900] }} textAlign=\"center\">\n                                STAX Protocol is decentralized and trustless ecosystem. No authorization is required to use the the\n                                ecosystem.\n                            </Typography>\n                        </Grid>\n                        <Grid container sx={{ mt: 7, justifyContent: 'center', backgroundColor: theme.palette.success.dark }}>\n                            <Grid item lg={4} sx={{ mx: 2 }}>\n                                <Grid item sx={{ my: 6, borderLeft: 4, borderColor: theme.palette.grey[900] }}>\n                                    <Typography variant=\"h2\" sx={{ ml: 2, color: theme.palette.grey[900] }}>\n                                        STAX Telegram Community\n                                    </Typography>\n                                    <Typography variant=\"h5\" sx={{ ml: 2, color: theme.palette.grey[900] }}>\n                                        If you need some more information, please make sure to fully read our articles, the STAX whitepaper\n                                        and join our Telegram group. There you can address any questions to the community managers or STAX\n                                        members.\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid item lg={2} sx={{ mx: 2 }}>\n                                <TelegramLogo />\n                            </Grid>\n                        </Grid>\n                        <Grid item lg={6} height=\"auto\" sx={{ borderRadius: 8, backgroundColor: theme.palette.success.dark, my: 7 }}>\n                            <Typography sx={{ color: theme.palette.grey[900], my: 7 }} variant=\"h1\" textAlign=\"center\">\n                                STAX - Metaverse\n                            </Typography>\n                            <Typography sx={{ color: theme.palette.grey[900], my: 7 }} variant=\"h3\" textAlign=\"center\">\n                                3D Open World Blockchain based Game\n                            </Typography>\n                            <Typography sx={{ color: theme.palette.grey[900] }} variant=\"h5\" textAlign=\"center\">\n                                Users may explore the space and different planets.\n                            </Typography>\n                            <Typography sx={{ color: theme.palette.grey[900] }} variant=\"h5\" textAlign=\"center\">\n                                There is a collection of NFTs that represents planet owners & skins & spaceships in the game.\n                            </Typography>\n                            <Typography sx={{ color: theme.palette.grey[900] }} variant=\"h5\" textAlign=\"center\">\n                                People can easily connect to each other and explore different planets together (MultiPlayer).\n                            </Typography>\n                            <Typography sx={{ color: theme.palette.grey[900] }} variant=\"h5\" textAlign=\"center\">\n                                On some planets will be hosted AMAs and meetings where users may gather on that planet.\n                            </Typography>\n                            <Typography sx={{ color: theme.palette.grey[900] }} variant=\"h5\" textAlign=\"center\">\n                                Educational content, strategy aproaches, gaming, events and much more to be provided.\n                            </Typography>\n                            <Typography sx={{ color: theme.palette.grey[900], mb: 3 }} variant=\"h5\" textAlign=\"center\">\n                                Comming soon...\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default Socials;\n","export default __webpack_public_path__ + \"static/media/bsclogo.f6e17ba2.png\";","// project imports\nimport Bsc from '../../../assets/bsclogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst BscLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" alignContent=\"center\">\n                <img width={400} src={Bsc} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default BscLogo;\n","export default __webpack_public_path__ + \"static/media/metamasklogo.4f06ed22.png\";","// project imports\nimport Metamask from '../../../assets/metamasklogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst MetamaskLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\" alignContent=\"center\">\n                <img height={200} src={Metamask} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default MetamaskLogo;\n","// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { CardContent, Grid } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport BscLogo from './bsclogo';\nimport MetamaskLogo from './metamasklogo';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst Socials = () => {\n    const theme = useTheme();\n\n    return (\n        <>\n            <MainCard\n                sx={{\n                    height: 'auto',\n                    width: '100%',\n                    border: 0,\n                    borderRadius: 0,\n                    backgroundColor: theme.palette.grey[900]\n                }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Grid item lg={5} md=\"auto\" xs={8} sx={{ mt: 13, backgroundColor: theme.palette.grey[900] }}>\n                            <BscLogo />\n                        </Grid>\n                        <Grid item lg={1.52} md=\"auto\" xs={8} sx={{ backgroundColor: theme.palette.grey[900], my: 6 }}>\n                            <MetamaskLogo />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default Socials;\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nconst AccordionContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nconst accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"onClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport AccordionContext from '../Accordion/AccordionContext';\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from './accordionSummaryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\n\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return _extends({\n    display: 'flex',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: theme.palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    }\n  }, !ownerState.disableGutters && {\n    [`&.${accordionSummaryClasses.expanded}`]: {\n      minHeight: 64\n    }\n  });\n});\nconst AccordionSummaryContent = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexGrow: 1,\n  margin: '12px 0'\n}, !ownerState.disableGutters && {\n  transition: theme.transitions.create(['margin'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    margin: '20px 0'\n  }\n}));\nconst AccordionSummaryExpandIconWrapper = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  color: theme.palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n}));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    expanded,\n    disabled,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      ownerState: ownerState,\n      children: expandIcon\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getAccordionDetailsUtilityClass } from './accordionDetailsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\n\nconst AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2, 2)\n}));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionDetails;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAccordionUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordion', slot);\n}\nconst accordionClasses = generateUtilityClasses('MuiAccordion', ['root', 'rounded', 'expanded', 'disabled', 'gutters', 'region']);\nexport default accordionClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"defaultExpanded\", \"disabled\", \"disableGutters\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nimport accordionClasses, { getAccordionUtilityClass } from './accordionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\n\nconst AccordionRoot = styled(Paper, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${accordionClasses.region}`]: styles.region\n    }, styles.root, !ownerState.square && styles.rounded, !ownerState.disableGutters && styles.gutters];\n  }\n})(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&:before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: theme.palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&:before': {\n        display: 'none'\n      }\n    },\n    [`&.${accordionClasses.expanded}`]: {\n      '&:before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&:before': {\n          display: 'none'\n        }\n      }\n    },\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: theme.palette.action.disabledBackground\n    }\n  };\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, !ownerState.square && {\n  borderRadius: 0,\n  '&:first-of-type': {\n    borderTopLeftRadius: theme.shape.borderRadius,\n    borderTopRightRadius: theme.shape.borderRadius\n  },\n  '&:last-of-type': {\n    borderBottomLeftRadius: theme.shape.borderRadius,\n    borderBottomRightRadius: theme.shape.borderRadius,\n    // Fix a rendering issue on Edge\n    '@supports (-ms-ime-align: auto)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    }\n  }\n}, !ownerState.disableGutters && {\n  [`&.${accordionClasses.expanded}`]: {\n    margin: '16px 0'\n  }\n}));\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n\n  const {\n    children: childrenProp,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    disableGutters = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    TransitionComponent = Collapse,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n\n  const ownerState = _extends({}, props, {\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    square: square\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionContext.Provider, {\n      value: contextValue,\n      children: summary\n    }), /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      in: expanded,\n      timeout: \"auto\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        \"aria-labelledby\": summary.props.id,\n        id: summary.props['aria-controls'],\n        role: \"region\",\n        className: classes.region,\n        children: children\n      })\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"MUI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('MUI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { CardContent, Grid, Typography } from '@mui/material';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Accordion from '@mui/material/Accordion';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n// assets\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst FAQ = () => {\n    const theme = useTheme();\n\n    return (\n        <>\n            <MainCard\n                sx={{\n                    height: 'auto',\n                    width: '100%',\n                    border: 0,\n                    borderRadius: 0,\n                    backgroundColor: theme.palette.grey[900]\n                }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid container alligncontent=\"center\" justifyContent=\"center\">\n                        <Grid item lg={12} sx={{ my: 8 }}>\n                            <Typography variant=\"h1\" sx={{ color: theme.palette.grey[50], mt: 5 }} textAlign=\"center\">\n                                Frequently Asked Questions (FAQ)\n                            </Typography>\n                        </Grid>\n                        <Grid item lg={7} height=\"auto\" sx={{ borderRadius: 8, backgroundColor: theme.palette.grey[900], my: 7 }}>\n                            <Accordion>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon sx={{ color: theme.palette.success.main }} />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography sx={{ color: theme.palette.success.main }} variant=\"h2\" textAlign=\"left\">\n                                        What is STAX Protocol?\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        STAX is high-rewarding staking protocol and provides BUSD dividends. It is decentralized and\n                                        trustless cryptocurrency operating on the Binance Smart Chain. You may think of STAX as Store of\n                                        Value. The protocol provides two cryptocurrencies: STAX (native) and sSTX (boost token). There is a\n                                        1% transaction fee on every STAX transaction except staking functions. The protocol is accessible\n                                        with MetaMask (cryptocurrency wallet provider which allows connection between your decentralized\n                                        applications).\n                                    </Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        </Grid>\n                        <Grid item lg={7} height=\"auto\" sx={{ borderRadius: 8, backgroundColor: theme.palette.grey[900], my: 7 }}>\n                            <Accordion>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon sx={{ color: theme.palette.success.main }} />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography sx={{ color: theme.palette.success.main }} variant=\"h2\" textAlign=\"left\">\n                                        How to download and install MetaMask?\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        PC/Laptop users may go to https://metamask.io and download the metamask extension (recommended\n                                        browser: Google Chrome / Mozilla Firefox). Metamask application is available for Android/iOs devices\n                                        on the market. Download and install the app. Then, carefully follow the instructions and finish the\n                                        set up.\n                                    </Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        </Grid>\n                        <Grid item lg={7} height=\"auto\" sx={{ borderRadius: 8, backgroundColor: theme.palette.grey[900], my: 7 }}>\n                            <Accordion>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon sx={{ color: theme.palette.success.main }} />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography sx={{ color: theme.palette.success.main }} variant=\"h2\" textAlign=\"left\">\n                                        How to connect MetaMask?\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        MetaMask allow you to connect to the blockchain. STAX operates on the Binance Smart Chain (BSC).\n                                        Therefore, connection to BSC is required. Instructions on how to connect to BSC are available here:\n                                    </Typography>\n                                    <Typography>Binance Academy - MetaMask Tutorial</Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        </Grid>\n                        <Grid item lg={7} height=\"auto\" sx={{ borderRadius: 8, backgroundColor: theme.palette.grey[900], my: 7 }}>\n                            <Accordion>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon sx={{ color: theme.palette.success.main }} />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography sx={{ color: theme.palette.success.main }} variant=\"h2\" textAlign=\"left\">\n                                        What is Staking and how to perform it?\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        Users may lock their STAX tokens and receive rewards in the form of more STAX. This is what staking\n                                        looks like in our protocol. The reward rate is increased when holding STAX Shares (sSTX). The\n                                        biggest reward rate for a stake is achieved when a user has 9 sSTX. To open a stake, simply go to\n                                        `Staking` and choose amount of tokens to stake and name of the stake. When creating the stake the\n                                        protocol checks your sSTX balance and saves it into the stake as SHARESBONUS. More SHARESBONUS earn\n                                        more staking rewards. Please make sure to fully read and understand the whitepaper before investing\n                                        in STAX.\n                                    </Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        </Grid>\n                        <Grid item lg={7} height=\"auto\" sx={{ borderRadius: 8, backgroundColor: theme.palette.grey[900], my: 7 }}>\n                            <Accordion>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon sx={{ color: theme.palette.success.main }} />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography sx={{ color: theme.palette.success.main }} variant=\"h2\" textAlign=\"left\">\n                                        What are STAX Shares?\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        STAX Shares (sSTX) is a boost token allowing staking flexibility. sSTX generate passive BUSD\n                                        dividends dividends and increase the reward rate of a stake. The initial share price is 20 BUSD and\n                                        increases by 1 BUSD every 100sSTX sold. There is a total supply of 100,000 sSTX. After each\n                                        purchase, 70% of the BUSD is distributed to the sSTX holders in a direct propotion, 10% Liquidity,\n                                        16% S-TREASURY, 4% Team Fund. STAX (native) token applies a fee of 1% on BUY/SELL/TRANSFER\n                                        transaction and the amount is distributed to sSTX holders as BUSD dividends. More details to be\n                                        found in the whitepaer\n                                    </Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        </Grid>\n                        <Grid item lg={7} height=\"auto\" sx={{ borderRadius: 8, backgroundColor: theme.palette.grey[900], my: 7 }}>\n                            <Accordion>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon sx={{ color: theme.palette.success.main }} />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography sx={{ color: theme.palette.success.main }} variant=\"h2\" textAlign=\"left\">\n                                        How to get sSTX and receive BUSD Dividends?\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        sSTX purchases are available only through the official website: htttps://stax.finance. Once\n                                        connected, you can find all kind of stats about sSTX under Shares tab. sSTX can be purchased only\n                                        with BUSD by choosing an amount of sSTX to buy and then clicking the `BUY` button under `Shares`\n                                        tab. After each purchase, the smart contract collects the BUSD and distributes it in the following\n                                        way:.\n                                    </Typography>\n                                    <Typography>70% of the BUSD is distributed as dividends to sSTX holders.</Typography>\n                                    <Typography>10% of the BUSD is used for providing liquidity.</Typography>\n                                    <Typography>\n                                        16% of the BUSD is collected and locked in the S-Treasury until all sSTX are sold.\n                                    </Typography>\n                                    <Typography>4% of the BUSD is allocated to the team wallet and used for marketing.</Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        </Grid>\n                        <Grid item lg={7} height=\"auto\" sx={{ borderRadius: 8, backgroundColor: theme.palette.grey[900], my: 7 }}>\n                            <Accordion>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon sx={{ color: theme.palette.success.main }} />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography sx={{ color: theme.palette.success.main }} variant=\"h2\" textAlign=\"left\">\n                                        How to increase the initial APY (reward rate)?\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        Each STAX stake takes three variables when it is opened. The protocol requires you to put a name of\n                                        the stake, amount of STAX tokens to be staked and also checks your sSTX balance at the moment of\n                                        creating the stake (your sSTX balance is saved into the stake as SHARESBONUS). The initial APY is 8%\n                                        and is increased based on the SHARESBONUS.\n                                    </Typography>\n                                    <Typography sx={{ my: 0.3 }}>1 sSTX = 1 SHARESBONUS</Typography>\n                                    <Typography sx={{ my: 0.3 }}>1 SHARESBONUS = +10% APY</Typography>\n                                    <Typography sx={{ my: 0.3 }}>2 SHARESBONUS = + 15% APY</Typography>\n                                    <Typography sx={{ my: 0.3 }}>3 SHARESBONUS = + 20% APY</Typography>\n                                    <Typography sx={{ my: 0.3 }}>4 SHARESBONUS = + 25% APY</Typography>\n                                    <Typography sx={{ my: 0.3 }}>5 SHARESBONUS = + 30% APY</Typography>\n                                    <Typography sx={{ my: 0.3 }}>6 SHARESBONUS = + 35% APY</Typography>\n                                    <Typography sx={{ my: 0.3 }}>7 SHARESBONUS = + 40% APY</Typography>\n                                    <Typography sx={{ my: 0.3 }}>8 SHARESBONUS = + 45% APY</Typography>\n                                    <Typography sx={{ my: 0.3 }}> 9 or more SHARESBONUS = + 50% APY</Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        </Grid>\n                        <Grid item lg={7} height=\"auto\" sx={{ borderRadius: 8, backgroundColor: theme.palette.grey[900], my: 7 }}>\n                            <Accordion>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon sx={{ color: theme.palette.success.main }} />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography sx={{ color: theme.palette.success.main }} variant=\"h2\" textAlign=\"left\">\n                                        Fees & Penalties\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        STAX Protocol is designed to store value & distribute BUSD dividends. Therefore, sophisticated\n                                        tokenomics have been applied to STAX in order to achieve these goals. There is 1% fee on every STAX\n                                        transaction except staking functions. Those fees are collected in BUSD and distributed as dividends\n                                        to sSTX holders.\n                                    </Typography>\n                                    <Typography>\n                                        In order to deal with staking compounding and exponentional inflation, huge fees are applied when\n                                        user ends a stake or withdraw rewards earlier than the 50th day of the stake.\n                                    </Typography>\n                                    <Typography>\n                                        Ending a stake earlier than 40 days after you created the stake, will reduce your Staked STAX by\n                                        50%. (tokens burnt)\n                                    </Typography>\n                                    <Typography>\n                                        Ending a stake earlier than 20 days after you created the stake, will reduce your Staked STAX by\n                                        90%. (tokens burnt)\n                                    </Typography>\n                                    Each withdraw will reduce your stake`s SHARESBONUS by the factor of 1. Example:\n                                    <Typography>Stake properties:</Typography>\n                                    <Typography>10, 000 STAX staked, 4 SHARESBONUS, 33% APY.</Typography>\n                                    <Typography>User performs 1st Withdraw: 10, 000 STAX staked, 3 SHARESBONUS, 28% APY.</Typography>\n                                    <Typography>User performs 2nd Withdraw: 10, 000 STAX staked, 2 SHARESBONUS, 23% APY.</Typography>\n                                    <Typography>User performs 3rd Withdraw: 10, 000 STAX staked, 1 SHARESBONUS, 18% APY.</Typography>\n                                    <Typography>User performs 4th Withdraw: 10, 000 STAX staked, 0 SHARESBONUS, 8% APY.</Typography>\n                                    <Typography>\n                                        Then, the staker will be allowed without any fees or penalties, only if the stake has passed its\n                                        40th day. Otherwise, no withdraws are allowed.\n                                    </Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        </Grid>\n                        <Grid item lg={7} height=\"auto\" sx={{ borderRadius: 8, backgroundColor: theme.palette.grey[900], my: 7 }}>\n                            <Accordion>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon sx={{ color: theme.palette.success.main }} />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography sx={{ color: theme.palette.success.main }} variant=\"h2\" textAlign=\"left\">\n                                        STAX Audit\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        STAX have passed several audits and reports are publicly available (check below links). No issues or\n                                        potential threats are found during the audit cycles. STAX IS SAFE.\n                                    </Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        </Grid>\n                        <Grid item lg={7} height=\"auto\" sx={{ borderRadius: 8, backgroundColor: theme.palette.grey[900], my: 7 }}>\n                            <Accordion>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon sx={{ color: theme.palette.success.main }} />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography sx={{ color: theme.palette.success.main }} variant=\"h2\" textAlign=\"left\">\n                                        Attention\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        STAX Protocol is a decentralized & trustless cryptocurrency without any admin keys or permission and\n                                        everyone can take part in it. However, always do your own research and be aware that STAX is a\n                                        decentralized financial ecosystem. Therefore, we are not responsible for any losess but responsible\n                                        for providing efficient and secure staking protocol. It is essential to read the STAX whitepaper and\n                                        fully understand the protocol.\n                                    </Typography>\n                                    <Typography>Never share your personal information with people on the internet.</Typography>\n                                    <Typography>Keep your MetaMask recovery phrase safe and never share it.</Typography>\n                                    <Typography>STAX admins will NEVER DM you first.</Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        </Grid>\n                        <Grid item lg={7} height=\"auto\" sx={{ borderRadius: 8, backgroundColor: theme.palette.grey[900], my: 7 }}>\n                            <Accordion>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon sx={{ color: theme.palette.success.main }} />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography sx={{ color: theme.palette.success.main }} variant=\"h2\" textAlign=\"left\">\n                                        Additional Assistance\n                                    </Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        If you still need assistance or any further information, please feel free to address your questions\n                                        to STAX admins in our telegram group.\n                                    </Typography>\n                                    <Typography>Never share your personal information with people on the internet.</Typography>\n                                    <Typography>Keep your MetaMask recovery phrase safe and never share it.</Typography>\n                                    <Typography>STAX admins will NEVER DM you first.</Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default FAQ;\n","import { useEffect, useState } from 'react';\n\n// material-ui\nimport { Grid } from '@mui/material';\n\n// project imports\nimport BannerComp from './banner';\nimport TopTitle from './TopTitle';\nimport SmallDashboard from './smallDashboard';\nimport FooterFirst from './Footer1';\nimport Description from './Description';\nimport StakingInfo from './StakingInfo';\nimport SharesInfo from './SharesInfo';\nimport Socials from './Socials';\nimport Partners from './partners';\nimport FAQ from './FAQ';\n\n// ==============================|| DEFAULT DASHBOARD ||============================== //\n\nconst Dashboard = () => {\n    const [isLoading, setLoading] = useState(true);\n    useEffect(() => {\n        setLoading(false);\n    }, []);\n\n    return (\n        <>\n            <Grid container justifyContent=\"center\" alignContent=\"center\">\n                <Grid item sx={{ my: 4 }} lg={6} md={6} sm={12} xs={12}>\n                    <TopTitle isLoading={isLoading} />\n                </Grid>\n                <Grid item lg={3.7} md={4.5} sm={7} xs={10} sx={{ mt: 3 }}>\n                    <BannerComp />\n                </Grid>\n            </Grid>\n\n            <Grid item sx={{ my: 8, mx: 0 }} lg={12} md={12} sm={12} xs={12}>\n                <SmallDashboard isLoading={isLoading} />\n            </Grid>\n            <Grid container>\n                <Grid item lg={12} xs={12} sx={{ my: 10, ml: 0 }}>\n                    <FooterFirst />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item lg={12} sx={{ ml: -2.4 }}>\n                    <Description />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item lg={12} sx={{ ml: -2.4 }}>\n                    <StakingInfo />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item lg={12} sx={{ ml: -2.4 }}>\n                    <SharesInfo />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item lg={12} sx={{ my: 10, ml: -2.4 }}>\n                    <Socials />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item lg={12} md={12} sx={{ my: 0, ml: -3 }}>\n                    <Partners />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item lg={12} sx={{ my: 0, ml: -2.4 }}>\n                    <FAQ />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}