{"version":3,"sources":["../node_modules/@mui/icons-material/Done.js","../node_modules/@mui/icons-material/Info.js","views/utilities/shareschart.js","views/utilities/SharesSTAXChart.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js","assets/images/busdlogo.png","views/utilities/busdlogo.js","views/utilities/busdSmallLogo.js","views/utilities/SharesCard.js","views/utilities/Color.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","chartData","type","height","options","chart","id","sparkline","enabled","dataLabels","stroke","curve","width","tooltip","fixed","x","show","y","title","marker","series","data","SharesSTAXChart","theme","useTheme","navType","useSelector","state","customization","orangeDark","palette","success","dark","useEffect","newSupportChart","colors","ApexCharts","exec","Card","sx","bgcolor","grey","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","_extends","display","transition","transitions","create","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","strokeDasharray","strokeDashoffset","CircularProgress","React","inProps","ref","useThemeProps","className","size","style","thickness","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","role","children","viewBox","cx","cy","r","fill","strokeWidth","getLoadingButtonUtilityClass","loadingButtonClasses","LoadingButtonRoot","Button","shouldForwardProp","prop","rootShouldForwardProp","startIconLoadingStart","endIconLoadingEnd","duration","short","opacity","loadingPosition","loading","fullWidth","marginRight","marginLeft","LoadingButtonLoadingIndicator","loadingIndicator","position","visibility","left","action","disabled","right","LoadingButton","idProp","loadingIndicatorProp","useId","startIcon","endIcon","composedClasses","_jsxs","BusdLogo","Grid","item","justifyContent","alignContent","lg","mx","src","BUSD","alt","BusdSmallLogo","top","border","boxShadow","borderRadius","borderColor","p","PrettoSlider","Slider","backgroundColor","lineHeight","fontSize","background","padding","transformOrigin","SharesCard","useState","setValue","busdBalance","setBusdBalance","busdDividends","setBusdDividends","BigNumber","sSTXPrice","setsSTXPrice","setsSTXPriceFull","balance","setBalance","bonusAPY","setBonusAPY","totalsharesSupply","setTotalSharesSupply","myAPYFormatted","test1String","toString","valueFormatted","Web3","utils","toWei","busdBalanceFormatted","decimalPlaces","toLocaleString","undefined","myShareRate","setLoading","open3","setOpen3","handleClose3","myShareRateFormatted","maximumFractionDigits","fetchsSTXPrice","a","getSTXPrice","then","catch","err","console","log","fetchsSTXPriceFull","getSTXPriceFull","sSTXPriceFull","fetchBalance","ggetOwnBalance","fetchBusdBalance","ggetBUSDBalance","fetchTotalDividends","ggetTotalDividends","fetchTotalSupply","sharesTotalSupply","load2","Modal","open","onClose","Box","textAlign","mt","component","onClick","MainCard","content","CardContent","container","xs","borderLeft","borderRight","borderBottom","light","spacing","md","sm","pl","Tooltip","my","valueLabelDisplay","onChange","event","newValue","defaultValue","max","mb","approve","result","purchaseSharess","minHeight","minWidth","ml","mr","Typography"],"mappings":"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","file":"static/js/7.82eb9e73.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","// ===========================|| DASHBOARD - BAJAJ AREA CHART ||=========================== //\n\nconst chartData = {\n    type: 'area',\n    height: 150,\n    options: {\n        chart: {\n            id: 'support-chart',\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 1\n        },\n        tooltip: {\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: 'Ticket '\n            },\n            marker: {\n                show: true\n            }\n        }\n    },\n    series: [\n        {\n            data: [20, 22, 24]\n        }\n    ]\n};\n\nexport default chartData;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card } from '@mui/material';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport chartData from './shareschart';\n\n// ===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||=========================== //\n\nconst SharesSTAXChart = () => {\n    const theme = useTheme();\n    const customization = useSelector((state) => state.customization);\n    const { navType } = customization;\n\n    const orangeDark = theme.palette.success.dark;\n\n    useEffect(() => {\n        const newSupportChart = {\n            ...chartData.options,\n            colors: [orangeDark],\n            tooltip: {\n                theme: 'light'\n            }\n        };\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\n    }, [navType, orangeDark]);\n\n    return (\n        <Card sx={{ bgcolor: theme.palette.grey[900] }}>\n            <Chart {...chartData} />\n        </Card>\n    );\n};\n\nexport default SharesSTAXChart;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: theme.palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n}; // TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\n\n\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\n\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: theme.palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n\n  const {\n    children,\n    disabled = false,\n    id: idProp,\n    loading = false,\n    loadingIndicator: loadingIndicatorProp,\n    loadingPosition = 'center',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: ownerState.loadingPosition === 'end' ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [children, loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      })]\n    }) : /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      }), children]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default LoadingButton;","export default __webpack_public_path__ + \"static/media/busdlogo.78457406.png\";","// project imports\nimport BUSD from '../../assets/images/busdlogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst BusdLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid item justifyContent=\"center\" alignContent=\"center\">\n                <Grid item lg={11} sx={{ mx: 1.5 }}>\n                    <img width={60} src={BUSD} alt=\"shares banner\" />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default BusdLogo;\n","// project imports\nimport BUSD from '../../assets/images/busdlogo.png';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nconst BusdSmallLogo = () => {\n    useTheme();\n    return (\n        <>\n            <Grid justifyContent=\"center\">\n                <img width={26} src={BUSD} alt=\"shares banner\" />\n            </Grid>\n        </>\n    );\n};\n\nexport default BusdSmallLogo;\n","// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Button, Box, Card, CardContent, Tooltip, Grid, Typography, Modal } from '@mui/material';\nimport Slider from '@mui/material/Slider';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Web3 from 'web3';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SharesSTAXChart from './SharesSTAXChart';\nimport BusdLogo from './busdlogo';\nimport BusdSmallLogo from './busdSmallLogo';\nimport React, { useState, useEffect } from 'react';\nimport InfoIcon from '@mui/icons-material/Info';\nimport {\n    ggetOwnBalance,\n    ggetBUSDBalance,\n    getSTXPrice,\n    sharesTotalSupply,\n    getSTXPriceFull,\n    approve,\n    ggetTotalDividends,\n    purchaseSharess\n} from 'components/wallet/sharesABI';\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst marks = [\n    {\n        value: 1,\n        label: '1'\n    },\n    {\n        value: 2,\n        label: '2'\n    },\n    {\n        value: 3,\n        label: '3'\n    },\n    {\n        value: 4,\n        label: '4'\n    },\n    {\n        value: 5,\n        label: '5'\n    },\n    {\n        value: 6,\n        label: '6'\n    },\n    {\n        value: 7,\n        label: '7'\n    },\n    {\n        value: 8,\n        label: '8'\n    },\n    {\n        value: 9,\n        label: '9'\n    },\n    {\n        value: 10,\n        label: '10'\n    }\n];\nfunction valuetext(value) {\n    return `${value}C`;\n}\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 300,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    borderRadius: 7,\n    borderColor: 'black',\n    p: 3\n};\nconst PrettoSlider = styled(Slider)({\n    color: '#52af77',\n    height: 8,\n    '& .MuiSlider-track': {\n        border: 'none'\n    },\n    '& .MuiSlider-thumb': {\n        height: 24,\n        width: 24,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\n            boxShadow: 'inherit'\n        },\n        '&:before': {\n            display: 'none'\n        }\n    },\n    '& .MuiSlider-valueLabel': {\n        lineHeight: 1.2,\n        fontSize: 12,\n        background: 'unset',\n        padding: 0,\n        width: 32,\n        height: 32,\n        borderRadius: '50% 50% 50% 0',\n        backgroundColor: '#52af77',\n        transformOrigin: 'bottom left',\n        transform: 'translate(50%, -100%) rotate(-45deg) scale(0)',\n        '&:before': { display: 'none' },\n        '&.MuiSlider-valueLabelOpen': {\n            transform: 'translate(50%, -100%) rotate(-45deg) scale(1)'\n        },\n        '& > *': {\n            transform: 'rotate(45deg)'\n        }\n    }\n});\n\nconst SharesCard = () => {\n    const [value, setValue] = React.useState(1);\n    const [busdBalance, setBusdBalance] = React.useState(0);\n    const [busdDividends, setBusdDividends] = React.useState(0);\n    const theme = useTheme();\n    // eslint-disable-next-line global-require\n    const BigNumber = require('bignumber.js');\n    const [sSTXPrice, setsSTXPrice] = useState(0);\n    const [sSTXPriceFull, setsSTXPriceFull] = useState(0);\n    const [balance, setBalance] = useState(0);\n    const [bonusAPY, setBonusAPY] = useState(0);\n    const [totalsharesSupply, setTotalSharesSupply] = useState(0);\n    const myAPYFormatted = bonusAPY * 4.5625;\n    const test1 = value * sSTXPrice;\n    const test1String = test1.toString();\n    const valueFormatted = Web3.utils.toWei(test1String, 'ether');\n    const busdBalanceToNumber = new BigNumber(busdBalance);\n    const busdBalanceFormat = busdBalanceToNumber.decimalPlaces(2);\n    const busdBalanceFormatted = busdBalanceFormat.toLocaleString(undefined);\n    const myShareRate = (balance / totalsharesSupply) * 100;\n    const updateValue = (event, newValue) => {\n        setValue(newValue);\n    };\n    const [open, setOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n    const [open3, setOpen3] = React.useState(false);\n    const handleClose3 = () => setOpen3(false);\n    const handleOpen3 = () => setOpen3(true);\n    const handleLoadingTrue = () => setLoading(true);\n    const handleLoadingFalse = () => setLoading(false);\n    const myShareRateFormatted = myShareRate.toLocaleString(undefined, { maximumFractionDigits: 1 });\n    const fetchsSTXPrice = async () => {\n        getSTXPrice()\n            .then((sSTXPrice) => {\n                setsSTXPrice(sSTXPrice);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchsSTXPriceFull = async () => {\n        getSTXPriceFull()\n            .then((sSTXPriceFull) => {\n                setsSTXPriceFull(sSTXPriceFull);\n                console.log(sSTXPriceFull);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchBalance = async () => {\n        ggetOwnBalance()\n            .then((balance) => {\n                setBalance(balance);\n                if (balance > 20) {\n                    setBonusAPY(20);\n                } else {\n                    setBonusAPY(balance);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchBusdBalance = async () => {\n        ggetBUSDBalance()\n            .then((busdBalance) => {\n                setBusdBalance(busdBalance);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchTotalDividends = async () => {\n        ggetTotalDividends()\n            .then((busdDividends) => {\n                setBusdDividends(busdDividends);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const fetchTotalSupply = async () => {\n        sharesTotalSupply()\n            .then((totalsharesSupply) => {\n                setTotalSharesSupply(totalsharesSupply);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    useEffect(() => {\n        async function load2() {\n            fetchBalance();\n            fetchsSTXPriceFull();\n            fetchTotalSupply();\n            fetchsSTXPrice();\n            fetchBusdBalance();\n            fetchTotalDividends();\n        }\n        load2();\n    }, []);\n    return (\n        <>\n            <Modal open={open3} onClose={handleClose3} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <DoneIcon color=\"success\" fontSize=\"large\" />\n                    </Grid>\n                    <Typography variant=\"h5\" textAlign=\"center\" sx={{ mt: 3 }} component=\"h2\">\n                        Transaction completed.\n                    </Typography>\n                    <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button\n                            onClick={handleClose3}\n                            sx={{\n                                mt: 3,\n                                fontSize: 15,\n                                width: 80,\n                                height: 30,\n                                color: theme.palette.grey[900],\n                                backgroundColor: theme.palette.success.main\n                            }}\n                        >\n                            Close\n                        </Button>\n                    </Grid>\n                </Box>\n            </Modal>\n            <MainCard\n                sx={{ width: 'full%', height: '108%', borderRadius: 0, backgroundColor: theme.palette.grey[900], border: 0 }}\n                content={false}\n            >\n                <CardContent>\n                    <Grid container sx={{ justifyContent: 'center', display: 'flex' }}>\n                        <Grid container sx={{ justifyContent: 'center', display: 'flex' }} mt={5}>\n                            <Typography textAlign=\"center\" variant=\"h6\" color={theme.palette.grey[50]}>\n                                Shares & BUSD Dividends\n                            </Typography>\n                        </Grid>\n                        <Grid item container xs={12} sx={{ mt: 5, display: 'flex', justifyContent: 'center' }} lg={4.5}>\n                            <Card\n                                sx={{\n                                    borderLeft: 1,\n                                    borderRight: 1,\n                                    borderBottom: 3,\n                                    borderColor: theme.palette.success.light,\n                                    borderRadius: 5,\n                                    boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                }}\n                            >\n                                <Grid container sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                                    <Grid container spacing={1} sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                                        <Grid item xs=\"auto\" lg=\"auto\" md=\"auto\" sm=\"auto\">\n                                            <Typography variant=\"h2\" color={theme.palette.grey[50]}>\n                                                SHARES\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs=\"auto\" lg=\"auto\" sm=\"auto\" md=\"auto\">\n                                            <Typography variant=\"h2\" color={theme.palette.success.main} textAlign=\"left\">\n                                                STAX\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item lg=\"auto\" sx={{ pl: 0.5, mt: 0.24 }}>\n                                            <Tooltip\n                                                sx={{ color: theme.palette.success.main }}\n                                                title={\n                                                    <Typography\n                                                        sx={{\n                                                            color: theme.palette.success.main\n                                                        }}\n                                                    >\n                                                        The initial (starting) price of sSTX is 20 BUSD and it increases by 0.01 BUSD every\n                                                        sSTX sold. The current sSTX price can be checked below. 70% of the BUSD amount used\n                                                        for sSTX purchases is distributed to sSTX holders every 24 hours.\n                                                    </Typography>\n                                                }\n                                            >\n                                                <InfoIcon />\n                                            </Tooltip>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item sx={{ backgroundColor: theme.palette.grey[900], my: 0 }} lg={10} xs={9.3}>\n                                        <SharesSTAXChart />\n                                    </Grid>\n                                    <Grid item sx={{ backgroundColor: theme.palette.grey[900], mt: 1.6 }} lg={4.7} md={7} sm={7} xs=\"auto\">\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                            Total Sold:\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                            Initial Price:\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                            Current Price:\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                            BUSD Balance:\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                            BONUS APY:\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"left\">\n                                            sSTX Balance:\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        sx={{ backgroundColor: theme.palette.grey[900], mt: 1.6 }}\n                                        lg=\"auto\"\n                                        sm=\"auto\"\n                                        md=\"auto\"\n                                        xs=\"auto\"\n                                    >\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"right\">\n                                            {totalsharesSupply}/100,000 sSTX\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"right\">\n                                            20 BUSD\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"right\">\n                                            {sSTXPrice} BUSD\n                                        </Typography>\n                                        <Typography sx={{ my: 2 }} variant=\"h5\" textAlign=\"right\">\n                                            {busdBalanceFormatted} BUSD\n                                        </Typography>\n                                        <Typography sx={{ my: 2, color: theme.palette.success.main }} variant=\"h5\" textAlign=\"right\">\n                                            {myAPYFormatted} %\n                                        </Typography>\n                                        <Typography sx={{ my: 2, color: theme.palette.success.main }} variant=\"h5\" textAlign=\"right\">\n                                            {balance} sSTX\n                                        </Typography>\n                                    </Grid>\n                                    <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                        <Grid item lg={5} xs={7.5}>\n                                            <PrettoSlider\n                                                valueLabelDisplay=\"auto\"\n                                                aria-label=\"pretto slider\"\n                                                onChange={updateValue}\n                                                defaultValue={1}\n                                                max={10}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item sx={{ mb: 3, display: 'flex', justifyContent: 'center' }}>\n                                        <LoadingButton\n                                            loading={loading}\n                                            onClick={() => {\n                                                getSTXPriceFull();\n                                                handleLoadingTrue();\n                                                approve('0xb08ce509cafb6660e4f7b951fbb8ae63930a6aee', valueFormatted).then((result) => {\n                                                    purchaseSharess(value).then(() => {\n                                                        handleLoadingFalse();\n                                                        handleOpen3();\n                                                        fetchBalance();\n                                                        fetchTotalSupply();\n                                                        fetchsSTXPrice();\n                                                        fetchBusdBalance();\n                                                        fetchTotalDividends();\n                                                    });\n                                                });\n                                            }}\n                                            sx={{\n                                                fontSize: 18,\n                                                minHeight: 45,\n                                                minWidth: 140,\n                                                bgcolor: theme.palette.success.main,\n                                                backgroundColor: theme.palette.success.main,\n                                                color: theme.palette.grey[900]\n                                            }}\n                                        >\n                                            BUY {value} sSTX\n                                        </LoadingButton>\n                                    </Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                        <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 3 }} lg={4.5}>\n                            <Grid item lg={11.5} xs={12} md={12} sm={12} mt={2}>\n                                <Card\n                                    sx={{\n                                        borderLeft: 1,\n                                        borderRight: 1,\n                                        borderBottom: 3,\n                                        height: 'auto',\n                                        width: '100%',\n                                        borderColor: theme.palette.success.light,\n                                        borderRadius: 5,\n                                        boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                    }}\n                                >\n                                    <Grid container sx={{ height: 'auto', mt: 2 }}>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Grid item lg=\"auto\" xs=\"auto\" sm=\"auto\">\n                                                <Typography variant=\"h2\" color={theme.palette.success.main} textAlign=\"right\">\n                                                    STAX\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item lg=\"auto\" xs=\"auto\" sm=\"auto\">\n                                                <Typography variant=\"h2\" sx={{ ml: 1 }} color={theme.palette.grey[50]} textAlign=\"left\">\n                                                    Shares stats\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container sx={{ display: 'flex', justifyContent: 'center' }}>\n                                            <Grid item lg={12} xs={12}>\n                                                <Typography variant=\"h5\" sx={{ mt: 2 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    My sSTX Balance: {balance} sSTX\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item lg={12} xs={12}>\n                                                <Typography variant=\"h5\" sx={{ mt: 2 }} color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    Circulating sSTX: {totalsharesSupply} sSTX\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item lg=\"auto\" xs=\"auto\" sm=\"auto\" sx={{ my: 2 }}>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    My Share Rate: {myShareRateFormatted} %\n                                                </Typography>\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                lg={0.5}\n                                                sm={0.5}\n                                                sx={{ pl: 0.5, mt: 1.1, justifyContent: 'center', display: 'flex' }}\n                                            >\n                                                <Tooltip\n                                                    sx={{ height: 20, color: theme.palette.success.main, mt: 0.8 }}\n                                                    title={\n                                                        <Typography\n                                                            sx={{\n                                                                color: theme.palette.success.main\n                                                            }}\n                                                        >\n                                                            `Share rate shows how many tokens you own from all minted tokens at the current\n                                                            moment. If user owns 1 sSTX out of 100sSTX, then that address has a share rate\n                                                            of 1% and earn 1% of all BUSD rewards at that moment.`\n                                                        </Typography>\n                                                    }\n                                                >\n                                                    <InfoIcon />\n                                                </Tooltip>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Card>\n                            </Grid>\n                            <Grid item container sx={{ display: 'flex', justifyContent: 'center', mt: 3 }} lg={11.5}>\n                                <Grid item lg={12} xs={12} md={12} sm={12}>\n                                    <Card\n                                        sx={{\n                                            borderLeft: 1,\n                                            borderRight: 1,\n                                            borderBottom: 3,\n                                            height: '100%',\n                                            width: '100%',\n                                            borderColor: theme.palette.success.light,\n                                            borderRadius: 5,\n                                            boxShadow: '0px 10px 20px rgb(0, 230, 117)'\n                                        }}\n                                    >\n                                        <Grid container sx={{ my: 3.3, display: 'flex', justifyContent: 'center' }}>\n                                            <Grid item lg=\"auto\" xs=\"auto\" sm=\"auto\" md=\"auto\" sx={{ mt: 1.3 }}>\n                                                <BusdLogo />\n                                            </Grid>\n                                            <Grid item lg=\"auto\" xs=\"auto\" md=\"auto\" sm=\"auto\" sx={{ ml: 0.5, mt: 3.3 }}>\n                                                <Typography variant=\"h2\" color={theme.palette.success.main}>\n                                                    Dividends\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item lg={12} md={12} sx={{ mt: 1, justifyContent: 'center', display: 'flex' }}>\n                                                <Grid item lg={8} xs={10} md={7}>\n                                                    <Typography\n                                                        variant=\"h5\"\n                                                        sx={{ mt: 2 }}\n                                                        color={theme.palette.grey[50]}\n                                                        textAlign=\"center\"\n                                                    >\n                                                        Any pending BUSD Dividends will appear here. Claim the BUSD rewards by clicking\n                                                        below buttons.\n                                                    </Typography>\n                                                </Grid>\n                                            </Grid>\n                                            <Grid item lg={12} md={12} xs={10} sx={{ mt: 5, justifyContent: 'center', display: 'flex' }}>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    STAX Volume Dividends\n                                                </Typography>\n                                                <Tooltip\n                                                    sx={{ height: 20, color: theme.palette.success.main }}\n                                                    title={\n                                                        <Typography\n                                                            sx={{\n                                                                color: theme.palette.success.main\n                                                            }}\n                                                        >\n                                                            There is 1% fee on every STAX BUY / SELL transaction and those fees are\n                                                            distributed as BUSD Dividends in a direct proportion to sSTX holders.\n                                                        </Typography>\n                                                    }\n                                                >\n                                                    <InfoIcon />\n                                                </Tooltip>\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                lg=\"auto\"\n                                                md=\"auto\"\n                                                xs=\"auto\"\n                                                sx={{ mt: 1, mx: 1, justifyContent: 'center', display: 'flex' }}\n                                            >\n                                                <Typography variant=\"h2\" sx={{ mr: 1 }} color={theme.palette.grey[50]} textAlign=\"right\">\n                                                    0\n                                                </Typography>\n                                                <BusdSmallLogo />\n                                                <Button\n                                                    sx={{\n                                                        ml: 1,\n                                                        fontSize: 18,\n                                                        height: 30,\n                                                        minWidth: 80,\n                                                        bgcolor: theme.palette.success.main,\n                                                        backgroundColor: theme.palette.success.main,\n                                                        color: theme.palette.grey[900]\n                                                    }}\n                                                >\n                                                    Claim\n                                                </Button>\n                                            </Grid>\n                                            <Grid item lg={12} md={12} xs={10} sx={{ mt: 2, justifyContent: 'center', display: 'flex' }}>\n                                                <Typography variant=\"h5\" color={theme.palette.grey[50]} textAlign=\"center\">\n                                                    STAX Pool Dividends\n                                                </Typography>\n                                                <Tooltip\n                                                    sx={{ height: 20, color: theme.palette.success.main }}\n                                                    title={\n                                                        <Typography\n                                                            sx={{\n                                                                color: theme.palette.success.main\n                                                            }}\n                                                        >\n                                                            There is 1% fee on every STAX BUY / SELL transaction and those fees are\n                                                            distributed as BUSD Dividends in a direct proportion to sSTX holders.\n                                                        </Typography>\n                                                    }\n                                                >\n                                                    <InfoIcon />\n                                                </Tooltip>\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                lg=\"auto\"\n                                                md=\"auto\"\n                                                xs=\"auto\"\n                                                sx={{ mt: 1, justifyContent: 'center', display: 'flex' }}\n                                            >\n                                                <Typography variant=\"h2\" sx={{ mr: 1 }} color={theme.palette.grey[50]} textAlign=\"right\">\n                                                    {busdDividends}\n                                                </Typography>\n                                                <BusdSmallLogo />\n                                                <Button\n                                                    sx={{\n                                                        ml: 1,\n                                                        fontSize: 18,\n                                                        height: 30,\n                                                        minWidth: 80,\n                                                        bgcolor: theme.palette.success.main,\n                                                        backgroundColor: theme.palette.success.main,\n                                                        color: theme.palette.grey[900]\n                                                    }}\n                                                >\n                                                    Claim\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Card>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </MainCard>\n        </>\n    );\n};\n\nexport default SharesCard;\n","import { Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n// project imports\nimport SSTXCard from './SharesCard';\n// ==============================|| TYPOGRAPHY ||============================== //\n\nconst Typography = () => {\n    useTheme();\n    return (\n        <Grid container sx={{ justifyContent: 'center', display: 'flex' }}>\n            <Grid item lg={12}>\n                <SSTXCard />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Typography;\n"],"sourceRoot":""}